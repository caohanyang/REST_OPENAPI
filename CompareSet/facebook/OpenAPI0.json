{
  "paths": {

            "name": "2004",
            "description": "Sending of requests has been temporarily disabled for this application.",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },
    "/v2.9/{open-graph-object-id}/comments": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "\norder\nenum\n\nOrder",
            "description": "of returned comments\n\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "total_count\nunsigned",
            "description": "int32\n\nTotal number of people who commented\n\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "can_comment\nbool\n\nCan",
            "description": "the viewer comment\n\n",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },

    "/v2.9/{story-attachment-id}/subattachments": {
      "GET": {}
    },
    "/v2.9/me/feed": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "\nlink\n\nThe",
            "description": "link\n\nThe link field is still supported, but its sub-fields have been deprecated.\n\nstring\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "picture\n\nDetermines",
            "description": "the preview image associated with the link.\n\nstring\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "name\n\nOverwrites",
            "description": "the title of the link preview.\n\nstring\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "caption\n\nOverwrites",
            "description": "the caption under the title in the link preview.\n\nstring\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "description\n\nOverwrites",
            "description": "the description in the link preview\n\nstring\n",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },
    "/{page_call_to_action_id}": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "100",
            "description": "Invalid parameter",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "210",
            "description": "User not visible",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },
    "/{canvas_carousel_id}": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "bottom_padding\nfloat\n\nThe",
            "description": "padding\nfloat\n\nThe padding below the carousel\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "child_elements\nlist<id>\n\nThe",
            "description": "child_elements\nlist<id>\n\nThe child elements of the carousel\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "name\nstring\n\nName",
            "description": "of the carousel element\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "style\nenum",
            "description": "{FIT_TO_WIDTH, FIT_TO_HEIGHT}\n\nThe presentation style of the carousel\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "top_padding\nfloat\n\nThe",
            "description": "padding\nfloat\n\nThe padding above the carousel\n",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },


    "/{saved_message_response_id}": {
      "DELETE": {
        "parameters": [
          {
            "in": "query",
            "name": "100",
            "description": "Invalid parameter",
            "type": "integer",
            "required": "required"
          }
        ]
      },
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "image\nnumeric",
            "description": "string or integer\n\nA MESSAGE_IMAGE ID to use with the saved response. File upload is also supported\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "message\nstring\n\nThe",
            "description": "actual message of the saved response\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "remove_image\nboolean\nDefault",
            "description": "value: false\n\nSet to true to remove the response image\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "title\nstring\n\nA",
            "description": "title\nstring\n\nA title for the saved response (optional). Shown to admins only\n",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },





    "/{page_admin_note_id}": {
      "DELETE": {
        "parameters": [
          {
            "in": "query",
            "name": "100",
            "description": "Invalid parameter",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },

    "/{photo_id}": {
      "DELETE": {
        "parameters": [
          {
            "in": "query",
            "name": "200",
            "description": "Permissions error",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "190",
            "description": "Invalid OAuth 2.0 Access Token",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "100",
            "description": "Invalid parameter",
            "type": "integer",
            "required": "required"
          }
        ]
      },
      "post": {
        "parameters": [
          {
            "in": "query",
            "name": "tag_text\nstring\n\nTag",
            "description": "text\nstring\n\nTag text\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "tag_uid\nint\n\nTag",
            "description": "UID\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "tags\nlist<Object>\n\nAn",
            "description": "array of tag objects\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "x\nfloat\n\nThe",
            "description": "x-axis offset for the tag\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "y\nfloat\n\nThe",
            "description": "y-axis offset for the tag\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "tag_uid\nint\n\nThe",
            "description": "user_id of the tagged person\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "tag_text\nstring\n\nText",
            "description": "associated with the tag\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "x\nfloat\n\nThe",
            "description": "x-axis offset for the tag\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "y\nfloat\n\nThe",
            "description": "y-axis offset for the tag\n",
            "type": "integer",
            "required": "required"
          }
        ]
      },
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "android_key_hash\nstring\n\nAndroid",
            "description": "key_hash\nstring\n\nAndroid key hash\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "backdated_time\ndatetime\n\nA",
            "description": "user-specified creation time for this photo\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "backdated_time_granularity\nenum{year,",
            "description": "month, day, hour, min, none}\nDefault value: none\n\nUse only the part of the backdated_time parameter to the specified granularity\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "checkin_entry_point\nenum",
            "description": "{BRANDING_CHECKIN, BRANDING_STATUS, BRANDING_PHOTO, BRANDING_OTHER}\nDefault value: BRANDING_OTHER\n\nThe method that the user used to add a place tag to their story.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "composer_session_id\nstring\n\nComposer",
            "description": "session_id\nstring\n\nComposer session ID\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "direct_share_status\nint64\n\nThe",
            "description": "status\nint64\n\nThe status to allow sponsor directly boost the post.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "ios_bundle_id\nstring\n\niOS",
            "description": "Bundle ID\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "is_checkin\nboolean\nDefault",
            "description": "value: false\n\nIs this photo a checkin?\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "is_cropped\nboolean\n\nIs",
            "description": "this photo cropped?\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "is_explicit_location\nboolean\nDefault",
            "description": "value: false\n\nIs this an explicit location?\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "og_action_type_id\nnumeric",
            "description": "string or integer\n\nThe Open Graph action type\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "og_icon_id\nnumeric",
            "description": "string or integer\n\nThe Open Graph icon\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "og_object_id\nOG",
            "description": "object_id\nOG object ID or URL string\n\nThe Open Graph object ID\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "og_phrase\nstring\n\nThe",
            "description": "Open Graph phrase\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "og_set_profile_badge\nboolean\nDefault",
            "description": "value: false\n\nFlag to set if the post should create a profile badge\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "og_suggestion_mechanism\nstring\n\nThe",
            "description": "Open Graph suggestion\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "place\nplace",
            "description": "tag\n\nPage ID of a place associated with the photo\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "privacy\nPrivacy",
            "description": "Parameter\n\nDetermines the privacy settings of the photo. If not supplied, this defaults to the privacy level granted to the app in the Login dialog. This field cannot be used to set a more open privacy setting than the one granted\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "prompt_id\nstring\n\nThe",
            "description": "prompt_id\nstring\n\nThe prompt id if the post is generated from prompt\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "prompt_tracking_string\nstring\n\nThe",
            "description": "prompt_tracking_string\nstring\n\nThe prompt tracking string if the post is generated from prompt\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "proxied_app_id\nnumeric",
            "description": "string or integer\n\nProxied app ID\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "published\nboolean\n\nSet",
            "description": "to false if you don't want the photo to be published immediately\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "referenced_sticker_id\nnumeric",
            "description": "string or integer\n\nSticker id of the sticker in the post\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "sponsor_id\nnumeric",
            "description": "string or integer\n\nFacebook Page id that is tagged as sponsor in the photo post\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "sponsor_relationship\nint64\n\nSponsor",
            "description": "Relationship, such as Presented By or Paid PartnershipWith\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "tags\nlist<int>\n\nTags",
            "description": "on this photo\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "target\n\nSets",
            "description": "the object that this photo is attached to. Only relavant when publishing an unpublished photo\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "target_post\npost_id\n\nSets",
            "description": "the post this photo is attached to. Only relavant when publishing an unpublished photo\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "time_since_original_post\nint64\n\nSame",
            "description": "as backdated_time but with a time delta instead of absolute time\n",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },


    "/v2.9/{question-option-id}": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "\nid\n\nThe",
            "description": "ID of this option.\n\nstring\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "created_time\n\nTime",
            "description": "when option was created.\n\ndatetime\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "from\n\nProfile",
            "description": "that created the question.\n\nProfile\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "name\n\nText",
            "description": "name\n\nText name of the option.\n\nstring\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "object\n\nAny",
            "description": "Page associated with this option.\n\nPage\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "vote_count\n\nNumber",
            "description": "of votes this option has received.\n\ninteger\n",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },

    "/{page_id}/publisher_space": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "210",
            "description": "User not visible",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "100",
            "description": "Invalid parameter",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "370",
            "description": "Invalid call to update this page",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "371",
            "description": "Invalid Page location update",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "200",
            "description": "Permissions error",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "320",
            "description": "Photo edit failure",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "368",
            "description": "The action attempted has been deemed abusive or is otherwise disallowed",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "190",
            "description": "Invalid OAuth 2.0 Access Token",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "374",
            "description": "Invalid store location descriptor update since this Page is not a location Page.",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },

    "/{instagram_media_id}/instagram_comments": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "100",
            "description": "Invalid parameter",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },
    "/{page_label_id}/users": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "100",
            "description": "Invalid parameter",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },
    "/{canvas_photo_id}": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "bottom_padding\nfloat\n\nThe",
            "description": "padding\nfloat\n\nThe padding below the photo element\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "name\nstring\n\nName",
            "description": "of the photo element\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "open_url_action\nObject\n\nThe",
            "description": "action\nObject\n\nThe action associated with the photo\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "photo_id\nid\n\nID",
            "description": "of Facebook photo used in the photo element\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "style\nenum",
            "description": "{FIT_TO_WIDTH, FIT_TO_WIDTH_EXPANDABLE, FIT_TO_HEIGHT, BUTTON_OUTLINE, BUTTON_FILLED}\n\nThe presentation style of the photo\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "top_padding\nfloat\n\nThe",
            "description": "padding\nfloat\n\nThe padding above the photo element\n",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },

    "/{application_id}": {
      "DELETE": {
        "parameters": [
          {
            "in": "query",
            "name": "type\nenum{test-users}\n\nAccount",
            "description": "type\nenum{test-users}\n\nAccount type\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "uid\nint\n\nAccount",
            "description": "UID\nRequired\n",
            "type": "integer",
            "required": "required"
          }
        ]
      },
      "post": {
        "parameters": [
          {
            "in": "query",
            "name": "installed\nboolean\n\nAutomatically",
            "description": "installs the app for the test user once it is created or associated\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "minor\nboolean\n\nIs",
            "description": "this test user a minor\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "name\nstring\n\nThe",
            "description": "name\nstring\n\nThe name for the test user. When left blank, a random name will be automatically generated\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "owner_access_token\nstring\n\nWhen",
            "description": "associating existing test users with other apps, this is the app access token of any app that is already associated with the test user. The {app-id} in the publishing request in this case should be the app that will is the target to associate with the test user. The API request should also be signed with the app access token of that target app. Required when associating test users, but should not be used when creating new test users\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "permissions\nList<Permission>\nDefault",
            "description": "value: Set\n\nList of permissions that are automatically granted for the app when it is created or associated\n",
            "type": "integer",
            "required": "required"
          },
          {},
          {
            "in": "query",
            "name": "uid\nint\n\nID",
            "description": "of an existing test user to associate with another app. Required when associating test users, but should not be used when creating new test users\n",
            "type": "integer",
            "required": "required"
          }
        ]
      },
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "100",
            "description": "Invalid parameter",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "159",
            "description": "Invalid protocol, must be https",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },
    "/{photo_id}/likes": {
      "DELETE": {
        "parameters": [
          {
            "in": "query",
            "name": "100",
            "description": "Invalid parameter",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "121",
            "description": "Invalid photo id",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "2010",
            "description": "Photos calls have been temporarily disabled for this application",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "190",
            "description": "Invalid OAuth 2.0 Access Token",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "200",
            "description": "Permissions error",
            "type": "integer",
            "required": "required"
          }
        ]
      },
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "100",
            "description": "Invalid parameter",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "320",
            "description": "Photo edit failure",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "7600",
            "description": "This photo is blocked from being posted because it violates a Facebook policy.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "368",
            "description": "The action attempted has been deemed abusive or is otherwise disallowed",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "190",
            "description": "Invalid OAuth 2.0 Access Token",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "200",
            "description": "Permissions error",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },


    "/{video_copyright_id}": {
      "DELETE": {
        "parameters": [
          {
            "in": "query",
            "name": "100",
            "description": "Invalid parameter",
            "type": "integer",
            "required": "required"
          }
        ]
      },
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "100",
            "description": "Invalid parameter",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },
    "/v2.9/{page-label-id}/users": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "100",
            "description": "Invalid parameter",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },
    "/{application_id}/accounts": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "100",
            "description": "Invalid parameter",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "159",
            "description": "Invalid protocol, must be https",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },
    "/{canvas_footer_id}": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "background_color\nstring\n\nBackground",
            "description": "color\nstring\n\nBackground color of the button\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "child_elements\nlist<id>\n\nThe",
            "description": "child_elements\nlist<id>\n\nThe child elements inside a footer\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "name\nstring\n\nName",
            "description": "of the footer element\n",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },
    "/v2.9/{limited-profile-id}/picture": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "height\ninteger\n\nThe",
            "description": "height\ninteger\n\nThe height of this picture in pixels.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "redirect\nboolean\nDefault",
            "description": "value: true\n\nBy default the picture edge will return a picture instead of a JSON response. If you want the picture edge to return JSON that describes the image set redirect=0 when you make the request.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "type\nenum{small,",
            "description": "normal, album, large, square}\n\nThe size of this picture. It can be one of the following values: small, normal, large, square.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "width\ninteger\n\nThe",
            "description": "width\ninteger\n\nThe width of this picture in pixels.\n",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },

    "/{canvas_video_id}": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "bottom_padding\nfloat\n\nThe",
            "description": "padding\nfloat\n\nThe padding below the video\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "name\nstring\n\nName",
            "description": "of the video element\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "style\nenum",
            "description": "{FIT_TO_WIDTH, FIT_TO_HEIGHT}\n\nThe presentation style of the video\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "top_padding\nfloat\n\nThe",
            "description": "padding\nfloat\n\nThe padding above the video\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "video_id\nid\n\nID",
            "description": "of Facebook video used in the video element\n",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },
    "/{page_id}/instant_articles_publish": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "210",
            "description": "User not visible",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "100",
            "description": "Invalid parameter",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "370",
            "description": "Invalid call to update this page",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "371",
            "description": "Invalid Page location update",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "200",
            "description": "Permissions error",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "320",
            "description": "Photo edit failure",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "368",
            "description": "The action attempted has been deemed abusive or is otherwise disallowed",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "190",
            "description": "Invalid OAuth 2.0 Access Token",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "374",
            "description": "Invalid store location descriptor update since this Page is not a location Page.",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },
    "/{album_id}": {
      "post": {
        "parameters": [
          {
            "in": "query",
            "name": "aid\nstring\n\nLegacy",
            "description": "album ID. Deprecated\nDeprecated\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "allow_spherical_photo\nboolean\nDefault",
            "description": "value: false\n\nIndicates that we should allow this photo to be treated as a spherical photo. This will not change the behavior unless the server is able to interpret the photo as spherical, such as via Photosphere XMP metadata. Regular non-spherical photos will still be treated as regular photos even if this parameter is true.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "application_id\nnon-empty",
            "description": "string\n\niTunes App ID. This is used by the native Share dialog that's part of iOS\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "audience_exp\nboolean\nDefault",
            "description": "value: false\n\nAudience exp\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "backdated_time\ndatetime\n\nA",
            "description": "user-specified creation time for this photo\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "backdated_time_granularity\nenum{year,",
            "description": "month, day, hour, min, none}\nDefault value: none\n\nUse only the part of the backdated_time parameter to the specified granularity\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "caption\nUTF-8",
            "description": "string\n\nThe description of the photo\nSupports Emoji\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "composer_session_id\nstring\n\nComposer",
            "description": "session_id\nstring\n\nComposer session ID\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "direct_share_status\nint64\n\nThe",
            "description": "status\nint64\n\nThe status to allow sponsor directly boost the post.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "feed_targeting\nfeed",
            "description": "target\n\nObject that controls News Feed targeting for this post. Anyone in these groups will be more likely to see this post. People not in these groups will be less likely to see this post, but may still see it anyway. Any of the targeting fields shown here can be used, but none are required. feed_targeting applies to Pages only.\n",
            "type": "integer",
            "required": "required"
          },
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {
            "in": "query",
            "name": "locales\nlist<string>\n\nValues",
            "description": "for targeted locales. Use type of adlocale to find Targeting Options and use the returned key to specify.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "age_min\nint64\n\nMust",
            "description": "be 13 or higher. Default is 0.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "age_max\nint64\n\nMaximum",
            "description": "age.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "genders\nlist<int64>\n\nTarget",
            "description": "specific genders. 1 targets all male viewers and 2 females. Default is to target both.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "college_years\nlist<int64>\n\nArray",
            "description": "of integers. Represent graduation years from college.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "education_statuses\nlist<int64>\n\nArray",
            "description": "of integers which represent current educational status. Use 1 for high school, 2 for undergraduate, and 3 for alum (or localized equivalents).\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "interested_in\nlist<int64>\n\nIndicates",
            "description": "targeting based on the 'interested in' field of the user profile. You can specify an integer of 1 to indicate male, 2 indicates female. Default is all types. Please note 'interested in' targeting is not available in France due to local laws.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "relationship_statuses\nlist<int64>\n\nArray",
            "description": "of integers for targeting based on relationship status. Use 1 for single, 2 for 'in a relationship', 3 for married, and 4 for engaged. Default is all types.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "interests\nlist<int64>\n\nOne",
            "description": "or more IDs of pages to target fans of pages.Use type of page to get possible IDs as find Targeting Options and use the returned id to specify.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "full_res_is_coming_later\nboolean\nDefault",
            "description": "value: false\n\nFull res is coming later\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "initial_view_heading_override_degrees\nint64\n\nManually",
            "description": "specify the initial view heading in degrees from 0 to 360. This overrides any value present in the photo embedded metadata or provided in the spherical_metadata parameter\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "initial_view_pitch_override_degrees\nint64\n\nManually",
            "description": "specify the initial view pitch in degrees from -90 to 90. This overrides any value present in the photo embedded metadata or provided in the spherical_metadata parameter\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "initial_view_vertical_fov_override_degrees\nint64\n\nManually",
            "description": "specify the initial view vertical FOV in degrees from 60 to 120. This overrides any value present in the photo embedded metadata or provided in the spherical_metadata parameter\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "is_explicit_location\nboolean\n\nIs",
            "description": "this an explicit location?\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "is_explicit_place\nboolean\n\nIf",
            "description": "set to true , the tag is a place, not a person\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "manual_privacy\nboolean\nDefault",
            "description": "value: false\n\nManual privacy\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "message\nUTF-8",
            "description": "string\n\nDeprecated. Please use the caption param instead.\nDeprecated Supports Emoji\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "name\nUTF-8",
            "description": "string\n\nDeprecated. Please use the caption param instead.\nDeprecated Supports Emoji\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "no_story\nboolean\n\nIf",
            "description": "set to true , this will suppress the News Feed story that is automatically generated on a profile when people upload a photo using your app. Useful for adding old photos where you may not want to generate a story\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "offline_id\nint64\nDefault",
            "description": "value: 0\n\nOffline ID\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "og_action_type_id\nnumeric",
            "description": "string or integer\n\nThe Open Graph action type\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "og_icon_id\nnumeric",
            "description": "string or integer\n\nThe Open Graph icon\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "og_object_id\nOG",
            "description": "object_id\nOG object ID or URL string\n\nThe Open Graph object ID\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "og_phrase\nstring\n\nThe",
            "description": "Open Graph phrase\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "og_set_profile_badge\nboolean\nDefault",
            "description": "value: false\n\nFlag to set if the post should create a profile badge\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "og_suggestion_mechanism\nstring\n\nThe",
            "description": "Open Graph suggestion\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "place\nplace",
            "description": "tag\n\nPage ID of a place associated with the photo\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "privacy\nPrivacy",
            "description": "Parameter\n\nDetermines the privacy settings of the photo. If not supplied, this defaults to the privacy level granted to the app in the Login dialog. This field cannot be used to set a more open privacy setting than the one granted\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "profile_id\nint\n\nDeprecated.",
            "description": "Use target_id instead\nDeprecated\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "published\nboolean\nDefault",
            "description": "value: true\n\nSet to false if you don't want the photo to be published immediately\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "qn\nstring\n\nPhotos",
            "description": "waterfall ID\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "scheduled_publish_time\nint64\n\nTime",
            "description": "at which an unpublished post should be published. Applies to Pages only\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "spherical_metadata\nJSON",
            "description": "object\n\nA set of params describing an uploaded spherical photo. This field is not required; if it is not present we will try to generate spherical metadata from the metadata embedded in the image. If it is present, it takes precedence over any embedded metadata. Please click to the left to expand this list and see more information on each parameter. See also the Google Photo Sphere spec for more info on the meaning of the params: https://developers.google.com/streetview/spherical-metadata\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "ProjectionType\nstring\n\nAccepted",
            "description": "values include equirectangular (full spherical photo), cylindrical (panorama), and cubestrip (also known as cubemap, e.g. for synthetic or rendered content; stacked vertically with 6 faces).\nRequired\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "CroppedAreaImageWidthPixels\ninteger\n\n---",
            "description": "In equirectangular projection: As described in Google Photo Sphere XMP Metadata spec.\n\n--- In cylindrical projection: Very similar to equirectangular. This value should be equal to the actual width of the image, and together with FullPanoWidthPixels, it describes the horizontal FOV of content of the image: HorizontalFOV = 360 * CroppedAreaImageWidthPixels / FullPanoWidthPixels.\n\n--- In cubestrip projection: This has no relationship to the pixel dimensions of the image. It is simply a representation of the horizontal FOV of the content of the image. HorizontalFOV = CroppedAreaImageWidthPixels / PixelsPerDegree, where PixelsPerDegree is defined by FullPanoWidthPixels.\nRequired\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "CroppedAreaImageHeightPixels\ninteger\n\n---",
            "description": "In equirectangular projection: As described in Google Photo Sphere XMP Metadata spec.\n\n--- In cylindrical projection: This value will NOT be equal to the actual height of the image. Instead, together with FullPanoHeightPixels, it describes the vertical FOV of the image: VerticalFOV = 180 * CroppedAreaImageHeightPixels / FullPanoHeightPixels. In other words, this value is equal to the CroppedAreaImageHeightPixels value that this image would have, if it were projected into equirectangular format while maintaining the same FullPanoWidthPixels.\n\n--- In cubestrip projection: This has no relationship to the pixel dimensions of the image. It is simply a representation of the vertical FOV of the content of the image. VerticalFOV = CroppedAreaImageHeightPixels / PixelsPerDegree, where PixelsPerDegree is defined by FullPanoWidthPixels.\nRequired\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "FullPanoWidthPixels\ninteger\n\n---",
            "description": "In equirectangular projection: As described in Google Photo Sphere XMP Metadata spec.\n\n--- In cylindrical projection: Very similar to equirectangular. This value defines a ratio of horizontal pixels to degrees in the space of the image, and in general the pixel to degree ratio in the scope of the metadata object. Concretely, PixelsPerDegree = FullPanoWidthPixels / 360. This is also equivalent to the circumference of the cylinder used to model this projection.\n\n--- In cubestrip projection: This value has no relationship to the pixel dimensions of the image. It only defines the pixel to degree ratio in the scope of the metadata object. It represents the number of pixels in 360 degrees, so pixels per degree is then given by: PixelsPerDegree = FullPanoWidthPixels / 360. As an example, if FullPanoWidthPixels were chosen to be 3600, we would have PixelsPerDegree = 3600 / 360 = 10. An image with a vertical field of view of 65 degrees would then have a CroppedAreaImageHeightPixels value of 65 * 10 = 650.\nRequired\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "FullPanoHeightPixels\ninteger\n\n---",
            "description": "In equirectangular projection: As described in Google Photo Sphere XMP Metadata spec.\n\n--- In cylindrical projection: This value is equal to the FullPanoHeightPixels value that this image would have, if it were projected into equirectangular format while maintaining the same FullPanoWidthPixels. It is always equal to FullPanoWidthPixels / 2.\n\n--- In cubestrip projection: This value has no relationship to the pixel dimensions of the image. It is a second, redundant representation of PixelsPerDegree. FullPanoHeightPixels = 180 * PixelsPerDegree. It must be consistent with FullPanoWidthPixels: FullPanoHeightPixels = FullPanoWidthPixels / 2.\nRequired\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "CroppedAreaLeftPixels\ninteger\n\n---",
            "description": "In equirectangular projection: As described in Google Photo Sphere XMP Metadata spec.\n\n--- In cylindrical projection: This value is equal to the CroppedAreaLeftPixels value that this image would have, if it were projected into equirectangular format while maintaining the same FullPanoWidthPixels. It is just a representation of the same angular offset that it represents in equirectangular projection in the Google Photo Sphere spec. Concretely, AngularOffsetFromLeftDegrees = CroppedAreaLeftPixels / PixelsPerDegree, where PixelsPerDegree is defined by FullPanoWidthPixels.\n\n--- In cubestrip projection: This value has no relationship to the pixel dimensions of the image. It is just a representation of the same angular offset that it represents in equirectangular projection in the Google Photo Sphere spec. AngularOffsetFromLeftDegrees = CroppedAreaLeftPixels / PixelsPerDegree, where PixelsPerDegree is defined by FullPanoWidthPixels.\nRequired\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "CroppedAreaTopPixels\ninteger\n\n---",
            "description": "In equirectangular projection: As described in Google Photo Sphere XMP Metadata spec.\n\n--- In cylindrical projection: This value is equal to the CroppedAreaTopPixels value that this image would have, if it were projected into equirectangular format while maintaining the same FullPanoWidthPixels. It is just a representation of the same angular offset that it represents in equirectangular projection in the Google Photo Sphere spec. Concretely, AngularOffsetFromTopDegrees = CroppedAreaTopPixels / PixelsPerDegree, where PixelsPerDegree is defined by FullPanoWidthPixels.\n\n--- In cubestrip projection: This value has no relationship to the pixel dimensions of the image. It is just a representation of the same angular offset that it represents in equirectangular projection in the Google Photo Sphere spec. AngularOffsetFromTopDegrees = CroppedAreaTopPixels / PixelsPerDegree, where PixelsPerDegree is defined by FullPanoWidthPixels.\nRequired\n",
            "type": "integer",
            "required": "required"
          },
          {},
          {},
          {},
          {},
          {},
          {
            "in": "query",
            "name": "InitialViewRollDegrees\nfloat\n\nThis",
            "description": "is is not currently supported\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "InitialViewVerticalFOVDegrees\nfloat\n\nYou",
            "description": "can set the intial FOV of the image. Note that we support this vertical FOV parameter, but InitialViewHorizontalFOV listed in the Photo Sphere XMP Metadata spec is not currently supported\n",
            "type": "integer",
            "required": "required"
          },
          {},
          {},
          {
            "in": "query",
            "name": "sponsor_id\nnumeric",
            "description": "string or integer\n\nFacebook Page id that is tagged as sponsor in the photo post\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "sponsor_relationship\nint64\n\nSponsor",
            "description": "Relationship, such as Presented By or Paid PartnershipWith\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "tags\nlist<Object>\n\nTags",
            "description": "on this photo\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "x\nfloat\n\nThe",
            "description": "x-axis offset for the tag\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "y\nfloat\n\nThe",
            "description": "y-axis offset for the tag\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "tag_uid\nint\n\nThe",
            "description": "user_id of the tagged person\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "tag_text\nstring\n\nText",
            "description": "associated with the tag\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "target_id\nint\n\nDon't",
            "description": "use this. Specifying a target_id allows you to post the photo to an object that's not the user in the access token. It only works when posting directly to the /photos endpoint. Instead of using this parameter you should be using the edge on an object directly, like /page/photos .\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "targeting\ntarget\n\nAllows",
            "description": "you to target posts to specific audiences. Applies to Pages only\n",
            "type": "integer",
            "required": "required"
          },
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {
            "in": "query",
            "name": "locales\nlist<string>\n\nValues",
            "description": "for targeted locales. Use type of adlocale to find Targeting Options and use the returned key to specify.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "excluded_countries\nlist<string>\n\nValues",
            "description": "for excluded countries. You can specify up to 25 countries. Use ISO 3166 format codes .\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "excluded_regions\nlist<int64>\n\nValues",
            "description": "for excluded regions. Use type of adregion and list of GLOBAL to find Targeting Options and use the returned key to specify. For example:\nsearch/?type=adregion&q=California&list=GLOBAL\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "excluded_cities\nlist<int64>\n\nValues",
            "description": "for excluded cities. Use type of adcity to find Targeting Options and use the returned key to specify.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "excluded_zipcodes\nlist<string>\n\nValues",
            "description": "for excluded zipcodes. Use type of adzipcode to find Targeting Options and use the returned key to specify.\n",
            "type": "integer",
            "required": "required"
          },
          {},
          {
            "in": "query",
            "name": "timezones\nlist<int64>\n\nID",
            "description": "for the timezone. See here .\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "age_min\nint64\n\nMust",
            "description": "be 13 or higher. Default is 0.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "age_max\nint64\n\nMaximum",
            "description": "age.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "genders\nlist<int64>\n\nTarget",
            "description": "specific genders. 1 targets all male viewers and 2 females. Default is to target both.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "url\nstring\n\nThe",
            "description": "URL of a photo that is already uploaded to the Internet. You must specify this or a file attachment\n",
            "type": "integer",
            "required": "required"
          }
        ]
      },
      "POST": {}
    },
    "/{custom_audience_id}": {
      "DELETE": {
        "parameters": [
          {
            "in": "query",
            "name": "\nPayload representing users to delete\n",
            "description": "representing users to delete\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "\nUID , EMAIL_SHA256 , PHONE_SHA256 , MOBILE_ADVERTISER_ID . One can also pass an array of multiple keys for multi-key match. Supported key types includes:\nEXTERN_ID\nEMAIL\nPHONE\nGEN\nDOBY\nDOBM\nDOBD\nLN\nFN\nFI\nCT\nST\nZIP\nMADID\nCOUNTRY\nThe multi-key array is of the form [\"EMAIL\", \"LN\", \"FN\", \"ZIP\"]\n",
            "description": ", EMAIL_SHA256 , PHONE_SHA256 , MOBILE_ADVERTISER_ID . One can also pass an array of multiple keys for multi-key match. Supported key types includes:\nEXTERN_ID\nEMAIL\nPHONE\nGEN\nDOBY\nDOBM\nDOBD\nLN\nFN\nFI\nCT\nST\nZIP\nMADID\nCOUNTRY\nThe multi-key array is of the form [\"EMAIL\", \"LN\", \"FN\", \"ZIP\"]\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "\nIs the key raw? If the keys are combinational keys like \"LN_FN_ZIP\", set this to false , otherwise set this to true . Default to false\n",
            "description": "the key raw? If the keys are combinational keys like \"LN_FN_ZIP\", set this to false , otherwise set this to true . Default to false\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "\nEstimated total num of users to be uploaded in this session, used by our system to better processing this session. If the multi-key feature is used, a two-dimensional array of the form [[\"test1@example.com\", \"john\", \"smith\", \"95124\"], [\"\", \"lucy\", \"brown\", \"95124\"]] should be passed. In case a key is unknown, it should be left blank.\n",
            "description": "array>\n\nEstimated total num of users to be uploaded in this session, used by our system to better processing this session. If the multi-key feature is used, a two-dimensional array of the form [[\"test1@example.com\", \"john\", \"smith\", \"95124\"], [\"\", \"lucy\", \"brown\", \"95124\"]] should be passed. In case a key is unknown, it should be left blank.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "\nApp ids used by the users being uploaded. This field is required when schema is a Facebook UID. e.g. [1234,5678]\n",
            "description": "ids\nlist<int>\n\nApp ids used by the users being uploaded. This field is required when schema is a Facebook UID. e.g. [1234,5678]\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "",
            "description": "ID>\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "\nIndicates by which method the custom audience was created, defined by the type and subtype of the data_source\n",
            "description": "by which method the custom audience was created, defined by the type and subtype of the data_source\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "\nType of the custom audience\n",
            "description": "{UNKNOWN, FILE_IMPORTED, EVENT_BASED, SEED_BASED, THIRD_PARTY_IMPORTED, COPY_PASTE, CONTACT_IMPORTER}\n\nType of the custom audience\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "\nSubtype of the custom audience\n",
            "description": "{ANYTHING, NOTHING, HASHES, USER_IDS, HASHES_OR_USER_IDS, MOBILE_ADVERTISER_IDS, EXTERNAL_IDS, MULTI_HASHES, TOKENS, EXTERNAL_IDS_MIX, WEB_PIXEL_HITS, MOBILE_APP_EVENTS, MOBILE_APP_COMBINATION_EVENTS, VIDEO_EVENTS, WEB_PIXEL_COMBINATION_EVENTS, PLATFORM, ENGAGEMENT_EVENT_USERS, CUSTOM_AUDIENCE_USERS, PAGE_FANS, CONVERSION_PIXEL_HITS, APP_USERS, S_EXPR, DYNAMIC_RULE, CAMPAIGN_CONVERSIONS, WEB_PIXEL_HITS_CUSTOM_AUDIENCE_USERS, MOBILE_APP_CUSTOM_AUDIENCE_USERS, COMBINATION_CUSTOM_AUDIENCE_USERS, VIDEO_EVENT_USERS, FB_PIXEL_HITS, IG_PROMOTED_POST, PLACE_VISITS, OFFLINE_EVENT_USERS, EXPANDED_AUDIENCE, SEED_LIST, PARTNER_CATEGORY_USERS, PAGE_SMART_AUDIENCE, MULTICOUNTRY_COMBINATION, PLATFORM_USERS, MAIL_CHIMP_EMAIL_HASHES, CONSTANT_CONTACTS_EMAIL_HASHES, COPY_PASTE_EMAIL_HASHES, CONTACT_IMPORTER}\n\nSubtype of the custom audience\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "\nInformation about the session. Sessions are used when you have a lot of users to upload. For example, if you have 1 million users to upload, you need to split them into at least 100 requests because each request can only take 10k users. Specify the session info so that you can track if the session has finished or not.\n",
            "description": "about the session. Sessions are used when you have a lot of users to upload. For example, if you have 1 million users to upload, you need to split them into at least 100 requests because each request can only take 10k users. Specify the session info so that you can track if the session has finished or not.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "\nAdvertiser generated session identifier, used to track the session. Needs to be unique in the same ad account.\n",
            "description": "generated session identifier, used to track the session. Needs to be unique in the same ad account.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "\nEstimated total num of users to be uploaded in this session, used by Facebook systems to better process this session.\n",
            "description": "total\nint64\n\nEstimated total num of users to be uploaded in this session, used by Facebook systems to better process this session.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "\nA 1 based sequence number to identify the request in the session.\n",
            "description": "1 based sequence number to identify the request in the session.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "\ntrue mean this request is the last request in this session. You must mark the last request otherwise Facebook doesn't know the session has ended\n",
            "description": "mean this request is the last request in this session. You must mark the last request otherwise Facebook doesn't know the session has ended\n",
            "type": "integer",
            "required": "required"
          }
        ]
      },
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "\nPayload representing users to add\n",
            "description": "representing users to add\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "\nUID , EMAIL_SHA256 , PHONE_SHA256 , MOBILE_ADVERTISER_ID . One can also pass an array of multiple keys for multi-key match. Supported key types includes:\nEXTERN_ID\nEMAIL\nPHONE\nGEN\nDOBY\nDOBM\nDOBD\nLN\nFN\nFI\nCT\nST\nZIP\nMADID\nCOUNTRY\nThe multi-key array is of the form [\"EMAIL\", \"LN\", \"FN\", \"ZIP\"]\n",
            "description": ", EMAIL_SHA256 , PHONE_SHA256 , MOBILE_ADVERTISER_ID . One can also pass an array of multiple keys for multi-key match. Supported key types includes:\nEXTERN_ID\nEMAIL\nPHONE\nGEN\nDOBY\nDOBM\nDOBD\nLN\nFN\nFI\nCT\nST\nZIP\nMADID\nCOUNTRY\nThe multi-key array is of the form [\"EMAIL\", \"LN\", \"FN\", \"ZIP\"]\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "\nIs the key raw? If the keys are combinational keys like \"LN_FN_ZIP\", set this to false , otherwise set this to true . Default to false\n",
            "description": "the key raw? If the keys are combinational keys like \"LN_FN_ZIP\", set this to false , otherwise set this to true . Default to false\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "\nEstimated total num of users to be uploaded in this session, used by our system to better processing this session. If the multi-key feature is used, a two-dimensional array of the form [[\"test1@example.com\", \"john\", \"smith\", \"95124\"], [\"\", \"lucy\", \"brown\", \"95124\"]] should be passed. In case a key is unknown, it should be left blank.\n",
            "description": "array>\n\nEstimated total num of users to be uploaded in this session, used by our system to better processing this session. If the multi-key feature is used, a two-dimensional array of the form [[\"test1@example.com\", \"john\", \"smith\", \"95124\"], [\"\", \"lucy\", \"brown\", \"95124\"]] should be passed. In case a key is unknown, it should be left blank.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "\nApp ids used by the users being uploaded. This field is required when schema is a Facebook UID. e.g. [1234,5678]\n",
            "description": "ids\nlist<int>\n\nApp ids used by the users being uploaded. This field is required when schema is a Facebook UID. e.g. [1234,5678]\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "",
            "description": "ID>\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "\nIndicates by which method the custom audience was created, defined by the type and subtype of the data_source\n",
            "description": "by which method the custom audience was created, defined by the type and subtype of the data_source\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "\nType of the custom audience\n",
            "description": "{UNKNOWN, FILE_IMPORTED, EVENT_BASED, SEED_BASED, THIRD_PARTY_IMPORTED, COPY_PASTE, CONTACT_IMPORTER}\n\nType of the custom audience\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "\nSubtype of the custom audience\n",
            "description": "{ANYTHING, NOTHING, HASHES, USER_IDS, HASHES_OR_USER_IDS, MOBILE_ADVERTISER_IDS, EXTERNAL_IDS, MULTI_HASHES, TOKENS, EXTERNAL_IDS_MIX, WEB_PIXEL_HITS, MOBILE_APP_EVENTS, MOBILE_APP_COMBINATION_EVENTS, VIDEO_EVENTS, WEB_PIXEL_COMBINATION_EVENTS, PLATFORM, ENGAGEMENT_EVENT_USERS, CUSTOM_AUDIENCE_USERS, PAGE_FANS, CONVERSION_PIXEL_HITS, APP_USERS, S_EXPR, DYNAMIC_RULE, CAMPAIGN_CONVERSIONS, WEB_PIXEL_HITS_CUSTOM_AUDIENCE_USERS, MOBILE_APP_CUSTOM_AUDIENCE_USERS, COMBINATION_CUSTOM_AUDIENCE_USERS, VIDEO_EVENT_USERS, FB_PIXEL_HITS, IG_PROMOTED_POST, PLACE_VISITS, OFFLINE_EVENT_USERS, EXPANDED_AUDIENCE, SEED_LIST, PARTNER_CATEGORY_USERS, PAGE_SMART_AUDIENCE, MULTICOUNTRY_COMBINATION, PLATFORM_USERS, MAIL_CHIMP_EMAIL_HASHES, CONSTANT_CONTACTS_EMAIL_HASHES, COPY_PASTE_EMAIL_HASHES, CONTACT_IMPORTER}\n\nSubtype of the custom audience\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "\nInformation about the session. Sessions are used when you have a lot of users to upload. For example, if you have 1 million users to upload, you need to split them into at least 100 requests because each request can only take 10k users. Specify the session info so that you can track if the session has finished or not.\n",
            "description": "about the session. Sessions are used when you have a lot of users to upload. For example, if you have 1 million users to upload, you need to split them into at least 100 requests because each request can only take 10k users. Specify the session info so that you can track if the session has finished or not.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "\nAdvertiser generated session identifier, used to track the session. Needs to be unique in the same ad account.\n",
            "description": "generated session identifier, used to track the session. Needs to be unique in the same ad account.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "\nEstimated total num of users to be uploaded in this session, used by Facebook systems to better process this session.\n",
            "description": "total\nint64\n\nEstimated total num of users to be uploaded in this session, used by Facebook systems to better process this session.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "\nA 1 based sequence number to identify the request in the session.\n",
            "description": "1 based sequence number to identify the request in the session.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "\ntrue mean this request is the last request in this session. You must mark the last request otherwise Facebook doesn't know the session has ended\n",
            "description": "mean this request is the last request in this session. You must mark the last request otherwise Facebook doesn't know the session has ended\n",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },






    "/{offer_id}": {
      "POST": {}
    },

    "/notifications": {
      "post": {
        "parameters": [
          {
            "in": "query",
            "name": "100",
            "description": "Invalid parameter",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "200",
            "description": "Permissions error",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "190",
            "description": "Invalid OAuth 2.0 Access Token",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "210",
            "description": "User not visible",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "275",
            "description": "Cannot determine the target object for this request. Currently supported objects include ad account, business account and associated objects.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "3001",
            "description": "Invalid query",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "2610",
            "description": "You need to provide an account id",
            "type": "integer",
            "required": "required"
          }
        ]
      },
      "POST": {}
    },



    "/{canvas_text_id}": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "210",
            "description": "User not visible",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "100",
            "description": "Invalid parameter",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },
    "/{page_id}": {
      "DELETE": {
        "parameters": [
          {
            "in": "query",
            "name": "video_id\nnumeric",
            "description": "string or integer\n\nID of the video to be unfeatured from the Page.\nRequired\n",
            "type": "integer",
            "required": "required"
          }
        ]
      },
      "post": {
        "parameters": [
          {
            "in": "query",
            "name": "backdated_post\narray\n\nSettings",
            "description": "to allow backdated video post.A backdated post needs to be published.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "backdated_time\ndatetime\n\nThe",
            "description": "time\ndatetime\n\nThe time when the video post was created.\nRequired\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "backdated_time_granularity\nenum{year,",
            "description": "month, day, hour, min, none}\nDefault value: none\n\nAccuracy of the backdated time.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "hide_from_newsfeed\nboolean\nDefault",
            "description": "value: false\n\nWhether to hide the video from newsfeed display.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "content_category\nenum",
            "description": "{BEAUTY_FASHION, BUSINESS, CARS_TRUCKS, COMEDY, CUTE_ANIMALS, ENTERTAINMENT, FAMILY, FOOD_HEALTH, HOME, LIFESTYLE, MUSIC, NEWS, POLITICS, SCIENCE, SPORTS, TECHNOLOGY, VIDEO_GAMING, OTHER}\n\nContent category of this video.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "content_tags\nlist<numeric",
            "description": "string>\n\nTags that describe the contents of the video. Use search endpoint with type=adinterest to get possible IDs.\n\nExample:\n/search?type=adinterest&q=couscous\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "crossposted_video_id\nnumeric",
            "description": "string or integer\n\nThe video id that the new video post will be reusing\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "description\nUTF-8",
            "description": "string\n\nThe description of the video, used as the accompanying status message in any feed story. This parameter can contain mentions of other Facebook Pages using the following syntax:\n@[page-id]\n\nFor example the following description would mention the Facebook Developers page inline:\nTest message @[19292868552] tag\n\nUsage of this feature is subject to review but by using Pages you are an admin of (both to make the API call, and to be used in a mention), and an app you are a developer of, you can test it for yourself before review.\nSupports Emoji\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "direct_share_status\nint64\n\nThe",
            "description": "status\nint64\n\nThe status to allow sponsor directly boost the post.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "embeddable\nboolean\n\nWhether",
            "description": "ther the video is embeddable.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "expiration\nObject\n\nTime",
            "description": "the video expires and whether it will be removed or hidden.\n",
            "type": "integer",
            "required": "required"
          },
          {},
          {
            "in": "query",
            "name": "type\nenum{expire_and_delete,",
            "description": "expire_only}\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "feed_targeting\nfeed",
            "description": "target\n\nObject that controls news feed targeting for this content. Anyone in these demographics will be more likely to see this content, those not will be less likely, but may still see it anyway. Any of the targeting fields shown here can be used, none are required.\n",
            "type": "integer",
            "required": "required"
          },
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {
            "in": "query",
            "name": "locales\nlist<string>\n\nValues",
            "description": "for targeted locales. Use type of adlocale to find Targeting Options and use the returned key to specify.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "age_min\nint64\n\nMust",
            "description": "be 13 or higher. Default is 0.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "age_max\nint64\n\nMaximum",
            "description": "age.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "genders\nlist<int64>\n\nTarget",
            "description": "specific genders. 1 targets all male viewers and 2 females. Default is to target both.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "college_years\nlist<int64>\n\nArray",
            "description": "of integers. Represent graduation years from college.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "education_statuses\nlist<int64>\n\nArray",
            "description": "of integers which represent current educational status. Use 1 for high school, 2 for undergraduate, and 3 for alum (or localized equivalents).\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "interested_in\nlist<int64>\n\nIndicates",
            "description": "targeting based on the 'interested in' field of the user profile. You can specify an integer of 1 to indicate male, 2 indicates female. Default is all types. Please note 'interested in' targeting is not available in France due to local laws.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "relationship_statuses\nlist<int64>\n\nArray",
            "description": "of integers for targeting based on relationship status. Use 1 for single, 2 for 'in a relationship', 3 for married, and 4 for engaged. Default is all types.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "interests\nlist<int64>\n\nOne",
            "description": "or more IDs of pages to target fans of pages.Use type of page to get possible IDs as find Targeting Options and use the returned id to specify.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "file_size\nint64\n\nThe",
            "description": "size\nint64\n\nThe size of the entire video file in bytes.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "file_url\nstring\n\nAccessible",
            "description": "URL of a video file. Cannot be used with upload_phase .\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "fov\nint64\n\n360",
            "description": "video only: Vertical field of view\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "guide\nlist<list<int64>>\n\n360",
            "description": "video only: Guide keyframes data. An array of keyframes, each of which is an array of 3 or 4 elements in the following order: [video timestamp (seconds), pitch (degrees, -90 ~ 90), yaw (degrees, -180 ~ 180), field of view (degrees, 40 ~ 90, optional)], ordered by video timestamp in strictly ascending order.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "guide_enabled\nboolean\n\n360",
            "description": "video only: Whether Guide is active.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "initial_heading\nint64\n\n360",
            "description": "video only: Horizontal camera perspective to display when the video begins.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "initial_pitch\nint64\n\n360",
            "description": "video only: Vertical camera perspective to display when the video begins.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "no_story\nboolean\n\nIf",
            "description": "set to true , this will suppress feed and timeline story.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "original_projection_type\nenum",
            "description": "{equirectangular, cubemap}\n\n360 video only: The original projection type of the 360 video being uploaded.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "published\nboolean\nDefault",
            "description": "value: true\n\nWhether a post about this video is published. Non-published videos cannot be backdated.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "referenced_sticker_id\nnumeric",
            "description": "string or integer\n\nSticker id of the sticker in the post\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "replace_video_id\nnumeric",
            "description": "string or integer\n\nThe video id your uploaded video about to replace\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "scheduled_publish_time\nint64\n\nTime",
            "description": "when the page post about this video should go live, this should be between 10 mins and 6 months from the time of publishing the video.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "secret\nboolean\n\nIf",
            "description": "set to true , this video will not appear anywhere on Facebook and is not searchable. It can be viewed and shared using permalink and embeds. Default value is false.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "slideshow_spec\nJSON",
            "description": "object\n\nSpecification of a list of images that are used to generate video.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "images_urls\nlist<URL>\n\nA",
            "description": "3-7 element array of the URLs of the images. Required.\nRequired\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "duration_ms\ninteger\n\nThe",
            "description": "duration_ms\ninteger\n\nThe duration in milliseconds of each image. Default value is 1000.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "transition_ms\ninteger\n\nThe",
            "description": "duration in milliseconds of the crossfade transition between images. Default value is 1000.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "social_actions\nboolean\n\nThis",
            "description": "can be used to enable or prohibit the use of Facebook socialactions (likes, comments, and sharing) on an unlisted video. Default value is false\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "source\nstring\n\nThe",
            "description": "video, encoded as form data . This field is required.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "spherical\nboolean\nDefault",
            "description": "value: false\n\nSet if the video was recorded in 360 format.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "sponsor_id\nnumeric",
            "description": "string or integer\n\nFacebook Page id that is tagged as sponsor in the video post\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "sponsor_relationship\nint64\n\nSponsor",
            "description": "Relationship, such as Presented By or Paid PartnershipWith\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "start_offset\nint64\n\nStart",
            "description": "byte position of the file chunk.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "swap_mode\nenum",
            "description": "{replace}\n\nType of replacing video request\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "targeting\ntarget\n\nObject",
            "description": "that limits the audience for this content. Anyone not in these demographics will not be able to view this content. This will not override any Page-level demographic restrictions that may be in place.\n",
            "type": "integer",
            "required": "required"
          },
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {
            "in": "query",
            "name": "locales\nlist<string>\n\nValues",
            "description": "for targeted locales. Use type of adlocale to find Targeting Options and use the returned key to specify.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "excluded_countries\nlist<string>\n\nValues",
            "description": "for excluded countries. You can specify up to 25 countries. Use ISO 3166 format codes .\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "excluded_regions\nlist<int64>\n\nValues",
            "description": "for excluded regions. Use type of adregion and list of GLOBAL to find Targeting Options and use the returned key to specify. For example:\nsearch/?type=adregion&q=California&list=GLOBAL\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "excluded_cities\nlist<int64>\n\nValues",
            "description": "for excluded cities. Use type of adcity to find Targeting Options and use the returned key to specify.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "excluded_zipcodes\nlist<string>\n\nValues",
            "description": "for excluded zipcodes. Use type of adzipcode to find Targeting Options and use the returned key to specify.\n",
            "type": "integer",
            "required": "required"
          },
          {},
          {
            "in": "query",
            "name": "timezones\nlist<int64>\n\nID",
            "description": "for the timezone. See here .\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "age_min\nint64\n\nMust",
            "description": "be 13 or higher. Default is 0.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "age_max\nint64\n\nMaximum",
            "description": "age.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "genders\nlist<int64>\n\nTarget",
            "description": "specific genders. 1 targets all male viewers and 2 females. Default is to target both.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "thumb\nimage\n\nThe",
            "description": "video thumbnail raw data to be uploaded and associated with a video.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "title\nUTF-8",
            "description": "string\n\nThe title of the video.\nSupports Emoji\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "universal_video_id\nstring\n\nThe",
            "description": "publishers asset management code for this video.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "unpublished_content_type\nenum",
            "description": "{SCHEDULED, DRAFT, ADS_POST}\n\nType of unpublished content, such as scheduled, draft or ads_post.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "upload_phase\nenum",
            "description": "{start, transfer, finish, cancel}\n\nType of chunked upload request.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "upload_session_id\nnumeric",
            "description": "string or integer\n\nID of the chunked upload session.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "video_file_chunk\nstring\n\nThe",
            "description": "video_file_chunk\nstring\n\nThe video file chunk, encoded as form data . This field is required during transfer upload phase.\n",
            "type": "integer",
            "required": "required"
          }
        ]
      },
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "user_id\nint\n\nID",
            "description": "of the user to be whitelisted for the page.\nRequired\n",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },
    "/{canvas_header_id}": {
      "DELETE": {
        "parameters": [
          {
            "in": "query",
            "name": "100",
            "description": "Invalid parameter",
            "type": "integer",
            "required": "required"
          }
        ]
      },
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "100",
            "description": "Invalid parameter",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },


    "/{group_id}": {
      "post": {
        "parameters": [
          {
            "in": "query",
            "name": "content_category\nenum",
            "description": "{BEAUTY_FASHION, BUSINESS, CARS_TRUCKS, COMEDY, CUTE_ANIMALS, ENTERTAINMENT, FAMILY, FOOD_HEALTH, HOME, LIFESTYLE, MUSIC, NEWS, POLITICS, SCIENCE, SPORTS, TECHNOLOGY, VIDEO_GAMING, OTHER}\n\nContent category of this video.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "description\nUTF-8",
            "description": "string\n\nThe description of the video, used as the accompanying status message in any feed story. This parameter can contain mentions of other Facebook Pages using the following syntax:\n@[page-id]\n\nFor example the following description would mention the Facebook Developers page inline:\nTest message @[19292868552] tag\n\nUsage of this feature is subject to review but by using Pages you are an admin of (both to make the API call, and to be used in a mention), and an app you are a developer of, you can test it for yourself before review.\nSupports Emoji\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "embeddable\nboolean\n\nWhether",
            "description": "ther the video is embeddable.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "file_size\nint64\n\nThe",
            "description": "size\nint64\n\nThe size of the entire video file in bytes.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "file_url\nstring\n\nAccessible",
            "description": "URL of a video file. Cannot be used with upload_phase .\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "fov\nint64\n\n360",
            "description": "video only: Vertical field of view\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "guide\nlist<list<int64>>\n\n360",
            "description": "video only: Guide keyframes data. An array of keyframes, each of which is an array of 3 or 4 elements in the following order: [video timestamp (seconds), pitch (degrees, -90 ~ 90), yaw (degrees, -180 ~ 180), field of view (degrees, 40 ~ 90, optional)], ordered by video timestamp in strictly ascending order.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "guide_enabled\nboolean\n\n360",
            "description": "video only: Whether Guide is active.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "initial_heading\nint64\n\n360",
            "description": "video only: Horizontal camera perspective to display when the video begins.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "initial_pitch\nint64\n\n360",
            "description": "video only: Vertical camera perspective to display when the video begins.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "original_projection_type\nenum",
            "description": "{equirectangular, cubemap}\n\n360 video only: The original projection type of the 360 video being uploaded.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "referenced_sticker_id\nnumeric",
            "description": "string or integer\n\nSticker id of the sticker in the post\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "replace_video_id\nnumeric",
            "description": "string or integer\n\nThe video id your uploaded video about to replace\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "slideshow_spec\nJSON",
            "description": "object\n\nSpecification of a list of images that are used to generate video.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "images_urls\nlist<URL>\n\nA",
            "description": "3-7 element array of the URLs of the images. Required.\nRequired\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "duration_ms\ninteger\n\nThe",
            "description": "duration_ms\ninteger\n\nThe duration in milliseconds of each image. Default value is 1000.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "transition_ms\ninteger\n\nThe",
            "description": "duration in milliseconds of the crossfade transition between images. Default value is 1000.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "source\nstring\n\nThe",
            "description": "video, encoded as form data . This field is required.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "spherical\nboolean\nDefault",
            "description": "value: false\n\nSet if the video was recorded in 360 format.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "start_offset\nint64\n\nStart",
            "description": "byte position of the file chunk.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "swap_mode\nenum",
            "description": "{replace}\n\nType of replacing video request\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "thumb\nimage\n\nThe",
            "description": "video thumbnail raw data to be uploaded and associated with a video.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "title\nUTF-8",
            "description": "string\n\nThe title of the video.\nSupports Emoji\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "unpublished_content_type\nenum",
            "description": "{SCHEDULED, DRAFT, ADS_POST}\n\nType of unpublished content, such as scheduled, draft or ads_post.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "upload_phase\nenum",
            "description": "{start, transfer, finish, cancel}\n\nType of chunked upload request.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "upload_session_id\nnumeric",
            "description": "string or integer\n\nID of the chunked upload session.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "video_file_chunk\nstring\n\nThe",
            "description": "video_file_chunk\nstring\n\nThe video file chunk, encoded as form data . This field is required during transfer upload phase.\n",
            "type": "integer",
            "required": "required"
          }
        ]
      },
      "POST": {}
    },

    "/page/feed": {
      "GET": {},
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "\ncountries\n\nAn",
            "description": "array of 2-digit ISO 3166 format codes.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "regions\n\nAn",
            "description": "array of up to 200 regions. Use the method described in the section below with the type adgeolocation , and use the returned key. For example:\n/search/?type=adgeolocation&q=California\nreturns:\n... \"data\": [ { \"key\": 6, \"name\": \"California\", \"country_code\": \"US\" } ], ...",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "\ncities\n\nAn",
            "description": "array of up to 250 cities. Use the method described in the section below with the type adgeolocation , and use the returned key.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "zips\n\nAn",
            "description": "array of up to 2500 zip codes. Zip code searches are covered in our Marketing API documentation and behave the same when used with targeting options for Page feed. The zip field does not work with feed_targeting .\n",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },





    "/app/accounts/test-users": {
      "POST": {}
    },


    "/{live_video_id}": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "ad_break_duration\nint64\n\nStart",
            "description": "an Ad Break with a specific duration, in milliseconds.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "ad_break_intent\nboolean\n\nInform",
            "description": "clients that you will start an ad break soon.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "ad_break_start_now\nboolean\n\nStart",
            "description": "an\n\nStart an Ad Break now at the current time offset of the stream.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "ad_break_time_offset\nfloat\n\nStart",
            "description": "an Ad Break at the time offset in milliseconds.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "content_tags\nlist<numeric",
            "description": "string>\n\nTags that describe the contents of the video. Use search endpoint with type=adinterest to get possible IDs.\n\nExample:\n/search?type=adinterest&q=couscous\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "copyrights_violation_dialog_state\nenum",
            "description": "{NO_MSG_WAS_SENT, PRIVATE_BROADCAST_MSG_SENT, PUBLIC_BROADCAST_MSG_SENT, BROADCASTER_CLAIMED_RIGHTS, BROADCAST_WAS_STOPPED, NOTIF_SENT_FOR_API_STREAM, NOTIF_SENT_FOR_LIVE_WWW_STREAM}\n\nBroadcaster-FB dialog regarding copyrights violation found, if any.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "description\nUTF-8",
            "description": "string\n\nThe description of live video\nSupports Emoji\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "direct_share_status\nint64\n\nThe",
            "description": "status\nint64\n\nThe status to allow sponsor directly boost the post.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "disturbing\nboolean\n\nIf",
            "description": "true, autoplay will be disabled and live video will have a graphic content warning overlay\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "embeddable\nboolean\n\nIf",
            "description": "true, live video will be embeddable\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "end_live_video\nboolean\n\nIf",
            "description": "true, the live video will be ended. Only valid if the live video is still running\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "is_manual_mode\nboolean\n\nFlag",
            "description": "to indicate that the scheduled broadcast is switched to manual mode\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "live_encoder\nnumeric",
            "description": "string or integer\n\nLive Encoder that will broadcast to this live video\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "place\nplace",
            "description": "tag\n\nLocation associated with the video, if any.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "planned_start_time\ninteger\n\nPlanned",
            "description": "start_time\ninteger\n\nPlanned start time for a scheduled live video\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "privacy\nPrivacy",
            "description": "Parameter\n\nThe privacy setting of live video\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "product_items\nlist<numeric",
            "description": "string>\n\nProducts which will be shown with live videos.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "published\nboolean\n\nShould",
            "description": "the live video be published? Only valid if not yet published.\n\nDeprecated. Prefer setting the status instead.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "schedule_custom_profile_image\nimage\n\nCustom",
            "description": "image\nimage\n\nCustom image that will appear in the scheduled live story and lobby.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "sponsor_id\nnumeric",
            "description": "string or integer\n\nFacebook Page id that is tagged as sponsor in the video post\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "sponsor_relationship\nint64\n\nSponsor",
            "description": "Relationship, such as Presented By or Paid PartnershipWith\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "status\nenum",
            "description": "{UNPUBLISHED, LIVE_NOW, SCHEDULED_UNPUBLISHED, SCHEDULED_LIVE, SCHEDULED_CANCELED}\n\nChoose between UNPUBLISHED or LIVE_NOW.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "stream_type\nenum",
            "description": "{REGULAR, AMBIENT}\n\nThe type of stream. Default value: REGULAR. Use AMBIENT for continuous broadcasts that last days or weeks (like panda cams). Ambient broadcasts do not generate VOD or notifications.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "tags\nlist<int>\n\nUsers",
            "description": "tagged in the live video.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "targeting\ntarget\n\nObject",
            "description": "that limits the audience for this content. Anyone not in these demographics will not be able to view this content.\n",
            "type": "integer",
            "required": "required"
          },
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {
            "in": "query",
            "name": "locales\nlist<string>\n\nValues",
            "description": "for targeted locales. Use type of adlocale to find Targeting Options and use the returned key to specify.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "excluded_countries\nlist<string>\n\nValues",
            "description": "for excluded countries. You can specify up to 25 countries. Use ISO 3166 format codes .\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "excluded_regions\nlist<int64>\n\nValues",
            "description": "for excluded regions. Use type of adregion and list of GLOBAL to find Targeting Options and use the returned key to specify. For example:\nsearch/?type=adregion&q=California&list=GLOBAL\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "excluded_cities\nlist<int64>\n\nValues",
            "description": "for excluded cities. Use type of adcity to find Targeting Options and use the returned key to specify.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "excluded_zipcodes\nlist<string>\n\nValues",
            "description": "for excluded zipcodes. Use type of adzipcode to find Targeting Options and use the returned key to specify.\n",
            "type": "integer",
            "required": "required"
          },
          {},
          {
            "in": "query",
            "name": "timezones\nlist<int64>\n\nID",
            "description": "for the timezone. See here .\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "age_min\nint64\n\nMust",
            "description": "be 13 or higher. Default is 0.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "age_max\nint64\n\nMaximum",
            "description": "age.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "genders\nlist<int64>\n\nTarget",
            "description": "specific genders. 1 targets all male viewers and 2 females. Default is to target both.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "title\nUTF-8",
            "description": "string\n\nThe title of the live video.\nSupports Emoji\n",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },

    "/{page_label_id}": {
      "DELETE": {
        "parameters": [
          {
            "in": "query",
            "name": "user_ids\nlist<int>\n\nID",
            "description": "of users that the label will be unattached from\nRequired\n",
            "type": "integer",
            "required": "required"
          }
        ]
      },
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "user_ids\nlist<int>\n\nID",
            "description": "of users that the label will be applied to\nRequired\n",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },



    "/{media_fingerprint_id}": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "100",
            "description": "Invalid parameter",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },

    "/{native_offer_id}": {
      "post": {
        "parameters": [
          {
            "in": "query",
            "name": "ad_account\nnumeric",
            "description": "string or integer\n\nOptional ID of an ad account, matched to the ad_image_hashes.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "ad_image_hashes\nlist<string>\n\nOptional",
            "description": "array of ad image hashes, matched to the ad_account. Only one of ad_image_hashes, photos, urls, and multipart attachments should be specified.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "carousel_captions\nlist<string>\n\nOptional",
            "description": "array of strings to be used as carousel captions.Makes carousel_links a required field; the number of items in each array must also match.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "carousel_links\nlist<string>\n\nOptional",
            "description": "array of urls to be used as carousel captions.Makes carousel_captions a required field; the number of items in each array must also match.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "image_crops\nlist<dictionary",
            "description": "{ enum{191x100, 100x72, 400x150, 600x360, 100x100, 400x500} : <list<list<int64>>> }>\n\nOptional array of image crop parameters\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "message\nstring\n\nThe",
            "description": "main body of the post, otherwise called the status message. Required if either published_ads or published is true.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "photos\nlist<numeric",
            "description": "string or integer>\n\nOptional array containing IDs of existing Photo objects. Only one of ad_image_hashes, photos, urls, and multipart attachments should be specified.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "published\nboolean\n\nWhether",
            "description": "to create and show a story about this native offer view. Only one of published_ads and published should be specified.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "published_ads\nboolean\n\nWhether",
            "description": "to create a story for use in ads. Only one of published_ads and published should be specified.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "urls\nlist<URL>\n\nOptional",
            "description": "array of URLs for publicly accessible photos.Only one of ad_image_hashes, photos, urls, and multipart attachments should be specified.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "videos\nlist<numeric",
            "description": "string or integer>\n\nOptional array of IDs for videos already owned by the page. Currently only one video is allowed per view.\n",
            "type": "integer",
            "required": "required"
          }
        ]
      },
      "POST": {}
    },


    "/v2.4/me/inbox": {
      "GET": {}
    },
    "/{life_event_id}": {
      "post": {
        "parameters": [
          {
            "in": "query",
            "name": "attachment_id\nnumeric",
            "description": "string or integer\n\nID for a photo attachment to associate with this\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "attachment_share_url\nURL\n\nLink",
            "description": "to set the comment attachment to. Does not include the url in the message\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "attachment_url\nURL\n\nLink",
            "description": "to set the comment attachment to\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "is_offline\nboolean\n\nWhether",
            "description": "ther the comment was originally made while offline\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "message\nUTF-8",
            "description": "string\n\nSame as the text param\nSupports Emoji\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "text\nUTF-8",
            "description": "string\n\nThe text of the comment that allows emoji\nSupports Emoji\n",
            "type": "integer",
            "required": "required"
          }
        ]
      },
      "POST": {}
    },
    "/{video_id}": {
      "DELETE": {
        "parameters": [
          {
            "in": "query",
            "name": "100",
            "description": "Invalid parameter",
            "type": "integer",
            "required": "required"
          }
        ]
      },
      "post": {
        "parameters": [
          {
            "in": "query",
            "name": "100",
            "description": "Invalid parameter",
            "type": "integer",
            "required": "required"
          }
        ]
      },
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "\nSpecify which locale should be used as the default for the video. Can be set to 'none'\n",
            "description": "which locale should be used as the default for the video. Can be set to 'none'\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "Default value: Vector\n\nlocales of caption to delete\n",
            "description": "value: Vector\n\nlocales of caption to delete\n",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },
    "/{canvas_store_locator_id}": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "header_background_color\nstring\n\nHeader",
            "description": "background_color\nstring\n\nHeader background color for the store locator\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "name\nstring\n\nName",
            "description": "of the store locator element\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "page_set_id\nid\n\nThe",
            "description": "page_set_id\nid\n\nThe page set id used for the store locator\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "typeface\nstring\n\nFont",
            "description": "used to display info about the store\n",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },

    "/v2.9/{crisis-listing-id}/comments": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "filter\nenum{stream,",
            "description": "toplevel}\nDefault value: toplevel\n\nfilter\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "live_filter\nenum{filter_low_quality,",
            "description": "no_filter}\nDefault value: filter_low_quality\n\nFor comments on a Live streaming video, this determines whether low quality comments will be filtered out of the results (filtering is enabled by default). In all other circumstances this parameter is ignored.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "order\nenum{chronological,",
            "description": "reverse_chronological}\n\nPreferred ordering of the comments. Accepts chronological (oldest first) and reverse chronological (newest first). If the comments can be ranked, then the order will always be ranked regardless of this modifier. The best practice for querying comments on a Live video is to continually poll for comments in the reversechronological ordering mode.\n",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },


    "/v2.9/{open-graph-action-id}/likes": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "\ntotal_count\nunsigned",
            "description": "int32\n\nTotal number of likes\n\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "can_like\nbool\n\nCan",
            "description": "the viewer like\n\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "has_liked\nbool\n\nHas",
            "description": "the viewer liked\n\n",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },

    "/{instagram_comment_id}": {
      "DELETE": {
        "parameters": [
          {
            "in": "query",
            "name": "100",
            "description": "Invalid parameter",
            "type": "integer",
            "required": "required"
          }
        ]
      },
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "100",
            "description": "Invalid parameter",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },

    "/v2.9/me/scores": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "\nscore\n\nThe",
            "description": "score\n\nThe score that you want to set for this person.\n\nint\n",
            "type": "integer",
            "required": "required"
          }
        ]
      },
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "\nuser\n\nThe",
            "description": "person associated with the scores.\n\nUser\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "score\n\nThe",
            "description": "actual score.\n\nint\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "application\n\nThe",
            "description": "application\n\nThe app in which the score was achieved.\n\nApp .\n",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },




    "/v2.9/{payment-id}/refunds": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "\ncurrency\n\nThe",
            "description": "three-letter ISO code of the currency in which the refund amount is specified; it must be the same as the currency in which the original purchase was denominated. This is required.\n\nstring\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "amount\n\nThe",
            "description": "amount\n\nThe amount to refund. This is required. It must be less than or equal to the refundable_amount field on the parent Payment object.\n\nstring\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "reason\n\nThe",
            "description": "reason\n\nThe reason you are refunding this order.\n\nenum{MALICIOUS_FRAUD, FRIENDLY_FRAUD, CUSTOMER_SERVICE}\n",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },
    "/{instagram_carousel_id}": {
      "post": {
        "parameters": [
          {
            "in": "query",
            "name": "100",
            "description": "Invalid parameter",
            "type": "integer",
            "required": "required"
          }
        ]
      },
      "POST": {}
    },
    "/{video_id}/captions": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "100",
            "description": "Invalid parameter",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "210",
            "description": "User not visible",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "200",
            "description": "Permissions error",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },

    "/v2.9/{page-id}/statuses": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "100",
            "description": "Invalid parameter",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },

    "/{page-id}/subscribed_apps": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "\nobject\n\nIndicates",
            "description": "the object type that this subscription applies to.\n\nenum{user, page, permissions, payments}\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "callback_url\n\nThe",
            "description": "URL that will receive the POST request when an update is triggered, and a GET request when attempting this publish operation. See our guide to constructing a callback URL page .\n\nstring\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "fields\n\nOne",
            "description": "or more of the set of valid fields in this object to subscribe to.\n\nstring[]\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "verify_token\n\nAn",
            "description": "arbitrary string that can be used to confirm to your server that the request is valid.\n\nstring\n",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },

    "/v2.9/me/albums": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "\nThe description of the album, which will show up in news feed stories as the status message.\n",
            "description": "description of the album, which will show up in news feed stories as the status message.\n\nstring\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "\nPrivacy settings for the album. If not supplied, this defaults to the privacy level granted to the app in the Login Dialog. This field cannot be used to set a more open privacy setting than the one granted.\n",
            "description": "settings for the album. If not supplied, this defaults to the privacy level granted to the app in the Login Dialog. This field cannot be used to set a more open privacy setting than the one granted.\n\nobject\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "\nThe value of the privacy setting.\n",
            "description": "value\n\nThe value of the privacy setting.\n\nenum{'EVERYONE', 'ALL_FRIENDS', 'FRIENDS_OF_FRIENDS', 'CUSTOM', 'SELF'}\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "\nWhen value is CUSTOM , this is a comma-separated list of user IDs and friend list IDs that can see the post. This can also be ALL_FRIENDS or FRIENDS_OF_FRIENDS to include all members of those sets.\n",
            "description": "value is CUSTOM , this is a comma-separated list of user IDs and friend list IDs that can see the post. This can also be ALL_FRIENDS or FRIENDS_OF_FRIENDS to include all members of those sets.\n\nstring | csv[string]\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "\nWhen value is CUSTOM , this is a comma-separated list of user IDs and friend list IDs that cannot see the post.\n",
            "description": "value is CUSTOM , this is a comma-separated list of user IDs and friend list IDs that cannot see the post.\n\nstring | csv[string]\n",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },
    "/{video_copyright_rule_id}": {
      "DELETE": {
        "parameters": [
          {
            "in": "query",
            "name": "100",
            "description": "Invalid parameter",
            "type": "integer",
            "required": "required"
          }
        ]
      },
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "migration_rule_id\nnumeric",
            "description": "string or integer\n\nThe ID of the rule to which all referenced assets of this rule will move.\n",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },
    "/v2.9/{crisis-listing-id}/reactions": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "type\nenum",
            "description": "{NONE, LIKE, LOVE, WOW, HAHA, SAD, ANGRY, THANKFUL}\n\nReaction type\n",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },




    "/v2.9/{open-graph-action-id}/comments": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "\norder\nenum\n\nOrder",
            "description": "of returned comments\n\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "total_count\nunsigned",
            "description": "int32\n\nTotal number of people who commented\n\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "can_comment\nbool\n\nCan",
            "description": "the viewer comment\n\n",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },


    "/v2.9/me/locations": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "\ntype\n\nIndicates",
            "description": "the type of each object in the feed.\n\nenum{checkin, photo, status}\n",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },

    "/{video_list_id}": {
      "DELETE": {
        "parameters": [
          {
            "in": "query",
            "name": "100",
            "description": "Invalid parameter",
            "type": "integer",
            "required": "required"
          }
        ]
      },
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "100",
            "description": "Invalid parameter",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },
    "/v2.9/me/home": {
      "GET": {}
    },
    "/{canvas_button_id}": {
      "DELETE": {
        "parameters": [
          {
            "in": "query",
            "name": "100",
            "description": "Invalid parameter",
            "type": "integer",
            "required": "required"
          }
        ]
      },
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "100",
            "description": "Invalid parameter",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },

    "/v2.9/{app-id}/accounts/test-users": {
      "DELETE": {
        "parameters": [
          {
            "in": "query",
            "name": "\nuid\n\nThe",
            "description": "ID of the test user to be disassociated from the app.\n\nstring\n",
            "type": "integer",
            "required": "required"
          }
        ]
      },
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "\ninstalled\n\nAutomatically",
            "description": "installs the app for the test user once it is created or associated.\n\nboolean\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "permissions\n\nList",
            "description": "of permissions that are automatically granted for the app when it is created or associated.\n\nstring\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "name\n\nThe",
            "description": "name\n\nThe name for the test user. When left blank, a random name will be automatically generated.\n\nstring\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "owner_access_token\n\nWhen",
            "description": "associating existing test users with other apps, this is the app access token of any app that is already associated with the test user. The {app-id} in the publishing request in this case should be the app that will is the target to associate with the test user. The API request should also be signed with the app access token of that target app. Required when associating test users, but should not be used when creating new test users.\n\nstring\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "uid\n\nID",
            "description": "of an existing test user to associate with another app. Required when associating test users, but should not be used when creating new test users.\n\nstring\n",
            "type": "integer",
            "required": "required"
          }
        ]
      },
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "\nid\n\nThe",
            "description": "user ID of the test user .\n\nstring\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "access_token\n\nThe",
            "description": "access_token\n\nThe access token for the test user and this app. This field is only visible if the test user has installed the app.\n\nstring\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "login_url\n\nThis",
            "description": "URL will allow the test user account to be logged into. The URL will expire one hour after it is generated, or after the first time it is used.\n\nstring\n",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },

    "/v2.9/{crisis-id}/community_help_categories": {
      "GET": {}
    },

    "/act_{ad_account_id}": {
      "post": {
        "parameters": [
          {
            "in": "query",
            "name": "composer_session_id\nstring\n\ncomposer",
            "description": "session_id\nstring\n\ncomposer session id\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "description\nUTF-8",
            "description": "string\n\ndescription\nSupports Emoji\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "file_size\nint64\n\nThe",
            "description": "size\nint64\n\nThe size of the video file in bytes. Using during chunked upload .\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "file_url\nstring\n\nfile",
            "description": "url\nstring\n\nfile url\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "is_explicit_share\nboolean\n\nis",
            "description": "explicit_share\nboolean\n\nis explicit share\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "manual_privacy\nboolean\nDefault",
            "description": "value: false\n\nmanual privacy\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "name\nstring\n\nThe",
            "description": "name\nstring\n\nThe name of the video in the library.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "og_action_type_id\nnumeric",
            "description": "string or integer\n\nog action type id\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "og_icon_id\nnumeric",
            "description": "string or integer\n\nog icon id\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "og_object_id\nOG",
            "description": "object_id\nOG object ID or URL string\n\nog object id\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "og_phrase\nstring\n\nog",
            "description": "phrase\nstring\n\nog phrase\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "og_suggestion_mechanism\nstring\n\nog",
            "description": "suggestion_mechanism\nstring\n\nog suggestion mechanism\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "original_projection_type\nenum",
            "description": "{equirectangular, cubemap}\n\nOriginal Projection type of the video being uploaded\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "referenced_sticker_id\nnumeric",
            "description": "string or integer\n\nreferenced sticker id\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "slideshow_spec\nJSON",
            "description": "object\n\nAn object required for slideshow video .\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "images_urls\nlist<URL>\n\nA",
            "description": "3-7 element array of the URLs of the images. Required.\nRequired\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "duration_ms\ninteger\n\nThe",
            "description": "duration_ms\ninteger\n\nThe duration in milliseconds of each image. Default value is 1000.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "transition_ms\ninteger\n\nThe",
            "description": "duration in milliseconds of the crossfade transition between images. Default value is 1000.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "source\nstring\n\nThe",
            "description": "video, encoded as form data. See the Video Format doc for more details on video formats.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "start_offset\nint64\n\nThe",
            "description": "start_offset\nint64\n\nThe start position in byte of the chunk that is being sent, inclusive. Used during chunked upload .\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "time_since_original_post\nint64\n\ntime",
            "description": "since_original_post\nint64\n\ntime since original post\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "title\nUTF-8",
            "description": "string\n\nThe name of the video being uploaded.\nSupports Emoji\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "unpublished_content_type\nenum",
            "description": "{SCHEDULED, DRAFT, ADS_POST}\n\nunpublished content type\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "upload_phase\nenum",
            "description": "{start, transfer, finish, cancel}\n\nThe phase during chunked upload. Using during chunked upload .\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "upload_session_id\nnumeric",
            "description": "string or integer\n\nThe session ID of this chunked upload. Using during chunked upload .\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "video_file_chunk\nstring\n\nThe",
            "description": "chunk\nstring\n\nThe chunk of the video, between start_offset and end_offset . Using during chunked upload .\n",
            "type": "integer",
            "required": "required"
          }
        ]
      },
      "POST": {}
    },

    "/v2.9/{app-id}/achievements": {
      "DELETE": {
        "parameters": [
          {
            "in": "query",
            "name": "\nachievement\n\nThe",
            "description": "URL of an Open Graph Achievement object. This field is required.\n\nstring\n",
            "type": "integer",
            "required": "required"
          }
        ]
      },
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "\nachievement\n\nThe",
            "description": "URL of an Open Graph Achievement object. This URL should contain the tags necessary to describe an Achievement object . This field is required.\n\nstring\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "display_order\n\nOrder",
            "description": "of the achievement when shown in any achievement stories UI. A display order of 100 is displayed in the UI before 200. Values should be unique and incremented in the correct order for your achievements.\n\nint\n",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },

    "/{page-id}/tagged": {
      "post": {
        "parameters": [
          {
            "in": "query",
            "name": "\ninclude_hidden\n\nWhether",
            "description": "or not to include any posts that were hidden by the Page. Defaults to false\n\nbool\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "filter\n\nThis",
            "description": "field is deprecated.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "include_inline\n\nUsed",
            "description": "with the promotable_posts edge only. Filters by whether the post was created inline via object_story_spec in the Ads API. This used to be called is_inline\n\nbool\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "is_published\n\nUsed",
            "description": "with the promotable_posts edge only. Filters by published or unpublished page posts.\n\nbool\n",
            "type": "integer",
            "required": "required"
          }
        ]
      },
      "POST": {}
    },


    "/{business_id}": {
      "post": {
        "parameters": [
          {
            "in": "query",
            "name": "access_type\nenum",
            "description": "{OWNER, AGENCY}\n\naccess type\nRequired\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "page_id\nPage",
            "description": "ID\n\npage id\nRequired\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "permitted_roles\nlist<enum",
            "description": "{MANAGER, CONTENT_CREATOR, MODERATOR, ADVERTISER, INSIGHTS_ANALYST}>\n\npermitted roles\n",
            "type": "integer",
            "required": "required"
          }
        ]
      },
      "POST": {}
    },


    "/v2.9/me/outbox": {
      "GET": {}
    },
    "/v2.9/{limited-friend-id}/picture": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "height\ninteger\n\nThe",
            "description": "height\ninteger\n\nThe height of this picture in pixels.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "redirect\nboolean\nDefault",
            "description": "value: true\n\nBy default the picture edge will return a picture instead of a JSON response. If you want the picture edge to return JSON that describes the image set redirect=0 when you make the request.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "type\nenum{small,",
            "description": "normal, album, large, square}\n\nThe size of this picture. It can be one of the following values: small, normal, large, square.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "width\ninteger\n\nThe",
            "description": "width\ninteger\n\nThe width of this picture in pixels.\n",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },

    "/{event_id}/videos": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "100",
            "description": "Invalid parameter",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "190",
            "description": "Invalid OAuth 2.0 Access Token",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },

    "/{video_id}/comments": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "100",
            "description": "Invalid parameter",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "210",
            "description": "User not visible",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "200",
            "description": "Permissions error",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },

    "/v2.9/{post-id}/reactions": {
      "post": {
        "parameters": [
          {
            "in": "query",
            "name": "type\nenum",
            "description": "{NONE, LIKE, LOVE, WOW, HAHA, SAD, ANGRY, THANKFUL}\n\nReaction type\n",
            "type": "integer",
            "required": "required"
          }
        ]
      },
      "POST": {}
    },

    "/v2.9/{crisis-listing-id}": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "\nid\nnumeric",
            "description": "string\n\nThe id of the object\n\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "author\nUser\n\nThe",
            "description": "person who posted this listing\n\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "creation_time\ndatetime\n\nTime",
            "description": "when the post was created\n\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "for_num_people\nunsigned",
            "description": "integer\n\nThe number of people this request is for, omitted from certain categories (like pet supplies)\n\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "latitude\nfloat\n\nThe",
            "description": "approximate latitude GPS location of this listing; the real location is not provided due to privacy concerns. Useful for plotting on a map\n\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "listing_category\nCrisisListingCategory\n\nThe",
            "description": "category\nCrisisListingCategory\n\nThe category that this offer or request is for\n\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "listing_type\nenum\n\nThe",
            "description": "listing_type\nenum\n\nThe listing type represents whether this post is requesting help or offering help; however, it also has two other states, a \"closed request\" and a \"closed offer\" which represents the user closed this post out. Posts with the latter types should no longer be shown on the map\n\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "longitude\nfloat\n\nThe",
            "description": "approximate longitude GPS location of this listing; the real location is not provided due to privacy concerns. Useful for plotting on a map\n\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "message\nTextWithEntities\n\nAn",
            "description": "associated message with the offer or request, optional\n\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "permalink_uri\nstring\n\nThe",
            "description": "uri\nstring\n\nThe uri of this Community Help post, where users can like, comment on, or share the post\n\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "update_time\ndatetime\n\nTime",
            "description": "when the post was last updated; default value is when the post was created\n\n",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },

    "//www.facebook.com/<POST_ID>": {
      "post": {
        "parameters": [
          {
            "in": "query",
            "name": "\ncall_to_action\n\nObject",
            "description": "that specifies a Call to Action button. This should be the action you want people to take when they see your post. Clicking on this button will take people to the link you specify.\n\nobject\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "type\n\nDetermines",
            "description": "the call to action button text. One of allowed values:\n\nBOOK_TRAVEL . Call to action shows up as Book Now.\n\nBUY_NOW . Call to action shows up as Buy Now. Only used for desktop app ads for virtual goods .\n\nCALL_NOW . Call to action shows up as Call Now. Only used for local awareness ads .\n\nDOWNLOAD . Call to action shows up as Download.\n\nGET_DIRECTIONS . Call to action shows up as Get Directions. Must specify coordinates on the link field. Only used for local awareness ads .\n\nGET_QUOTE . Call to action shows up as Get Quote for lead generation .\n\nINSTALL_APP . Call to action shows up as Install Now.\n\nINSTALL_MOBILE_APP . Call to action shows up as Install Now. Only used for mobile app ads .\n\nLEARN_MORE . Call to action shows up as Learn More.\n\nLIKE_PAGE . Call to action shows up as Like Page. Only used for ads in Page Likes objective .\n\nLISTEN_MUSIC . Call to action shows up as Listen Music.\n\nMESSAGE_PAGE . Call to action shows up as Send Message. Only used for local awareness ads .\n\nNO_BUTTON . No call to action shows up.\n\nOPEN_LINK . Call to action shows up as Open Link. Only used for ads in Website Clicks objective .\n\nPLAY_GAME . Call to action shows up as Play Game. Only used for desktop app ads .\n\nSHOP_NOW . Call to action shows up as Shop Now. Only used for ads in Website Conversions objective .\n\nSIGN_UP . Call to action shows up as Sign Up.\n\nSUBSCRIBE . Call to action shows up as Subscribe for lead generation .\n\nUSE_APP . Call to action shows up as Use App.\n\nUSE_MOBILE_APP . Only used for mobile app ads .\n\nWATCH_MORE . Call to action shows up as Watch More.\n\nWATCH_VIDEO . Call to action shows up as Watch Video.\n\nstring\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "value\n\nSupporting",
            "description": "data for the Call to Action button\n\nobject\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "link\n\nURL",
            "description": "that the Call to Action button will link to. For link page post this must be the same as the link value of the post. Only external shares are allowed. The CTA link cannot link to facebook.com/.. but can link to apps.facebook.com/app-id.. and other external links.\nWhen Call to Action button is GET_DIRECTIONS or CALL_NOW , link format differs. Please refer to local awareness docs for more detail.\n\nstring\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "link_caption\n\nSpecifies",
            "description": "the caption used for the link which appears below the description. Default is the host name from the link. For example www.example.com. Overwrites captions specified in other fields.\n\nstring\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "link_format\n\nSpecifies",
            "description": "the format for the link. For example VIDEO_LPP for video page posts with call to action.\n\nstring\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "link_title\n\nUsed",
            "description": "ink_title\n\nUsed in carousel ads and is the title of the link of an individual story within the child_attachment.\n\nstring\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "page\n\nPage",
            "description": "ID when type is LIKE_PAGE\n\nstring\n",
            "type": "integer",
            "required": "required"
          }
        ]
      },
      "POST": {}
    },

    "/v2.9/{page-id}/milestones": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "100",
            "description": "Invalid parameter",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },
    "/{user_id}/videos": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "100",
            "description": "Invalid parameter",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "240",
            "description": "Desktop applications cannot call this function for other users",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "368",
            "description": "The action attempted has been deemed abusive or is otherwise disallowed",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "195",
            "description": "The name you are trying to use is invalid",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "210",
            "description": "User not visible",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "275",
            "description": "Cannot determine the target object for this request. Currently supported objects include ad account, business account and associated objects.",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },
    "/v2.9/{app-links-id}": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "\nid\nstring\n\nThe",
            "description": "source url of the app links object\n\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "android\nlist<AndroidAppLink>\n\nApp",
            "description": "links to Android apps\n\nDefault\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "ios\nlist<IosAppLink>\n\nApp",
            "description": "links to apps supported across all iOS devices\n\nDefault\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "ipad\nlist<IosAppLink>\n\nApp",
            "description": "links to iPad apps\n\nDefault\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "iphone\nlist<IosAppLink>\n\nApp",
            "description": "links to iPhone apps\n\nDefault\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "web\nWebAppLink\n\nThe",
            "description": "web\nWebAppLink\n\nThe web equivalent of an app link.An empty value indicates this is a mobile-only object\n\nDefault\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "windows\nlist<WindowsAppLink>\n\nApp",
            "description": "links to Windows apps\n\nDefault\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "windows_phone\nlist<WindowsPhoneAppLink>\n\nApp",
            "description": "links to Windows Phone apps\n\nDefault\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "windows_universal\nlist<WindowsAppLink>\n\nApp",
            "description": "links to Windows and Windows Phone apps\n\nDefault\n",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },


    "/{user_id}/permissions": {
      "DELETE": {},
      "delete": {
        "parameters": [
          {
            "in": "query",
            "name": "2903",
            "description": "Cannot delete this test account",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "100",
            "description": "Invalid parameter",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "2904",
            "description": "Cannot delete the OG Test User",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "240",
            "description": "Desktop applications cannot call this function for other users",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },


    "/v2.9/{crisis-id}": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "100",
            "description": "Invalid parameter",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },

    "/{event_id}": {
      "post": {
        "parameters": [
          {
            "in": "query",
            "name": "content_category\nenum",
            "description": "{BEAUTY_FASHION, BUSINESS, CARS_TRUCKS, COMEDY, CUTE_ANIMALS, ENTERTAINMENT, FAMILY, FOOD_HEALTH, HOME, LIFESTYLE, MUSIC, NEWS, POLITICS, SCIENCE, SPORTS, TECHNOLOGY, VIDEO_GAMING, OTHER}\n\nContent category of this video.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "description\nUTF-8",
            "description": "string\n\nThe description of the video, used as the accompanying status message in any feed story. This parameter can contain mentions of other Facebook Pages using the following syntax:\n@[page-id]\n\nFor example the following description would mention the Facebook Developers page inline:\nTest message @[19292868552] tag\n\nUsage of this feature is subject to review but by using Pages you are an admin of (both to make the API call, and to be used in a mention), and an app you are a developer of, you can test it for yourself before review.\nSupports Emoji\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "embeddable\nboolean\n\nWhether",
            "description": "ther the video is embeddable.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "file_size\nint64\n\nThe",
            "description": "size\nint64\n\nThe size of the entire video file in bytes.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "file_url\nstring\n\nAccessible",
            "description": "URL of a video file. Cannot be used with upload_phase .\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "fov\nint64\n\n360",
            "description": "video only: Vertical field of view\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "guide\nlist<list<int64>>\n\n360",
            "description": "video only: Guide keyframes data. An array of keyframes, each of which is an array of 3 or 4 elements in the following order: [video timestamp (seconds), pitch (degrees, -90 ~ 90), yaw (degrees, -180 ~ 180), field of view (degrees, 40 ~ 90, optional)], ordered by video timestamp in strictly ascending order.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "guide_enabled\nboolean\n\n360",
            "description": "video only: Whether Guide is active.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "initial_heading\nint64\n\n360",
            "description": "video only: Horizontal camera perspective to display when the video begins.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "initial_pitch\nint64\n\n360",
            "description": "video only: Vertical camera perspective to display when the video begins.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "original_projection_type\nenum",
            "description": "{equirectangular, cubemap}\n\n360 video only: The original projection type of the 360 video being uploaded.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "referenced_sticker_id\nnumeric",
            "description": "string or integer\n\nSticker id of the sticker in the post\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "replace_video_id\nnumeric",
            "description": "string or integer\n\nThe video id your uploaded video about to replace\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "slideshow_spec\nJSON",
            "description": "object\n\nSpecification of a list of images that are used to generate video.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "images_urls\nlist<URL>\n\nA",
            "description": "3-7 element array of the URLs of the images. Required.\nRequired\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "duration_ms\ninteger\n\nThe",
            "description": "duration_ms\ninteger\n\nThe duration in milliseconds of each image. Default value is 1000.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "transition_ms\ninteger\n\nThe",
            "description": "duration in milliseconds of the crossfade transition between images. Default value is 1000.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "source\nstring\n\nThe",
            "description": "video, encoded as form data . This field is required.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "spherical\nboolean\nDefault",
            "description": "value: false\n\nSet if the video was recorded in 360 format.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "start_offset\nint64\n\nStart",
            "description": "byte position of the file chunk.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "swap_mode\nenum",
            "description": "{replace}\n\nType of replacing video request\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "thumb\nimage\n\nThe",
            "description": "video thumbnail raw data to be uploaded and associated with a video.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "title\nUTF-8",
            "description": "string\n\nThe title of the video.\nSupports Emoji\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "unpublished_content_type\nenum",
            "description": "{SCHEDULED, DRAFT, ADS_POST}\n\nType of unpublished content, such as scheduled, draft or ads_post.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "upload_phase\nenum",
            "description": "{start, transfer, finish, cancel}\n\nType of chunked upload request.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "upload_session_id\nnumeric",
            "description": "string or integer\n\nID of the chunked upload session.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "video_file_chunk\nstring\n\nThe",
            "description": "video_file_chunk\nstring\n\nThe video file chunk, encoded as form data . This field is required during transfer upload phase.\n",
            "type": "integer",
            "required": "required"
          }
        ]
      },
      "POST": {}
    },
    "/v2.9/{payment-id}/dispute": {
      "PUT": {},
      "put": {
        "parameters": [
          {
            "in": "query",
            "name": "\nreason\n\nThe",
            "description": "reason\n\nThe reason you are settling this dispute. This is required.\n\nenum{GRANTED_REPLACEMENT_ITEM, DENIED_REFUND, BANNED_USER}\n",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },



    "/{product_catalog_id}": {
      "post": {
        "parameters": [
          {
            "in": "query",
            "name": "content_category\nenum",
            "description": "{BEAUTY_FASHION, BUSINESS, CARS_TRUCKS, COMEDY, CUTE_ANIMALS, ENTERTAINMENT, FAMILY, FOOD_HEALTH, HOME, LIFESTYLE, MUSIC, NEWS, POLITICS, SCIENCE, SPORTS, TECHNOLOGY, VIDEO_GAMING, OTHER}\n\nContent category of this video.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "description\nUTF-8",
            "description": "string\n\nThe description of the video, used as the accompanying status message in any feed story. This parameter can contain mentions of other Facebook Pages using the following syntax:\n@[page-id]\n\nFor example the following description would mention the Facebook Developers page inline:\nTest message @[19292868552] tag\n\nUsage of this feature is subject to review but by using Pages you are an admin of (both to make the API call, and to be used in a mention), and an app you are a developer of, you can test it for yourself before review.\nSupports Emoji\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "embeddable\nboolean\n\nWhether",
            "description": "ther the video is embeddable.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "file_size\nint64\n\nThe",
            "description": "size\nint64\n\nThe size of the entire video file in bytes.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "file_url\nstring\n\nAccessible",
            "description": "URL of a video file. Cannot be used with upload_phase .\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "fov\nint64\n\n360",
            "description": "video only: Vertical field of view\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "guide\nlist<list<int64>>\n\n360",
            "description": "video only: Guide keyframes data. An array of keyframes, each of which is an array of 3 or 4 elements in the following order: [video timestamp (seconds), pitch (degrees, -90 ~ 90), yaw (degrees, -180 ~ 180), field of view (degrees, 40 ~ 90, optional)], ordered by video timestamp in strictly ascending order.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "guide_enabled\nboolean\n\n360",
            "description": "video only: Whether Guide is active.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "initial_heading\nint64\n\n360",
            "description": "video only: Horizontal camera perspective to display when the video begins.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "initial_pitch\nint64\n\n360",
            "description": "video only: Vertical camera perspective to display when the video begins.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "original_projection_type\nenum",
            "description": "{equirectangular, cubemap}\n\n360 video only: The original projection type of the 360 video being uploaded.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "referenced_sticker_id\nnumeric",
            "description": "string or integer\n\nSticker id of the sticker in the post\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "replace_video_id\nnumeric",
            "description": "string or integer\n\nThe video id your uploaded video about to replace\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "slideshow_spec\nJSON",
            "description": "object\n\nSpecification of a list of images that are used to generate video.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "images_urls\nlist<URL>\n\nA",
            "description": "3-7 element array of the URLs of the images. Required.\nRequired\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "duration_ms\ninteger\n\nThe",
            "description": "duration_ms\ninteger\n\nThe duration in milliseconds of each image. Default value is 1000.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "transition_ms\ninteger\n\nThe",
            "description": "duration in milliseconds of the crossfade transition between images. Default value is 1000.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "source\nstring\n\nThe",
            "description": "video, encoded as form data . This field is required.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "spherical\nboolean\nDefault",
            "description": "value: false\n\nSet if the video was recorded in 360 format.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "start_offset\nint64\n\nStart",
            "description": "byte position of the file chunk.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "swap_mode\nenum",
            "description": "{replace}\n\nType of replacing video request\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "thumb\nimage\n\nThe",
            "description": "video thumbnail raw data to be uploaded and associated with a video.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "title\nUTF-8",
            "description": "string\n\nThe title of the video.\nSupports Emoji\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "unpublished_content_type\nenum",
            "description": "{SCHEDULED, DRAFT, ADS_POST}\n\nType of unpublished content, such as scheduled, draft or ads_post.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "upload_phase\nenum",
            "description": "{start, transfer, finish, cancel}\n\nType of chunked upload request.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "upload_session_id\nnumeric",
            "description": "string or integer\n\nID of the chunked upload session.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "video_file_chunk\nstring\n\nThe",
            "description": "video_file_chunk\nstring\n\nThe video file chunk, encoded as form data . This field is required during transfer upload phase.\n",
            "type": "integer",
            "required": "required"
          }
        ]
      },
      "POST": {}
    },
    "/v2.9/{crisis-listing-id}/likes": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "\ntotal_count\nunsigned",
            "description": "int32\n\nTotal number of likes\n\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "can_like\nbool\n\nCan",
            "description": "the viewer like\n\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "has_liked\nbool\n\nHas",
            "description": "the viewer liked\n\n",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },



    "/{instagram_media_id}": {
      "post": {
        "parameters": [
          {
            "in": "query",
            "name": "ad_id\nNumeric",
            "description": "String\n\nAd id associated to this Instagram Media\nRequired\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "message\nstring\n\nComment",
            "description": "text\nRequired\n",
            "type": "integer",
            "required": "required"
          }
        ]
      },
      "POST": {}
    },

    "/v2.9/me/inbox": {
      "GET": {}
    }
  },
  "produces": "application/json",
  "host": "graph.facebook.com",
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": "This is the information of the API"
}
