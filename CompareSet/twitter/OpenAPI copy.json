{
  "basePath": "/1.1",
  "paths": {
   
    "/saved_searches/list": {
      "GET": {}
    },
    "/users/suggestions/funny/members": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "slug",
            "description": "The short name of list or a category",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },
    "/mutes/users/list": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "cursor",
            "description": "\nCauses the list of IDs to be broken into pages of no more than 5000 IDs at a time. The number of IDs returned is not guaranteed to be 5000 as suspended users are filtered out after connections are queried. If no cursor is provided, a value of -1 will be assumed, which is the first “page.”\n\nThe response from the API will include a previous_cursor and next_cursor to allow paging back and forth. See [node:10362, title=”Using cursors to navigate collections”] for more information.\n",
            "type": "integer",
            "required": "optional"
          },
          {
            "in": "query",
            "name": "include_entities",
            "description": "The entities node will not be included when set to false .",
            "type": "boolean",
            "required": "optional"
          },
          {
            "in": "query",
            "name": "skip_status",
            "description": "When set to either true , t or 1 statuses will not be included in the returned user objects.",
            "type": "boolean",
            "required": "optional"
          }
        ]
      }
    },

    "https://upload.twitter.com/1.1/media/upload": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "command",
            "description": "Must be set to INIT (case sensitive).",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "total_bytes",
            "description": "The size of the media being uploaded in bytes.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "media_type",
            "description": "The MIME type of the media being uploaded.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "media_category",
            "description": "A string enum value which identifies a media usecase. This identifier is used to enforce usecase specific constraints (e.g. filesize, video duration) and enable advanced features.",
            "type": "integer",
            "required": "sometimes"
          },
          {
            "in": "query",
            "name": "additional_owners",
            "description": "A comma-separated list of user IDs to set as additional owners allowed to use the returned media_id in Tweets or Cards. Up to 100 additional owners may be specified.",
            "type": "integer",
            "required": "optional"
          }
        ]
      },
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "command",
            "description": "Must be set to STATUS (case sensitive).",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "media_id",
            "description": "The media_id returned from the INIT command.",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },
    "/users/profile_banner": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "description": "The ID of the user for whom to return results. Helpful for disambiguating when a valid user ID is also a valid screen name.",
            "type": "integer",
            "required": "optional"
          },
          {
            "in": "query",
            "name": "screen_name",
            "description": "The screen name of the user for whom to return results. Helpful for disambiguating when a valid screen name is also a user ID.",
            "type": "integer",
            "required": "optional"
          }
        ]
      }
    },
    "/saved_searches/show/9569704": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "description": "The ID of the saved search.",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },
    "/trends/available": {
      "GET": {}
    },
    "https://publish.twitter.com/oembed": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "url",
            "description": "required The URL of the Tweet to be embedded https%3A%2F%2Ftwitter.com%Interior%2Fstatus%2F507185938620219395",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "maxwidth",
            "description": "optional The maximum width of a rendered Tweet in whole pixels. This value must be between 220 and 550 inclusive. A supplied value under or over the allowed range will be returned as the minimum or maximum supported width respectively; the reset width value will be reflected in the returned width property. Note that Twitter does not support the oEmbed maxheight parameter. Tweets are fundamentally text, and are therefore of unpredictable height that cannot be scaled like an image or video. Relatedly, the oEmbed response will not provide a value for height . Implementations that need consistent heights for Tweets should refer to the hide_thread and hide_media parameters below 325",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "hide_media",
            "description": "optional When set to true , t , or 1 links in a Tweet are not expanded to photo, video, or link previews false true",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "hide_thread",
            "description": "optional When set to true , t , or 1 a collapsed version of the previous Tweet in a conversation thread will not be displayed when the requested Tweet is in reply to another Tweet false true",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "omit_script",
            "description": "optional When set to true , t , or 1 the <script> responsible for loading widgets.js will not be returned. Your webpages should include their own reference to widgets.js for use across all Twitter widgets including Embedded Tweets false true",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "align",
            "description": "optional Specifies whether the embedded Tweet should be floated left, right, or center in the page relative to the parent element. Valid values are left , right , center , and none none right",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "related",
            "description": "optional A comma-separated list of Twitter usernames related to your content. This value will be forwarded to Tweet action intents if a viewer chooses to reply, like, or retweet the embedded Tweet twitterapi,twitter",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "lang",
            "description": "optional Request returned HTML and a rendered Tweet in the specified Twitter language supported by embedded Tweets en fr",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "theme",
            "description": "optional When set to dark , the Tweet is displayed with light text over a dark background light dark",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "link_color",
            "description": "optional Adjust the color of Tweet text links with a hexadecimal color value %2355acee",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "widget_type",
            "description": "optional Set to video to return a Twitter Video embed for the given Tweet video",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },
    "/statuses/retweet/:id": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "description": "The numerical ID of the desired status.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "trim_user",
            "description": "When set to either true , t or 1 , each tweet returned in a timeline will include a user object including only the status authors numerical ID. Omit this parameter to receive the complete user object.",
            "type": "boolean",
            "required": "optional"
          }
        ]
      }
    },
    "/trends/closest": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "lat",
            "description": "If provided with a long parameter the available trend locations will be sorted by distance, nearest to furthest, to the co-ordinate pair. The valid ranges for longitude is -180.0 to +180.0 (West is negative, East is positive) inclusive.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "long",
            "description": "If provided with a lat parameter the available trend locations will be sorted by distance, nearest to furthest, to the co-ordinate pair. The valid ranges for longitude is -180.0 to +180.0 (West is negative, East is positive) inclusive.",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },
    "/mutes/users/create": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "screen_name",
            "description": "The screen name of the potentially muted user. Helpful for disambiguating when a valid screen name is also a user ID.",
            "type": "integer",
            "required": "optional"
          },
          {
            "in": "query",
            "name": "user_id",
            "description": "The ID of the potentially muted user. Helpful for disambiguating when a valid user ID is also a valid screen name.",
            "type": "integer",
            "required": "optional"
          }
        ]
      }
    },
    "/statuses/unretweet/:id": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "description": "The numerical ID of the desired status.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "trim_user",
            "description": "When set to either true , t or 1 , each tweet returned in a timeline will include a user object including only the status authors numerical ID. Omit this parameter to receive the complete user object.",
            "type": "boolean",
            "required": "optional"
          }
        ]
      }
    },
    "/saved_searches/create": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "query",
            "description": "The query of the search the user would like to save.",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },
    "/statuses/update": {
      "post": {
        "parameters": [
          {
            "in": "query",
            "name": "status",
            "description": "The text of your status update, typically up to 140 characters. URL encode as necessary. t.co link wrapping may affect character counts. There are some special commands in this field to be aware of. For instance, preceding a message with “D ” or “M ” and following it with a screen name can create a direct message to that user if the relationship allows for it.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "in_reply_to_status_id",
            "description": "The ID of an existing status that the update is in reply to. Note: This parameter will be ignored unless the author of the Tweet this parameter references is mentioned within the status text. Therefore, you must include @username , where username is the author of the referenced Tweet, within the update.",
            "type": "integer",
            "required": "optional"
          },
          {
            "in": "query",
            "name": "possibly_sensitive",
            "description": "If you upload Tweet media that might be considered sensitive content such as nudity, violence, or medical procedures, you should set this value to true. See Media setting and best practices for more context. Defaults to false .",
            "type": "boolean",
            "required": "optional"
          },
          {
            "in": "query",
            "name": "lat",
            "description": "The latitude of the location this Tweet refers to. This parameter will be ignored unless it is inside the range -90.0 to +90.0 (North is positive) inclusive. It will also be ignored if there isn’t a corresponding long parameter.",
            "type": "integer",
            "required": "optional"
          },
          {
            "in": "query",
            "name": "long",
            "description": "The longitude of the location this Tweet refers to. The valid ranges for longitude is -180.0 to +180.0 (East is positive) inclusive. This parameter will be ignored if outside that range, if it is not a number, if geo_enabled is disabled, or if there not a corresponding lat parameter.",
            "type": "integer",
            "required": "optional"
          },
          {
            "in": "query",
            "name": "place_id",
            "description": "A place in the world.",
            "type": "integer",
            "required": "optional"
          },
          {
            "in": "query",
            "name": "display_coordinates",
            "description": "Whether or not to put a pin on the exact coordinates a Tweet has been sent from.",
            "type": "boolean",
            "required": "optional"
          },
          {
            "in": "query",
            "name": "trim_user",
            "description": "When set to either true , t or 1 , each Tweet returned in a timeline will include a user object including only the status authors numerical ID. Omit this parameter to receive the complete user object.",
            "type": "boolean",
            "required": "optional"
          },
          {
            "in": "query",
            "name": "media_ids",
            "description": "A list of media_ids to associate with the Tweet. You may include up to 4 photos or 1 animated GIF or 1 video in a Tweet. See Uploading Media for further details on uploading media.",
            "type": "integer",
            "required": "optional"
          }
        ]
      },
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "media",
            "description": "The raw binary file content being uploaded. Cannot be used with media_data .",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "media_data",
            "description": "The base64-encoded file content being uploaded. Cannot be used with media .",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "additional_owners",
            "description": "A comma-separated list of user IDs to set as additional owners allowed to use the returned media_id in Tweets or Cards. Up to 100 additional owners may be specified.",
            "type": "integer",
            "required": "optional"
          }
        ]
      }
    },
    "/users/lookup": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "screen_name",
            "description": "A comma separated list of screen names, up to 100 are allowed in a single request. You are strongly encouraged to use a POST for larger (up to 100 screen names) requests.",
            "type": "integer",
            "required": "optional"
          },
          {
            "in": "query",
            "name": "user_id",
            "description": "A comma separated list of user IDs, up to 100 are allowed in a single request. You are strongly encouraged to use a POST for larger requests.",
            "type": "integer",
            "required": "optional"
          },
          {
            "in": "query",
            "name": "include_entities",
            "description": "The entities node that may appear within embedded statuses will not be included when set to false .",
            "type": "boolean",
            "required": "optional"
          }
        ]
      }
    },
    "/statuses/user_timeline": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "description": "The ID of the user for whom to return results for.",
            "type": "integer",
            "required": "optional"
          },
          {
            "in": "query",
            "name": "screen_name",
            "description": "The screen name of the user for whom to return results for.",
            "type": "integer",
            "required": "optional"
          },
          {
            "in": "query",
            "name": "since_id",
            "description": "Returns results with an ID greater than (that is, more recent than) the specified ID. There are limits to the number of Tweets which can be accessed through the API. If the limit of Tweets has occured since the since_id, the since_id will be forced to the oldest ID available.",
            "type": "integer",
            "required": "optional"
          },
          {
            "in": "query",
            "name": "count",
            "description": "Specifies the number of Tweets to try and retrieve, up to a maximum of 200 per distinct request. The value of count is best thought of as a limit to the number of Tweets to return because suspended or deleted content is removed after the count has been applied. We include retweets in the count, even if include_rts is not supplied. It is recommended you always send include_rts=1 when using this API method.",
            "type": "integer",
            "required": "optional"
          },
          {
            "in": "query",
            "name": "max_id",
            "description": "Returns results with an ID less than (that is, older than) or equal to the specified ID.",
            "type": "integer",
            "required": "optional"
          },
          {
            "in": "query",
            "name": "trim_user",
            "description": "When set to either true , t or 1 , each Tweet returned in a timeline will include a user object including only the status authors numerical ID. Omit this parameter to receive the complete user object.",
            "type": "boolean",
            "required": "optional"
          },
          {
            "in": "query",
            "name": "exclude_replies",
            "description": "This parameter will prevent replies from appearing in the returned timeline. Using exclude_replies with the count parameter will mean you will receive up-to count tweets — this is because the count parameter retrieves that many Tweets before filtering out retweets and replies. This parameter is only supported for JSON and XML responses.",
            "type": "boolean",
            "required": "optional"
          },
          {
            "in": "query",
            "name": "contributor_details",
            "description": "This parameter enhances the contributors element of the status response to include the screen_name of the contributor. By default only the user_id of the contributor is included.",
            "type": "boolean",
            "required": "optional"
          },
          {
            "in": "query",
            "name": "include_rts",
            "description": "When set to false , the timeline will strip any native retweets (though they will still count toward both the maximal length of the timeline and the slice selected by the count parameter). Note: If you’re using the trim_user parameter in conjunction with include_rts, the retweets will still contain a full user object.",
            "type": "boolean",
            "required": "optional"
          }
        ]
      }
    },
    "/trends/place": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "description": "The Yahoo! Where On Earth ID of the location to return trending information for. Global information is available by using 1 as the WOEID .",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "exclude",
            "description": "Setting this equal to hashtags will remove all hashtags from the trends list.",
            "type": "integer",
            "required": "optional"
          }
        ]
      }
    }, 
    "/search/tweets": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "q",
            "description": "A UTF-8, URL-encoded search query of 500 characters maximum, including operators. Queries may additionally be limited by complexity.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "geocode",
            "description": "Returns tweets by users located within a given radius of the given latitude/longitude. The location is preferentially taking from the Geotagging API, but will fall back to their Twitter profile. The parameter value is specified by ” latitude,longitude,radius ”, where radius units must be specified as either ” mi ” (miles) or ” km ” (kilometers). Note that you cannot use the near operator via the API to geocode arbitrary locations; however you can use this geocode parameter to search near geocodes directly. A maximum of 1,000 distinct “sub-regions” will be considered when using the radius modifier.",
            "type": "integer",
            "required": "optional"
          },
          {
            "in": "query",
            "name": "lang",
            "description": "Restricts tweets to the given language, given by an ISO 639-1 code. Language detection is best-effort.",
            "type": "integer",
            "required": "optional"
          },
          {
            "in": "query",
            "name": "locale",
            "description": "Specify the language of the query you are sending (only ja is currently effective). This is intended for language-specific consumers and the default should work in the majority of cases.",
            "type": "integer",
            "required": "optional"
          },
          {
            "in": "query",
            "name": "result_type",
            "description": "\nOptional. Specifies what type of search results you would prefer to receive. The current default is “mixed.” Valid values include:\n\n* mixed : Include both popular and real time results in the response.\n\n* recent : return only the most recent results in the response\n\n* popular : return only the most popular results in the response.\n",
            "type": "integer",
            "required": "optional"
          },
          {
            "in": "query",
            "name": "count",
            "description": "The number of tweets to return per page, up to a maximum of 100. Defaults to 15. This was formerly the “rpp” parameter in the old Search API.",
            "type": "integer",
            "required": "optional"
          },
          {
            "in": "query",
            "name": "until",
            "description": "Returns tweets created before the given date. Date should be formatted as YYYY-MM-DD. Keep in mind that the search index has a 7-day limit. In other words, no tweets will be found for a date older than one week.",
            "type": "integer",
            "required": "optional"
          },
          {
            "in": "query",
            "name": "since_id",
            "description": "Returns results with an ID greater than (that is, more recent than) the specified ID. There are limits to the number of Tweets which can be accessed through the API. If the limit of Tweets has occured since the since_id, the since_id will be forced to the oldest ID available.",
            "type": "integer",
            "required": "optional"
          },
          {
            "in": "query",
            "name": "max_id",
            "description": "Returns results with an ID less than (that is, older than) or equal to the specified ID.",
            "type": "integer",
            "required": "optional"
          },
          {
            "in": "query",
            "name": "include_entities",
            "description": "The entities node will not be included when set to false .",
            "type": "boolean",
            "required": "optional"
          }
        ]
      }
    },
    "/saved_searches/destroy/62353170": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "description": "The ID of the saved search.",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },
    "/users/report_spam": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "screen_name",
            "description": "The screen_name of the user to report as a spammer. Helpful for disambiguating when a valid screen name is also a user ID.",
            "type": "integer",
            "required": "optional"
          },
          {
            "in": "query",
            "name": "user_id",
            "description": "The ID of the user to report as a spammer. Helpful for disambiguating when a valid user ID is also a valid screen name.",
            "type": "integer",
            "required": "optional"
          },
          {
            "in": "query",
            "name": "perform_block",
            "description": "Whether the account should be blocked by the authenticated user, as well as being reported for spam.",
            "type": "boolean",
            "required": "optional"
          }
        ]
      }
    },
    "/users/suggestions/:slug": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "slug",
            "description": "The short name of list or a category",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "lang",
            "description": "Restricts the suggested categories to the requested language. The language must be specified by the appropriate two letter ISO 639-1 representation. Currently supported languages are provided by the GET help / languages API request. Unsupported language codes will receive English (en) results. If you use lang in this request, ensure you also include it when requesting the GET users / suggestions / :slug list.",
            "type": "integer",
            "required": "optional"
          }
        ]
      }
    },
    "https://twitter.com/messages/compose": {
      "POST": {}
    },
    "/users/show": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "description": "The ID of the user for whom to return results. Either an id or screen_name is required for this method.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "screen_name",
            "description": "The screen name of the user for whom to return results. Either a id or screen_name is required for this method.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "include_entities",
            "description": "The entities node will not be included when set to false .",
            "type": "boolean",
            "required": "optional"
          }
        ]
      }
    },
    "/statuses/update_with_media": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "status",
            "description": "The text of your status update. URL encode as necessary. t.co link wrapping may affect character counts if the post contains URLs. You must additionally account for the characters_reserved_per_media per uploaded media, additionally accounting for space characters in between finalized URLs. Note : Request the GET help / configuration endpoint to get the current characters_reserved_per_media and max_media_per_upload values.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "media[]",
            "description": "Up to max_media_per_upload files may be specified in the request, each named media[] . Supported image formats are PNG, JPG and GIF, including animated GIFs of up to 3MB . This data must be either the raw image bytes or encoded as base64. Note : Request the GET help / configuration endpoint to get the current max_media_per_upload and photo_size_limit values.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "possibly_sensitive",
            "description": "Set to true for content which may not be suitable for every audience.",
            "type": "integer",
            "required": "optional"
          },
          {
            "in": "query",
            "name": "in_reply_to_status_id",
            "description": "The ID of an existing status that the update is in reply to. Note : This parameter will be ignored unless the author of the tweet this parameter references is mentioned within the status text. Therefore, you must include @username , where username is the author of the referenced tweet, within the update.",
            "type": "integer",
            "required": "optional"
          },
          {
            "in": "query",
            "name": "lat",
            "description": "The latitude of the location this tweet refers to. This parameter will be ignored unless it is inside the range -90.0 to +90.0 (North is positive) inclusive. It will also be ignored if there isn’t a corresponding long parameter.",
            "type": "integer",
            "required": "optional"
          },
          {
            "in": "query",
            "name": "long",
            "description": "The longitude of the location this tweet refers to. The valid ranges for longitude is -180.0 to +180.0 (East is positive) inclusive. This parameter will be ignored if outside that range, not a number, geo_enabled is disabled, or if there not a corresponding lat parameter.",
            "type": "integer",
            "required": "optional"
          },
          {
            "in": "query",
            "name": "place_id",
            "description": "A place in the world identified by a Twitter place ID. Place IDs can be retrieved from geo/reverse_geocode.",
            "type": "integer",
            "required": "optional"
          },
          {
            "in": "query",
            "name": "display_coordinates",
            "description": "Whether or not to put a pin on the exact coordinates a tweet has been sent from.",
            "type": "boolean",
            "required": "optional"
          }
        ]
      }
    },
    "/statuses/destroy/:id": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "description": "The numerical ID of the desired status.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "trim_user",
            "description": "When set to either true , t or 1 , each tweet returned in a timeline will include a user object including only the status authors numerical ID. Omit this parameter to receive the complete user object.",
            "type": "boolean",
            "required": "optional"
          }
        ]
      }
    },
    "/mutes/users/ids": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "cursor",
            "description": "\nCauses the list of IDs to be broken into pages of no more than 5000 IDs at a time. The number of IDs returned is not guaranteed to be 5000 as suspended users are filtered out. If no cursor is provided, a value of -1 will be assumed, which is the first “page.”\n\nThe response from the API will include a previous_cursor and next_cursor to allow paging back and forth. See [node:10362, title=”Using cursors to navigate collections”] for more information.\n",
            "type": "integer",
            "required": "optional"
          }
        ]
      }
    },
    "/statuses/retweets/:id": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "description": "The numerical ID of the desired status.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "count",
            "description": "Specifies the number of records to retrieve. Must be less than or equal to 100.",
            "type": "integer",
            "required": "optional"
          },
          {
            "in": "query",
            "name": "trim_user",
            "description": "When set to either true , t or 1 , each tweet returned in a timeline will include a user object including only the status authors numerical ID. Omit this parameter to receive the complete user object.",
            "type": "boolean",
            "required": "optional"
          }
        ]
      }
    },
    "/statuses/lookup": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "description": "A comma separated list of Tweet IDs, up to 100 are allowed in a single request.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "include_entities",
            "description": "The entities node that may appear within embedded statuses will not be included when set to false .",
            "type": "boolean",
            "required": "optional"
          },
          {
            "in": "query",
            "name": "trim_user",
            "description": "When set to either true , t or 1 , each Tweet returned in a timeline will include a user object including only the status authors numerical ID. Omit this parameter to receive the complete user object.",
            "type": "boolean",
            "required": "optional"
          },
          {
            "in": "query",
            "name": "map",
            "description": "When using the map parameter, Tweets that do not exist or cannot be viewed by the current user will still have their key represented but with an explicitly null value paired with it",
            "type": "boolean",
            "required": "optional"
          }
        ]
      }
    },

    "https://upload.twitter.com/1.1/media/metadata/create": {
      "POST": {}
    },
    "/statuses/retweeters/ids": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "description": "The numerical ID of the desired status.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "cursor",
            "description": "\nCauses the list of IDs to be broken into pages of no more than 100 IDs at a time. The number of IDs returned is not guaranteed to be 100 as suspended users are filtered out after connections are queried. If no cursor is provided, a value of -1 will be assumed, which is the first “page.”\n\nThe response from the API will include a previous_cursor and next_cursor to allow paging back and forth. See our cursor docs for more information.\n\nWhile this method supports the cursor parameter, the entire result set can be returned in a single cursored collection. Using the count parameter with this method will not provide segmented cursors for use with this parameter.\n",
            "type": "integer",
            "required": "semi-optional"
          },
          {
            "in": "query",
            "name": "stringify_ids",
            "description": "Many programming environments will not consume Tweet ids due to their size. Provide this option to have ids returned as strings instead.",
            "type": "boolean",
            "required": "optional"
          }
        ]
      }
    },
    "/users/suggestions": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "lang",
            "description": "Restricts the suggested categories to the requested language. The language must be specified by the appropriate two letter ISO 639-1 representation. Currently supported languages are provided by the GET help / languages API request. Unsupported language codes will receive English (en) results. If you use lang in this request, ensure you also include it when requesting the GET users / suggestions / :slug list.",
            "type": "integer",
            "required": "optional"
          }
        ]
      }
    },
    "/mutes/users/destroy": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "screen_name",
            "description": "The screen name of the potentially muted user. Helpful for disambiguating when a valid screen name is also a user ID.",
            "type": "integer",
            "required": "optional"
          },
          {
            "in": "query",
            "name": "user_id",
            "description": "The ID of the potentially muted user. Helpful for disambiguating when a valid user ID is also a valid screen name.",
            "type": "integer",
            "required": "optional"
          }
        ]
      }
    },

    "/statuses/retweets_of_me": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "count",
            "description": "Specifies the number of records to retrieve. Must be less than or equal to 100. If omitted, 20 will be assumed.",
            "type": "integer",
            "required": "optional"
          },
          {
            "in": "query",
            "name": "since_id",
            "description": "Returns results with an ID greater than (that is, more recent than) the specified ID. There are limits to the number of Tweets which can be accessed through the API. If the limit of Tweets has occured since the since_id, the since_id will be forced to the oldest ID available.",
            "type": "integer",
            "required": "optional"
          },
          {
            "in": "query",
            "name": "max_id",
            "description": "Returns results with an ID less than (that is, older than) or equal to the specified ID.",
            "type": "integer",
            "required": "optional"
          },
          {
            "in": "query",
            "name": "trim_user",
            "description": "When set to either true , t or 1 , each tweet returned in a timeline will include a user object including only the status authors numerical ID. Omit this parameter to receive the complete user object.",
            "type": "boolean",
            "required": "optional"
          },
          {
            "in": "query",
            "name": "include_entities",
            "description": "The tweet entities node will not be included when set to false .",
            "type": "boolean",
            "required": "optional"
          },
          {
            "in": "query",
            "name": "include_user_entities",
            "description": "The user entities node will not be included when set to false .",
            "type": "boolean",
            "required": "optional"
          }
        ]
      }
    },
    "/users/search": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "q",
            "description": "The search query to run against people search.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "page",
            "description": "Specifies the page of results to retrieve.",
            "type": "integer",
            "required": "optional"
          },
          {
            "in": "query",
            "name": "count",
            "description": "The number of potential user results to retrieve per page. This value has a maximum of 20.",
            "type": "integer",
            "required": "optional"
          },
          {
            "in": "query",
            "name": "include_entities",
            "description": "The entities node will not be included in embedded Tweet objects when set to false .",
            "type": "boolean",
            "required": "optional"
          }
        ]
      }
    },
    "/statuses/home_timeline": {
      "post": {
        "parameters": [
          {
            "in": "query",
            "name": "count",
            "description": "Specifies the number of records to retrieve. Must be less than or equal to 200. Defaults to 20. The value of count is best thought of as a limit to the number of tweets to return because suspended or deleted content is removed after the count has been applied.",
            "type": "integer",
            "required": "optional"
          },
          {
            "in": "query",
            "name": "since_id",
            "description": "Returns results with an ID greater than (that is, more recent than) the specified ID. There are limits to the number of Tweets which can be accessed through the API. If the limit of Tweets has occured since the since_id, the since_id will be forced to the oldest ID available.",
            "type": "integer",
            "required": "optional"
          },
          {
            "in": "query",
            "name": "max_id",
            "description": "Returns results with an ID less than (that is, older than) or equal to the specified ID.",
            "type": "integer",
            "required": "optional"
          },
          {
            "in": "query",
            "name": "trim_user",
            "description": "When set to either true , t or 1 , each Tweet returned in a timeline will include a user object including only the status authors numerical ID. Omit this parameter to receive the complete user object.",
            "type": "boolean",
            "required": "optional"
          },
          {
            "in": "query",
            "name": "exclude_replies",
            "description": "This parameter will prevent replies from appearing in the returned timeline. Using exclude_replies with the count parameter will mean you will receive up-to count Tweets — this is because the count parameter retrieves that many Tweets before filtering out retweets and replies.",
            "type": "boolean",
            "required": "optional"
          },
          {
            "in": "query",
            "name": "include_entities",
            "description": "The entities node will not be included when set to false .",
            "type": "boolean",
            "required": "optional"
          }
        ]
      }
    },
    "/statuses/show": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "description": "The numerical ID of the desired Tweet.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "trim_user",
            "description": "When set to either true , t or 1 , each Tweet returned in a timeline will include a user object including only the status authors numerical ID. Omit this parameter to receive the complete user object.",
            "type": "boolean",
            "required": "optional"
          },
          {
            "in": "query",
            "name": "include_my_retweet",
            "description": "When set to either true , t or 1 , any Tweets returned that have been retweeted by the authenticating user will include an additional current_user_retweet node, containing the ID of the source status for the retweet.",
            "type": "boolean",
            "required": "optional"
          },
          {
            "in": "query",
            "name": "include_entities",
            "description": "The entities node will not be included when set to false .",
            "type": "boolean",
            "required": "optional"
          }
        ]
      }
    },
  
    "/statuses/mentions_timeline": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "count",
            "description": "Specifies the number of Tweets to try and retrieve, up to a maximum of 200. The value of count is best thought of as a limit to the number of tweets to return because suspended or deleted content is removed after the count has been applied. We include retweets in the count, even if include_rts is not supplied. It is recommended you always send include_rts=1 when using this API method.",
            "type": "integer",
            "required": "optional"
          },
          {
            "in": "query",
            "name": "since_id",
            "description": "Returns results with an ID greater than (that is, more recent than) the specified ID. There are limits to the number of Tweets which can be accessed through the API. If the limit of Tweets has occured since the since_id, the since_id will be forced to the oldest ID available.",
            "type": "integer",
            "required": "optional"
          },
          {
            "in": "query",
            "name": "max_id",
            "description": "Returns results with an ID less than (that is, older than) or equal to the specified ID.",
            "type": "integer",
            "required": "optional"
          },
          {
            "in": "query",
            "name": "trim_user",
            "description": "When set to either true , t or 1 , each tweet returned in a timeline will include a user object including only the status authors numerical ID. Omit this parameter to receive the complete user object.",
            "type": "boolean",
            "required": "optional"
          },
          {
            "in": "query",
            "name": "include_entities",
            "description": "The entities node will not be included when set to false .",
            "type": "boolean",
            "required": "optional"
          }
        ]
      }
    },

    "/friendships/outgoing.format": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "cursor",
            "description": "\nCauses the list of connections to be broken into pages of no more than 5000 IDs at a time. The number of IDs returned is not guaranteed to be 5000 as suspended users are filtered out after connections are queried. If no cursor is provided, a value of -1 will be assumed, which is the first “page.”\n\nThe response from the API will include a previous_cursor and next_cursor to allow paging back and forth. See [node:10362, title=”Using cursors to navigate collections”] for more information.\n",
            "type": "integer",
            "required": "semi-optional"
          },
          {
            "in": "query",
            "name": "stringify_ids",
            "description": "Many programming environments will not consume our Tweet ids due to their size. Provide this option to have ids returned as strings instead. More about [node:194].",
            "type": "boolean",
            "required": "optional"
          }
        ]
      }
    },
  "host": "api.twitter.com",
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": "This is the information of the API"
}