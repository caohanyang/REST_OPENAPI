{
  "basePath": "/youtube/v3",
  "paths": {
    "/videoCategories": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "Required",
            "description": "parameters",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "part",
            "description": "string\nThe part parameter specifies the videoCategory resource properties that the API response will include. Set the parameter value to snippet . The snippet part has a quota cost of 2 units.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "Filters",
            "description": "(specify exactly one of the following parameters)",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "id",
            "description": "string\nThe id parameter specifies a comma-separated list of video category IDs for the resources that you are retrieving.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "regionCode",
            "description": "string\nThe regionCode parameter instructs the API to return the list of video categories available in the specified country. The parameter value is an ISO 3166-1 alpha-2 country code.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "Optional",
            "description": "parameters",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "hl",
            "description": "string\nThe hl parameter specifies the language that should be used for text values in the API response. The default value is en_US .",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },
    "/activities": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "Required",
            "description": "parameters",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "part",
            "description": "string\nThe part parameter serves two purposes in this operation. It identifies the properties that the write operation will set as well as the properties that the API response will include.\n\nThe following list contains the part names that you can include in the parameter value and the quota cost for each part:\ncontentDetails : 2\nid : 0\nsnippet : 2\n",
            "type": "integer",
            "required": "required"
          }
        ]
      },
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "Required",
            "description": "parameters",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "part",
            "description": "string\nThe part parameter specifies a comma-separated list of one or more activity resource properties that the API response will include.\n\nIf the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in an activity resource, the snippet property contains other properties that identify the type of activity, a display title for the activity, and so forth. If you set part=snippet , the API response will also contain all of those nested properties.\n\nThe following list contains the part names that you can include in the parameter value and the quota cost for each part:\ncontentDetails : 2\nid : 0\nsnippet : 2\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "Filters",
            "description": "(specify exactly one of the following parameters)",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "channelId",
            "description": "string\nThe channelId parameter specifies a unique YouTube channel ID. The API will then return a list of that channel's activities.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "home",
            "description": "boolean\nNote: This parameter has been deprecated.\nFor requests that set this parameter, the API response contains items similar to those that a logged-out user would see on the YouTube home page. Note that this parameter can only be used in a properly authorized request .",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "mine",
            "description": "boolean\nThis parameter can only be used in a properly authorized request . Set this parameter's value to true to retrieve a feed of the authenticated user's activities.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "Optional",
            "description": "parameters",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "maxResults",
            "description": "unsigned integer\nThe maxResults parameter specifies the maximum number of items that should be returned in the result set. Acceptable values are 0 to 50 , inclusive. The default value is 5 .",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "pageToken",
            "description": "string\nThe pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken and prevPageToken properties identify other pages that could be retrieved.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "publishedAfter",
            "description": "datetime\nThe publishedAfter parameter specifies the earliest date and time that an activity could have occurred for that activity to be included in the API response. If the parameter value specifies a day, but not a time, then any activities that occurred that day will be included in the result set. The value is specified in ISO 8601 ( YYYY-MM-DDThh:mm:ss.sZ ) format.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "publishedBefore",
            "description": "datetime\nThe publishedBefore parameter specifies the date and time before which an activity must have occurred for that activity to be included in the API response. If the parameter value specifies a day, but not a time, then any activities that occurred that day will be excluded from the result set. The value is specified in ISO 8601 ( YYYY-MM-DDThh:mm:ss.sZ ) format.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "regionCode",
            "description": "string\nThe regionCode parameter instructs the API to return results for the specified country. The parameter value is an ISO 3166-1 alpha-2 country code. YouTube uses this value when the authorized user's previous activity on YouTube does not provide enough information to generate the activity feed.",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },
    "HttpError,": {
      "delete": {
        "parameters": [
          {
            "in": "query",
            "name": "badRequest",
            "description": "(400) banWithoutReject The banAuthor parameter can only be used if the moderationStatus parameter value is rejected .",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "badRequest",
            "description": "(400) operationNotSupported Comments not based on Google+ offer only limited moderation functionality.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "badRequest",
            "description": "(400) processingFailure The API server failed to successfully process the request. While this can be a transient error, it usually indicates that the request's input is invalid.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "forbidden",
            "description": "(403) forbidden The moderation status of one or more comments cannot be set due to insufficient permissions. The request might not be properly authorized.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "notFound",
            "description": "(404) commentNotFound One or more of the comments that the request is trying to update cannot be found. Check the values of the request's id parameter to ensure that they are correct.",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },
    "/guideCategories": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "Required",
            "description": "parameters",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "part",
            "description": "string\nThe part parameter specifies the guideCategory resource properties that the API response will include. Set the parameter value to snippet . The snippet part has a quota cost of 2 units.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "Filters",
            "description": "(specify exactly one of the following parameters)",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "id",
            "description": "string\nThe id parameter specifies a comma-separated list of the YouTube channel category ID(s) for the resource(s) that are being retrieved. In a guideCategory resource, the id property specifies the YouTube channel category ID.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "regionCode",
            "description": "string\nThe regionCode parameter instructs the API to return the list of guide categories available in the specified country. The parameter value is an ISO 3166-1 alpha-2 country code.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "Optional",
            "description": "parameters",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "hl",
            "description": "string\nThe hl parameter specifies the language that will be used for text values in the API response. The default value is en-US .",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },
    "/comments": {
      "DELETE": {
        "parameters": [
          {
            "in": "query",
            "name": "Required",
            "description": "parameters",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "id",
            "description": "string\nThe id parameter specifies the comment ID for the resource that is being deleted.",
            "type": "integer",
            "required": "required"
          }
        ]
      },
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "Required",
            "description": "parameters",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "part",
            "description": "string\nThe part parameter identifies the properties that the API response will include. Set the parameter value to snippet . The snippet part has a quota cost of 2 units.\n\nThe following list contains the part names that you can include in the parameter value and the quota cost for each part:\nid : 0\nsnippet : 1\n",
            "type": "integer",
            "required": "required"
          }
        ]
      },
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "Required",
            "description": "parameters",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "part",
            "description": "string\nThe part parameter specifies a comma-separated list of one or more comment resource properties that the API response will include.\n\nThe following list contains the part names that you can include in the parameter value and the quota cost for each part:\nid : 0\nsnippet : 1\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "Filters",
            "description": "(specify exactly one of the following parameters)",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "id",
            "description": "string\nThe id parameter specifies a comma-separated list of comment IDs for the resources that are being retrieved. In a comment resource, the id property specifies the comment's ID.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "parentId",
            "description": "string\nThe parentId parameter specifies the ID of the comment for which replies should be retrieved.\n\nNote: YouTube currently supports replies only for top-level comments. However, replies to replies may be supported in the future.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "Optional",
            "description": "parameters",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "maxResults",
            "description": "unsigned integer\nThe maxResults parameter specifies the maximum number of items that should be returned in the result set.\n\nNote: This parameter is not supported for use in conjunction with the id parameter. Acceptable values are 1 to 100 , inclusive. The default value is 20 .",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "pageToken",
            "description": "string\nThe pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken property identifies the next page of the result that can be retrieved.\n\nNote: This parameter is not supported for use in conjunction with the id parameter.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "textFormat",
            "description": "string\nThis parameter indicates whether the API should return comments formatted as HTML or as plain text. The default value is html .\n\nAcceptable values are: html – Returns the comments in HTML format. This is the default value.\nplainText – Returns the comments in plain text format.\n",
            "type": "integer",
            "required": "required"
          }
        ]
      },
      "PUT": {
        "parameters": [
          {
            "in": "query",
            "name": "Required",
            "description": "parameters",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "part",
            "description": "string\nThe part parameter identifies the properties that the API response will include. You must at least include the snippet part in the parameter value since that part contains all of the properties that the API request can update.\n\nThe following list contains the part names that you can include in the parameter value and the quota cost for each part:\nid : 0\nsnippet : 1\n",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },
    "/channels": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "Required",
            "description": "parameters",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "part",
            "description": "string\nThe part parameter specifies a comma-separated list of one or more channel resource properties that the API response will include.\n\nIf the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in a channel resource, the contentDetails property contains other properties, such as the uploads properties. As such, if you set part=contentDetails , the API response will also contain all of those nested properties.\n\nThe following list contains the part names that you can include in the parameter value and the quota cost for each part:\nauditDetails : 4\nbrandingSettings : 2\ncontentDetails : 2\ncontentOwnerDetails : 2\nid : 0\ninvideoPromotion : 2\nlocalizations : 2\nsnippet : 2\nstatistics : 2\nstatus : 2\ntopicDetails : 2\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "Filters",
            "description": "(specify exactly one of the following parameters)",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "categoryId",
            "description": "string\nThe categoryId parameter specifies a YouTube guide category , thereby requesting YouTube channels associated with that category.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "forUsername",
            "description": "string\nThe forUsername parameter specifies a YouTube username, thereby requesting the channel associated with that username.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "id",
            "description": "string\nThe id parameter specifies a comma-separated list of the YouTube channel ID(s) for the resource(s) that are being retrieved. In a channel resource, the id property specifies the channel's YouTube channel ID.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "managedByMe",
            "description": "boolean\nThis parameter can only be used in a properly authorized request . Note: This parameter is intended exclusively for YouTube content partners.\n\nSet this parameter's value to true to instruct the API to only return channels managed by the content owner that the onBehalfOfContentOwner parameter specifies. The user must be authenticated as a CMS account linked to the specified content owner and onBehalfOfContentOwner must be provided.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "mine",
            "description": "boolean\nThis parameter can only be used in a properly authorized request . Set this parameter's value to true to instruct the API to only return channels owned by the authenticated user.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "mySubscribers",
            "description": "boolean\nThis parameter has been deprecated. This parameter can only be used in a properly authorized request . Use the subscriptions.list method and its mySubscribers parameter to retrieve a list of subscribers to the authenticated user's channel.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "Optional",
            "description": "parameters",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "hl",
            "description": "string\nThe hl parameter instructs the API to retrieve localized resource metadata for a specific application language that the YouTube website supports . The parameter value must be a language code included in the list returned by the i18nLanguages.list method.\n\nIf localized resource details are available in that language, the resource's snippet.localized object will contain the localized values. However, if localized details are not available, the snippet.localized object will contain resource details in the resource's default language .",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "maxResults",
            "description": "unsigned integer\nThe maxResults parameter specifies the maximum number of items that should be returned in the result set. Acceptable values are 0 to 50 , inclusive. The default value is 5 .",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "onBehalfOfContentOwner",
            "description": "string\nThis parameter can only be used in a properly authorized request . Note: This parameter is intended exclusively for YouTube content partners.\n\nThe onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "pageToken",
            "description": "string\nThe pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken and prevPageToken properties identify other pages that could be retrieved.",
            "type": "integer",
            "required": "required"
          }
        ]
      },
      "PUT": {
        "parameters": [
          {
            "in": "query",
            "name": "Required",
            "description": "parameters",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "part",
            "description": "string\nThe part parameter serves two purposes in this operation. It identifies the properties that the write operation will set as well as the properties that the API response will include.\n\nThe API currently only allows the parameter value to be set to either brandingSettings , invideoPromotion , or localizations . (You can only update any one of those parts with a single request.)\n\nNote that this method overrides the existing values for all of the mutable properties that are contained in the part that the parameter value specifies.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "Optional",
            "description": "parameters",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "onBehalfOfContentOwner",
            "description": "string\nThis parameter can only be used in a properly authorized request . The onBehalfOfContentOwner parameter indicates that the authenticated user is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The actual CMS account that the user authenticates with needs to be linked to the specified YouTube content owner.",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },
    "/subscriptions": {
      "DELETE": {
        "parameters": [
          {
            "in": "query",
            "name": "Required",
            "description": "parameters",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "id",
            "description": "string\nThe id parameter specifies the YouTube subscription ID for the resource that is being deleted. In a subscription resource, the id property specifies the YouTube subscription ID.",
            "type": "integer",
            "required": "required"
          }
        ]
      },
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "Required",
            "description": "parameters",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "part",
            "description": "string\nThe part parameter serves two purposes in this operation. It identifies the properties that the write operation will set as well as the properties that the API response will include.\n\nThe following list contains the part names that you can include in the parameter value and the quota cost for each part:\ncontentDetails : 2\nid : 0\nsnippet : 2\nsubscriberSnippet : 2\n",
            "type": "integer",
            "required": "required"
          }
        ]
      },
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "Required",
            "description": "parameters",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "part",
            "description": "string\nThe part parameter specifies a comma-separated list of one or more subscription resource properties that the API response will include.\n\nIf the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in a subscription resource, the snippet property contains other properties, such as a display title for the subscription. If you set part=snippet , the API response will also contain all of those nested properties.\n\nThe following list contains the part names that you can include in the parameter value and the quota cost for each part:\ncontentDetails : 2\nid : 0\nsnippet : 2\nsubscriberSnippet : 2\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "Filters",
            "description": "(specify exactly one of the following parameters)",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "channelId",
            "description": "string\nThe channelId parameter specifies a YouTube channel ID. The API will only return that channel's subscriptions.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "id",
            "description": "string\nThe id parameter specifies a comma-separated list of the YouTube subscription ID(s) for the resource(s) that are being retrieved. In a subscription resource, the id property specifies the YouTube subscription ID.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "mine",
            "description": "boolean\nThis parameter can only be used in a properly authorized request . Set this parameter's value to true to retrieve a feed of the authenticated user's subscriptions.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "myRecentSubscribers",
            "description": "boolean\nThis parameter can only be used in a properly authorized request . Set this parameter's value to true to retrieve a feed of the subscribers of the authenticated user in reverse chronological order (newest first).\n\nNote that this parameter only supports retrieval of the most recent 1000 subscribers to the authenticated user's channel. To retrieve a complete list of subscribers, use the mySubscribers parameter. That parameter, which does not return subscribers in a particular order, does not limit the number of subscribers that can be retrieved.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "mySubscribers",
            "description": "boolean\nThis parameter can only be used in a properly authorized request . Set this parameter's value to true to retrieve a feed of the subscribers of the authenticated user in no particular order.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "Optional",
            "description": "parameters",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "forChannelId",
            "description": "string\nThe forChannelId parameter specifies a comma-separated list of channel IDs. The API response will then only contain subscriptions matching those channels.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "maxResults",
            "description": "unsigned integer\nThe maxResults parameter specifies the maximum number of items that should be returned in the result set. Acceptable values are 0 to 50 , inclusive. The default value is 5 .",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "onBehalfOfContentOwner",
            "description": "string\nNote: This parameter is intended exclusively for YouTube content partners.\n\nThe onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "onBehalfOfContentOwnerChannel",
            "description": "string\nThis parameter can only be used in a properly authorized request . Note: This parameter is intended exclusively for YouTube content partners.\n\nThe onBehalfOfContentOwnerChannel parameter specifies the YouTube channel ID of the channel to which a video is being added. This parameter is required when a request specifies a value for the onBehalfOfContentOwner parameter, and it can only be used in conjunction with that parameter. In addition, the request must be authorized using a CMS account that is linked to the content owner that the onBehalfOfContentOwner parameter specifies. Finally, the channel that the onBehalfOfContentOwnerChannel parameter value specifies must be linked to the content owner that the onBehalfOfContentOwner parameter specifies.\n\nThis parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and perform actions on behalf of the channel specified in the parameter value, without having to provide authentication credentials for each separate channel.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "order",
            "description": "string\nThe order parameter specifies the method that will be used to sort resources in the API response. The default value is SUBSCRIPTION_ORDER_RELEVANCE .\n\nAcceptable values are: alphabetical – Sort alphabetically.\nrelevance – Sort by relevance.\nunread – Sort by order of activity.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "pageToken",
            "description": "string\nThe pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken and prevPageToken properties identify other pages that could be retrieved.",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },
    "/videos": {
      "DELETE": {
        "parameters": [
          {
            "in": "query",
            "name": "Required",
            "description": "parameters",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "id",
            "description": "string\nThe id parameter specifies the YouTube video ID for the resource that is being deleted. In a video resource, the id property specifies the video's ID.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "Optional",
            "description": "parameters",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "onBehalfOfContentOwner",
            "description": "string\nThis parameter can only be used in a properly authorized request . Note: This parameter is intended exclusively for YouTube content partners.\n\nThe onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The actual CMS account that the user authenticates with must be linked to the specified YouTube content owner.",
            "type": "integer",
            "required": "required"
          }
        ]
      },
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "Required",
            "description": "parameters",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "part",
            "description": "string\nThe part parameter specifies a comma-separated list of one or more video resource properties that the API response will include.\n\nIf the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in a video resource, the snippet property contains the channelId , title , description , tags , and categoryId properties. As such, if you set part=snippet , the API response will contain all of those properties.\n\nThe following list contains the part names that you can include in the parameter value and the quota cost for each part:\ncontentDetails : 2\nfileDetails : 1\nid : 0\nliveStreamingDetails : 2\nlocalizations : 2\nplayer : 0\nprocessingDetails : 1\nrecordingDetails : 2\nsnippet : 2\nstatistics : 2\nstatus : 2\nsuggestions : 1\ntopicDetails : 2\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "Filters",
            "description": "(specify exactly one of the following parameters)",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "chart",
            "description": "string\nThe chart parameter identifies the chart that you want to retrieve.\n\nAcceptable values are: mostPopular – Return the most popular videos for the specified content region and video category .\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "id",
            "description": "string\nThe id parameter specifies a comma-separated list of the YouTube video ID(s) for the resource(s) that are being retrieved. In a video resource, the id property specifies the video's ID.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "myRating",
            "description": "string\nThis parameter can only be used in a properly authorized request . Set this parameter's value to like or dislike to instruct the API to only return videos liked or disliked by the authenticated user.\n\nAcceptable values are: dislike – Returns only videos disliked by the authenticated user.\nlike – Returns only video liked by the authenticated user.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "Optional",
            "description": "parameters",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "hl",
            "description": "string\nThe hl parameter instructs the API to retrieve localized resource metadata for a specific application language that the YouTube website supports . The parameter value must be a language code included in the list returned by the i18nLanguages.list method.\n\nIf localized resource details are available in that language, the resource's snippet.localized object will contain the localized values. However, if localized details are not available, the snippet.localized object will contain resource details in the resource's default language .",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "maxHeight",
            "description": "unsigned integer\nThe maxHeight parameter specifies the maximum height of the embedded player returned in the player.embedHtml property. You can use this parameter to specify that instead of the default dimensions, the embed code should use a height appropriate for your application layout. If the maxWidth parameter is also provided, the player may be shorter than the maxHeight in order to not violate the maximum width. Acceptable values are 72 to 8192 , inclusive.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "maxResults",
            "description": "unsigned integer\nThe maxResults parameter specifies the maximum number of items that should be returned in the result set.\n\nNote: This parameter is supported for use in conjunction with the myRating parameter, but it is not supported for use in conjunction with the id parameter. Acceptable values are 1 to 50 , inclusive. The default value is 5 .",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "maxWidth",
            "description": "unsigned integer\nThe maxWidth parameter specifies the maximum width of the embedded player returned in the player.embedHtml property. You can use this parameter to specify that instead of the default dimensions, the embed code should use a width appropriate for your application layout.\n\nIf the maxHeight parameter is also provided, the player may be narrower than maxWidth in order to not violate the maximum height. Acceptable values are 72 to 8192 , inclusive.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "onBehalfOfContentOwner",
            "description": "string\nThis parameter can only be used in a properly authorized request . Note: This parameter is intended exclusively for YouTube content partners.\n\nThe onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "pageToken",
            "description": "string\nThe pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken and prevPageToken properties identify other pages that could be retrieved.\n\nNote: This parameter is supported for use in conjunction with the myRating parameter, but it is not supported for use in conjunction with the id parameter.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "regionCode",
            "description": "string\nThe regionCode parameter instructs the API to select a video chart available in the specified region. This parameter can only be used in conjunction with the chart parameter. The parameter value is an ISO 3166-1 alpha-2 country code.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "videoCategoryId",
            "description": "string\nThe videoCategoryId parameter identifies the video category for which the chart should be retrieved. This parameter can only be used in conjunction with the chart parameter. By default, charts are not restricted to a particular category. The default value is 0 .",
            "type": "integer",
            "required": "required"
          }
        ]
      },
      "PUT": {
        "parameters": [
          {
            "in": "query",
            "name": "Required",
            "description": "parameters",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "part",
            "description": "string\nThe part parameter serves two purposes in this operation. It identifies the properties that the write operation will set as well as the properties that the API response will include.\n\nNote that this method will override the existing values for all of the mutable properties that are contained in any parts that the parameter value specifies. For example, a video's privacy setting is contained in the status part. As such, if your request is updating a private video, and the request's part parameter value includes the status part, the video's privacy setting will be updated to whatever value the request body specifies. If the request body does not specify a value, the existing privacy setting will be removed and the video will revert to the default privacy setting.\n\nIn addition, not all parts contain properties that can be set when inserting or updating a video. For example, the statistics object encapsulates statistics that YouTube calculates for a video and does not contain values that you can set or modify. If the parameter value specifies a part that does not contain mutable values, that part will still be included in the API response.\n\nThe following list contains the part names that you can include in the parameter value and the quota cost for each part:\ncontentDetails : 2\nfileDetails : 1\nid : 0\nliveStreamingDetails : 2\nlocalizations : 2\nplayer : 0\nprocessingDetails : 1\nrecordingDetails : 2\nsnippet : 2\nstatistics : 2\nstatus : 2\nsuggestions : 1\ntopicDetails : 2\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "Optional",
            "description": "parameters",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "onBehalfOfContentOwner",
            "description": "string\nThis parameter can only be used in a properly authorized request . Note: This parameter is intended exclusively for YouTube content partners.\n\nThe onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The actual CMS account that the user authenticates with must be linked to the specified YouTube content owner.",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },
    "https://www.googleapis.com/upload/youtube/v3/captions": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "Required",
            "description": "parameters",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "part",
            "description": "string\nThe part parameter specifies the caption resource parts that the API response will include. Set the parameter value to snippet .\n\nThe following list contains the part names that you can include in the parameter value and the quota cost for each part:\nid : 0\nsnippet : 1\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "Optional",
            "description": "parameters",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "onBehalfOfContentOwner",
            "description": "string\nThis parameter can only be used in a properly authorized request . Note: This parameter is intended exclusively for YouTube content partners.\n\nThe onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The actual CMS account that the user authenticates with must be linked to the specified YouTube content owner.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "sync",
            "description": "boolean\nThe sync parameter indicates whether YouTube should automatically synchronize the caption file with the audio track of the video. If you set the value to true , YouTube will disregard any time codes that are in the uploaded caption file and generate new time codes for the captions.\n\nYou should set the sync parameter to true if you are uploading a transcript, which has no time codes, or if you suspect the time codes in your file are incorrect and want YouTube to try to fix them.",
            "type": "integer",
            "required": "required"
          }
        ]
      },
      "PUT": {
        "parameters": [
          {
            "in": "query",
            "name": "Required",
            "description": "parameters",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "part",
            "description": "string\nThe part parameter serves two purposes in this operation. It identifies the properties that the write operation will set as well as the properties that the API response will include. Set the property value to snippet if you are updating the track's draft status . Otherwise, set the property value to id .\n\nThe following list contains the part names that you can include in the parameter value and the quota cost for each part:\nid : 0\nsnippet : 1\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "Optional",
            "description": "parameters",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "onBehalfOfContentOwner",
            "description": "string\nThis parameter can only be used in a properly authorized request . Note: This parameter is intended exclusively for YouTube content partners.\n\nThe onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The actual CMS account that the user authenticates with must be linked to the specified YouTube content owner.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "sync",
            "description": "boolean\nNote: The API server only processes the parameter value if the request contains an updated caption file.\n\nThe sync parameter indicates whether YouTube should automatically synchronize the caption file with the audio track of the video. If you set the value to true , YouTube will automatically synchronize the caption track with the audio track.",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },
    "/playlistItems": {
      "DELETE": {
        "parameters": [
          {
            "in": "query",
            "name": "Required",
            "description": "parameters",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "id",
            "description": "string\nThe id parameter specifies the YouTube playlist item ID for the playlist item that is being deleted. In a playlistItem resource, the id property specifies the playlist item's ID.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "Optional",
            "description": "parameters",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "onBehalfOfContentOwner",
            "description": "string\nNote: The onBehalfOfContentOwner parameter is intended exclusively for YouTube content partners and can only be used in a properly authorized request .\n\nThis parameter is designed for YouTube content partners that own and manage many different YouTube channels. It enables users affiliated with the content owner to authenticate once and then be able to access and manage all of the content owner's video and channel data, without having to provide authentication credentials for each individual channel.\n\nWhen the parameter is present, its value identifies a content owner, and the request's authorization credentials identify a YouTube user who is authorized to act on behalf of that content owner. The account that the user authenticates with must be linked to the specified content owner in the YouTube Creator Studio settings.",
            "type": "integer",
            "required": "required"
          }
        ]
      },
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "Required",
            "description": "parameters",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "part",
            "description": "string\nThe part parameter serves two purposes in this operation. It identifies the properties that the write operation will set as well as the properties that the API response will include.\n\nThe following list contains the part names that you can include in the parameter value and the quota cost for each part:\ncontentDetails : 2\nid : 0\nsnippet : 2\nstatus : 2\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "Optional",
            "description": "parameters",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "onBehalfOfContentOwner",
            "description": "string\nThis parameter can only be used in a properly authorized request . Note: This parameter is intended exclusively for YouTube content partners.\n\nThe onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.",
            "type": "integer",
            "required": "required"
          }
        ]
      },
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "Required",
            "description": "parameters",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "part",
            "description": "string\nThe part parameter specifies a comma-separated list of one or more playlistItem resource properties that the API response will include.\n\nIf the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in a playlistItem resource, the snippet property contains numerous fields, including the title , description , position , and resourceId properties. As such, if you set part=snippet , the API response will contain all of those properties.\n\nThe following list contains the part names that you can include in the parameter value and the quota cost for each part:\ncontentDetails : 2\nid : 0\nsnippet : 2\nstatus : 2\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "Filters",
            "description": "(specify exactly one of the following parameters)",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "id",
            "description": "string\nThe id parameter specifies a comma-separated list of one or more unique playlist item IDs.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "playlistId",
            "description": "string\nThe playlistId parameter specifies the unique ID of the playlist for which you want to retrieve playlist items. Note that even though this is an optional parameter, every request to retrieve playlist items must specify a value for either the id parameter or the playlistId parameter.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "Optional",
            "description": "parameters",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "maxResults",
            "description": "unsigned integer\nThe maxResults parameter specifies the maximum number of items that should be returned in the result set. Acceptable values are 0 to 50 , inclusive. The default value is 5 .",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "onBehalfOfContentOwner",
            "description": "string\nThis parameter can only be used in a properly authorized request . Note: This parameter is intended exclusively for YouTube content partners.\n\nThe onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "pageToken",
            "description": "string\nThe pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken and prevPageToken properties identify other pages that could be retrieved.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "videoId",
            "description": "string\nThe videoId parameter specifies that the request should return only the playlist items that contain the specified video.",
            "type": "integer",
            "required": "required"
          }
        ]
      },
      "PUT": {
        "parameters": [
          {
            "in": "query",
            "name": "Required",
            "description": "parameters",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "part",
            "description": "string\nThe part parameter serves two purposes in this operation. It identifies the properties that the write operation will set as well as the properties that the API response will include.\n\nNote that this method will override the existing values for all of the mutable properties that are contained in any parts that the parameter value specifies. For example, a playlist item can specify a start time and end time, which identify the times portion of the video that should play when users watch the video in the playlist. If your request is updating a playlist item that sets these values, and the request's part parameter value includes the contentDetails part, the playlist item's start and end times will be updated to whatever value the request body specifies. If the request body does not specify values, the existing start and end times will be removed and replaced with the default settings.\n\nThe following list contains the part names that you can include in the parameter value and the quota cost for each part:\ncontentDetails : 2\nid : 0\nsnippet : 2\nstatus : 2\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "Optional",
            "description": "parameters",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "onBehalfOfContentOwner",
            "description": "string\nNote: The onBehalfOfContentOwner parameter is intended exclusively for YouTube content partners and can only be used in a properly authorized request .\n\nThis parameter is designed for YouTube content partners that own and manage many different YouTube channels. It enables users affiliated with the content owner to authenticate once and then be able to access and manage all of the content owner's video and channel data, without having to provide authentication credentials for each individual channel.\n\nWhen the parameter is present, its value identifies a content owner, and the request's authorization credentials identify a YouTube user who is authorized to act on behalf of that content owner. The account that the user authenticates with must be linked to the specified content owner in the YouTube Creator Studio settings.",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },
    "/playlists": {
      "DELETE": {
        "parameters": [
          {
            "in": "query",
            "name": "Required",
            "description": "parameters",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "id",
            "description": "string\nThe id parameter specifies the YouTube playlist ID for the playlist that is being deleted. In a playlist resource, the id property specifies the playlist's ID.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "Optional",
            "description": "parameters",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "onBehalfOfContentOwner",
            "description": "string\nThis parameter can only be used in a properly authorized request . Note: This parameter is intended exclusively for YouTube content partners.\n\nThe onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.",
            "type": "integer",
            "required": "required"
          }
        ]
      },
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "Required",
            "description": "parameters",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "part",
            "description": "string\nThe part parameter serves two purposes in this operation. It identifies the properties that the write operation will set as well as the properties that the API response will include.\n\nThe following list contains the part names that you can include in the parameter value and the quota cost for each part:\ncontentDetails : 2\nid : 0\nlocalizations : 2\nplayer : 0\nsnippet : 2\nstatus : 2\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "Optional",
            "description": "parameters",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "onBehalfOfContentOwner",
            "description": "string\nThis parameter can only be used in a properly authorized request . Note: This parameter is intended exclusively for YouTube content partners.\n\nThe onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "onBehalfOfContentOwnerChannel",
            "description": "string\nThis parameter can only be used in a properly authorized request . This parameter can only be used in a properly authorized request . Note: This parameter is intended exclusively for YouTube content partners.\n\nThe onBehalfOfContentOwnerChannel parameter specifies the YouTube channel ID of the channel to which a video is being added. This parameter is required when a request specifies a value for the onBehalfOfContentOwner parameter, and it can only be used in conjunction with that parameter. In addition, the request must be authorized using a CMS account that is linked to the content owner that the onBehalfOfContentOwner parameter specifies. Finally, the channel that the onBehalfOfContentOwnerChannel parameter value specifies must be linked to the content owner that the onBehalfOfContentOwner parameter specifies.\n\nThis parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and perform actions on behalf of the channel specified in the parameter value, without having to provide authentication credentials for each separate channel.",
            "type": "integer",
            "required": "required"
          }
        ]
      },
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "Required",
            "description": "parameters",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "part",
            "description": "string\nThe part parameter specifies a comma-separated list of one or more playlist resource properties that the API response will include.\n\nIf the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in a playlist resource, the snippet property contains properties like author , title , description , tags , and timeCreated . As such, if you set part=snippet , the API response will contain all of those properties.\n\nThe following list contains the part names that you can include in the parameter value and the quota cost for each part:\ncontentDetails : 2\nid : 0\nlocalizations : 2\nplayer : 0\nsnippet : 2\nstatus : 2\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "Filters",
            "description": "(specify exactly one of the following parameters)",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "channelId",
            "description": "string\nThis value indicates that the API should only return the specified channel's playlists.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "id",
            "description": "string\nThe id parameter specifies a comma-separated list of the YouTube playlist ID(s) for the resource(s) that are being retrieved. In a playlist resource, the id property specifies the playlist's YouTube playlist ID.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "mine",
            "description": "boolean\nThis parameter can only be used in a properly authorized request . Set this parameter's value to true to instruct the API to only return playlists owned by the authenticated user.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "Optional",
            "description": "parameters",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "hl",
            "description": "string\nThe hl parameter instructs the API to retrieve localized resource metadata for a specific application language that the YouTube website supports . The parameter value must be a language code included in the list returned by the i18nLanguages.list method.\n\nIf localized resource details are available in that language, the resource's snippet.localized object will contain the localized values. However, if localized details are not available, the snippet.localized object will contain resource details in the resource's default language .",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "maxResults",
            "description": "unsigned integer\nThe maxResults parameter specifies the maximum number of items that should be returned in the result set. Acceptable values are 0 to 50 , inclusive. The default value is 5 .",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "onBehalfOfContentOwner",
            "description": "string\nThis parameter can only be used in a properly authorized request . Note: This parameter is intended exclusively for YouTube content partners.\n\nThe onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "onBehalfOfContentOwnerChannel",
            "description": "string\nThis parameter can only be used in a properly authorized request . Note: This parameter is intended exclusively for YouTube content partners.\n\nThe onBehalfOfContentOwnerChannel parameter specifies the YouTube channel ID of the channel to which a video is being added. This parameter is required when a request specifies a value for the onBehalfOfContentOwner parameter, and it can only be used in conjunction with that parameter. In addition, the request must be authorized using a CMS account that is linked to the content owner that the onBehalfOfContentOwner parameter specifies. Finally, the channel that the onBehalfOfContentOwnerChannel parameter value specifies must be linked to the content owner that the onBehalfOfContentOwner parameter specifies.\n\nThis parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and perform actions on behalf of the channel specified in the parameter value, without having to provide authentication credentials for each separate channel.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "pageToken",
            "description": "string\nThe pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken and prevPageToken properties identify other pages that could be retrieved.",
            "type": "integer",
            "required": "required"
          }
        ]
      },
      "PUT": {
        "parameters": [
          {
            "in": "query",
            "name": "Required",
            "description": "parameters",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "part",
            "description": "string\nThe part parameter serves two purposes in this operation. It identifies the properties that the write operation will set as well as the properties that the API response will include.\n\nNote that this method will override the existing values for mutable properties that are contained in any parts that the request body specifies. For example, a playlist's description is contained in the snippet part, which must be included in the request body. If the request does not specify a value for the snippet.description property, the playlist's existing description will be deleted.\n\nThe following list contains the part names that you can include in the parameter value and the quota cost for each part:\ncontentDetails : 2\nid : 0\nlocalizations : 2\nplayer : 0\nsnippet : 2\nstatus : 2\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "Optional",
            "description": "parameters",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "onBehalfOfContentOwner",
            "description": "string\nThis parameter can only be used in a properly authorized request . Note: This parameter is intended exclusively for YouTube content partners.\n\nThe onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },
    "https://www.googleapis.com/upload/youtube/v3/videos": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "Required",
            "description": "parameters",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "part",
            "description": "string\nThe part parameter serves two purposes in this operation. It identifies the properties that the write operation will set as well as the properties that the API response will include.\n\nNote that not all parts contain properties that can be set when inserting or updating a video. For example, the statistics object encapsulates statistics that YouTube calculates for a video and does not contain values that you can set or modify. If the parameter value specifies a part that does not contain mutable values, that part will still be included in the API response.\n\nThe following list contains the part names that you can include in the parameter value and the quota cost for each part:\ncontentDetails : 2\nfileDetails : 1\nid : 0\nliveStreamingDetails : 2\nlocalizations : 2\nplayer : 0\nprocessingDetails : 1\nrecordingDetails : 2\nsnippet : 2\nstatistics : 2\nstatus : 2\nsuggestions : 1\ntopicDetails : 2\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "Optional",
            "description": "parameters",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "autoLevels",
            "description": "boolean\nThe autoLevels parameter indicates whether YouTube should automatically enhance the video's lighting and color.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "notifySubscribers",
            "description": "boolean\nThe notifySubscribers parameter indicates whether YouTube should send a notification about the new video to users who subscribe to the video's channel. A parameter value of True indicates that subscribers will be notified of newly uploaded videos. However, a channel owner who is uploading many videos might prefer to set the value to False to avoid sending a notification about each new video to the channel's subscribers. The default value is True .",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "onBehalfOfContentOwner",
            "description": "string\nThis parameter can only be used in a properly authorized request . Note: This parameter is intended exclusively for YouTube content partners.\n\nThe onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "onBehalfOfContentOwnerChannel",
            "description": "string\nThis parameter can only be used in a properly authorized request . This parameter can only be used in a properly authorized request . Note: This parameter is intended exclusively for YouTube content partners.\n\nThe onBehalfOfContentOwnerChannel parameter specifies the YouTube channel ID of the channel to which a video is being added. This parameter is required when a request specifies a value for the onBehalfOfContentOwner parameter, and it can only be used in conjunction with that parameter. In addition, the request must be authorized using a CMS account that is linked to the content owner that the onBehalfOfContentOwner parameter specifies. Finally, the channel that the onBehalfOfContentOwnerChannel parameter value specifies must be linked to the content owner that the onBehalfOfContentOwner parameter specifies.\n\nThis parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and perform actions on behalf of the channel specified in the parameter value, without having to provide authentication credentials for each separate channel.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "stabilize",
            "description": "boolean\nThe stabilize parameter indicates whether YouTube should adjust the video to remove shaky camera motions.",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },
    "/i18nRegions": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "Required",
            "description": "parameters",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "part",
            "description": "string\nThe part parameter specifies the i18nRegion resource properties that the API response will include. Set the parameter value to snippet . The snippet part has a quota cost of 1 unit.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "Optional",
            "description": "parameters",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "hl",
            "description": "string\nThe hl parameter specifies the language that should be used for text values in the API response. The default value is en_US .",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },
    "https://www.googleapis.com/upload/youtube/v3/channelBanners/insert": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "Optional",
            "description": "parameters",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "onBehalfOfContentOwner",
            "description": "string\nThis parameter can only be used in a properly authorized request . Note: This parameter is intended exclusively for YouTube content partners.\n\nThe onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },
    "/comments/markAsSpam": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "Required",
            "description": "parameters",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "id",
            "description": "string\nThe id parameter specifies a comma-separated list of IDs of comments that the caller believes should be classified as spam.",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },
    "https://www.youtube.com/verify": {
      "delete": {}
    },
    "/videos/getRating": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "Required",
            "description": "parameters",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "id",
            "description": "string\nThe id parameter specifies a comma-separated list of the YouTube video ID(s) for the resource(s) for which you are retrieving rating data. In a video resource, the id property specifies the video's ID.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "Optional",
            "description": "parameters",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "onBehalfOfContentOwner",
            "description": "string\nThis parameter can only be used in a properly authorized request . Note: This parameter is intended exclusively for YouTube content partners.\n\nThe onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },
    "/videoAbuseReportReasons": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "Required",
            "description": "parameters",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "part",
            "description": "string\nThe part parameter specifies the videoCategory resource parts that the API response will include. Supported values are id and snippet . The snippet part has a quota cost of 2 units.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "Optional",
            "description": "parameters",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "hl",
            "description": "string\nThe hl parameter specifies the language that should be used for text values in the API response. The default value is en_US .",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },
    "https://cloud.google.com/console": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "badRequest",
            "description": "(400) invalidChannelId The channelId parameter specified an invalid channel ID.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "badRequest",
            "description": "(400) invalidLocation The location and/or locationRadius parameter value was formatted incorrectly.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "badRequest",
            "description": "(400) invalidRelevanceLanguage The relevanceLanguage parameter value was formatted incorrectly.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "badRequest",
            "description": "(400) invalidSearchFilter The request contains an invalid combination of search filters and/or restrictions. Note that you must set the type parameter to video if you set a value for the eventType , videoCaption , videoCategoryId , videoDefinition , videoDimension , videoDuration , videoEmbeddable , videoLicense , videoSyndicated , or videoType parameters.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "badRequest",
            "description": "(400) invalidVideoId The relatedToVideo parameter specified an invalid video ID.",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },
    "/watermarks/unset": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "Required",
            "description": "parameters",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "channelId",
            "description": "string\nThe channelId parameter specifies the YouTube channel ID for which the watermark is being unset.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "Optional",
            "description": "parameters",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "onBehalfOfContentOwner",
            "description": "string\nNote: This parameter is intended exclusively for YouTube content partners.\n\nThe onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },
    "https://www.googleapis.com/upload/youtube/v3/thumbnails/set": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "Required",
            "description": "parameters",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "videoId",
            "description": "string\nThe videoId parameter specifies a YouTube video ID for which the custom video thumbnail is being provided.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "Optional",
            "description": "parameters",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "onBehalfOfContentOwner",
            "description": "string\nNote: This parameter is intended exclusively for YouTube content partners.\n\nThe onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The actual CMS account that the user authenticates with must be linked to the specified YouTube content owner.",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },
    "/captions": {
      "DELETE": {
        "parameters": [
          {
            "in": "query",
            "name": "Required",
            "description": "parameters",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "id",
            "description": "string\nThe id parameter identifies the caption track that is being deleted. The value is a caption track ID as identified by the id property in a caption resource.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "Optional",
            "description": "parameters",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "onBehalfOfContentOwner",
            "description": "string\nThis parameter can only be used in a properly authorized request . Note: This parameter is intended exclusively for YouTube content partners.\n\nThe onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The actual CMS account that the user authenticates with must be linked to the specified YouTube content owner.",
            "type": "integer",
            "required": "required"
          }
        ]
      },
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "Required",
            "description": "parameters",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "part",
            "description": "string\nThe part parameter specifies the caption resource parts that the API response will include.\n\nThe list below contains the part names that you can include in the parameter value and the quota cost for each part:\nid : 0\nsnippet : 1\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "videoId",
            "description": "string\nThe videoId parameter specifies the YouTube video ID of the video for which the API should return caption tracks.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "Optional",
            "description": "parameters",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "id",
            "description": "string\nThe id parameter specifies a comma-separated list of IDs that identify the caption resources that should be retrieved. Each ID must identify a caption track associated with the specified video.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "onBehalfOfContentOwner",
            "description": "string\nThis parameter can only be used in a properly authorized request . Note: This parameter is intended exclusively for YouTube content partners.\n\nThe onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The actual CMS account that the user authenticates with must be linked to the specified YouTube content owner.",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },
    "/search": {
      "GET": {}
    },
    "/videos/reportAbuse": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "Optional",
            "description": "parameters",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "onBehalfOfContentOwner",
            "description": "string\nThis parameter can only be used in a properly authorized request . Note: This parameter is intended exclusively for YouTube content partners.\n\nThe onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },
    "/channelSections": {
      "DELETE": {
        "parameters": [
          {
            "in": "query",
            "name": "Required",
            "description": "parameters",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "id",
            "description": "string\nThe id parameter specifies the ID that uniquely identifies the channel section that is being deleted. In a channelSection resource, the id property specifies the section's ID.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "Optional",
            "description": "parameters",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "onBehalfOfContentOwner",
            "description": "string\nThis parameter can only be used in a properly authorized request . Note: This parameter is intended exclusively for YouTube content partners.\n\nThe onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.",
            "type": "integer",
            "required": "required"
          }
        ]
      },
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "Required",
            "description": "parameters",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "part",
            "description": "string\nThe part parameter serves two purposes in this operation. It identifies the properties that the write operation will set as well as the properties that the API response will include.\n\nThe following list contains the part names that you can include in the parameter value and the quota cost for each part:\ncontentDetails : 2\nid : 0\nlocalizations : 2\nsnippet : 2\ntargeting : 2\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "Optional",
            "description": "parameters",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "onBehalfOfContentOwner",
            "description": "string\nThis parameter can only be used in a properly authorized request . Note: This parameter is intended exclusively for YouTube content partners.\n\nThe onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "onBehalfOfContentOwnerChannel",
            "description": "string\nThis parameter can only be used in a properly authorized request . Note: This parameter is intended exclusively for YouTube content partners.\n\nThe onBehalfOfContentOwnerChannel parameter specifies the YouTube channel ID of the channel to which a video is being added. This parameter is required when a request specifies a value for the onBehalfOfContentOwner parameter, and it can only be used in conjunction with that parameter. In addition, the request must be authorized using a CMS account that is linked to the content owner that the onBehalfOfContentOwner parameter specifies. Finally, the channel that the onBehalfOfContentOwnerChannel parameter value specifies must be linked to the content owner that the onBehalfOfContentOwner parameter specifies.\n\nThis parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and perform actions on behalf of the channel specified in the parameter value, without having to provide authentication credentials for each separate channel.",
            "type": "integer",
            "required": "required"
          }
        ]
      },
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "Required",
            "description": "parameters",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "part",
            "description": "string\nThe part parameter specifies a comma-separated list of one or more channelSection resource properties that the API response will include.\n\nIf the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in a channelSection resource, the snippet property contains other properties, such as a display title for the section. If you set part=snippet , the API response will also contain all of those nested properties.\n\nThe following list contains the part names that you can include in the parameter value and the quota cost for each part:\ncontentDetails : 2\nid : 0\nlocalizations : 2\nsnippet : 2\ntargeting : 2\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "Filters",
            "description": "(specify exactly one of the following parameters)",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "channelId",
            "description": "string\nThe channelId parameter specifies a YouTube channel ID. If a request specifies a value for this parameter, the API will only return the specified channel's sections.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "id",
            "description": "string\nThe id parameter specifies a comma-separated list of IDs that uniquely identify the channelSection resources that are being retrieved. In a channelSection resource, the id property specifies the section's ID.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "mine",
            "description": "boolean\nThis parameter can only be used in a properly authorized request . Set this parameter's value to true to retrieve a feed of the channel sections associated with the authenticated user's YouTube channel.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "Optional",
            "description": "parameters",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "hl",
            "description": "string\nThe hl parameter instructs the API to retrieve localized resource metadata for a specific application language that the YouTube website supports . The parameter value must be a language code included in the list returned by the i18nLanguages.list method.\n\nIf localized resource details are available in that language, the resource's snippet.localized object will contain the localized values. However, if localized details are not available, the snippet.localized object will contain resource details in the resource's default language .",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "onBehalfOfContentOwner",
            "description": "string\nThis parameter can only be used in a properly authorized request . Note: This parameter is intended exclusively for YouTube content partners.\n\nThe onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.",
            "type": "integer",
            "required": "required"
          }
        ]
      },
      "PUT": {
        "parameters": [
          {
            "in": "query",
            "name": "Required",
            "description": "parameters",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "part",
            "description": "string\nThe part parameter serves two purposes in this operation. It identifies the properties that the write operation will set as well as the properties that the API response will include.\n\nThe following list contains the part names that you can include in the parameter value and the quota cost for each part:\ncontentDetails : 2\nid : 0\nlocalizations : 2\nsnippet : 2\ntargeting : 2\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "Optional",
            "description": "parameters",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "onBehalfOfContentOwner",
            "description": "string\nThis parameter can only be used in a properly authorized request . Note: This parameter is intended exclusively for YouTube content partners.\n\nThe onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },
    "/i18nLanguages": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "Required",
            "description": "parameters",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "part",
            "description": "string\nThe part parameter specifies the i18nLanguage resource properties that the API response will include. Set the parameter value to snippet . The snippet part has a quota cost of 1 unit.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "Optional",
            "description": "parameters",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "hl",
            "description": "string\nThe hl parameter specifies the language that should be used for text values in the API response. The default value is en_US .",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },
    "http://photos.google.com": {
      "delete": {
        "parameters": [
          {
            "in": "query",
            "name": "forbidden",
            "description": "(403) forbidden One or more caption tracks could not be retrieved because the permissions associated with the request are not sufficient to retrieve the requested resources. The request might not be properly authorized.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "notFound",
            "description": "(404) captionNotFound One or more of the specified caption tracks could not be found. This error occurs if the videoId parameter identifies an actual video, but the id parameter either identifies caption track IDs that do not exist or track IDs that are associated with other videos. Check the values of the request's id and videoId parameters to ensure that they are correct.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "notFound",
            "description": "(404) videoNotFound The video identified by the videoId parameter could not be found.",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },
    "/comments/setModerationStatus": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "Required",
            "description": "parameters",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "id",
            "description": "string\nThe id parameter specifies a comma-separated list of IDs that identify the comments for which you are updating the moderation status.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "moderationStatus",
            "description": "string\nIdentifies the new moderation status of the specified comments.\n\nAcceptable values are: heldForReview – Marks a comment as awaiting review by a moderator.\npublished – Clears a comment for public display.\nrejected – Rejects a comment as being unfit for display. This action also effectively hides all replies to the rejected comment.\n\nNote: The API does not currently provide a way to list or otherwise discover rejected comments. However, you can change the moderation status of a rejected comment if you still know its ID. If you were to change the moderation status of a rejected comment, the comment replies would subsequently be discoverable again as well.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "Optional",
            "description": "parameters",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "banAuthor",
            "description": "boolean\nThe banAuthor parameter lets you indicate that you want to automatically reject any additional comments written by the comment's author. Set the parameter value to true to ban the author.\n\nNote: This parameter is only valid if the moderationStatus parameter is also set to rejected .",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },
    "/commentThreads": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "Required",
            "description": "parameters",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "part",
            "description": "string\nThe part parameter identifies the properties that the API response will include. Set the parameter value to snippet . The snippet part has a quota cost of 2 units.\n\nThe following list contains the part names that you can include in the parameter value and the quota cost for each part:\nid : 0\nreplies : 2\nsnippet : 2\n",
            "type": "integer",
            "required": "required"
          }
        ]
      },
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "Required",
            "description": "parameters",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "part",
            "description": "string\nThe part parameter specifies a comma-separated list of one or more commentThread resource properties that the API response will include.\n\nThe following list contains the part names that you can include in the parameter value and the quota cost for each part:\nid : 0\nreplies : 2\nsnippet : 2\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "Filters",
            "description": "(specify exactly one of the following parameters)",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "allThreadsRelatedToChannelId",
            "description": "string\nThe allThreadsRelatedToChannelId parameter instructs the API to return all comment threads associated with the specified channel. The response can include comments about the channel or about the channel's videos.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "channelId",
            "description": "string\nThe channelId parameter instructs the API to return comment threads containing comments about the specified channel. (The response will not include comments left on videos that the channel uploaded.)",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "id",
            "description": "string\nThe id parameter specifies a comma-separated list of comment thread IDs for the resources that should be retrieved.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "videoId",
            "description": "string\nThe videoId parameter instructs the API to return comment threads associated with the specified video ID.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "Optional",
            "description": "parameters",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "maxResults",
            "description": "unsigned integer\nThe maxResults parameter specifies the maximum number of items that should be returned in the result set.\n\nNote: This parameter is not supported for use in conjunction with the id parameter. Acceptable values are 1 to 100 , inclusive. The default value is 20 .",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "moderationStatus",
            "description": "string\nThis parameter can only be used in a properly authorized request . Set this parameter to limit the returned comment threads to a particular moderation state.\n\nNote: This parameter is not supported for use in conjunction with the id parameter. The default value is published .\n\nAcceptable values are: heldForReview – Retrieve comment threads that are awaiting review by a moderator. A comment thread can be included in the response if the top-level comment or at least one of the replies to that comment are awaiting review.\nlikelySpam – Retrieve comment threads classified as likely to be spam. A comment thread can be included in the response if the top-level comment or at least one of the replies to that comment is considered likely to be spam.\npublished – Retrieve threads of published comments. This is the default value. A comment thread can be included in the response if its top-level comment has been published.\n",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "order",
            "description": "string\nThe order parameter specifies the order in which the API response should list comment threads. Valid values are: time - Comment threads are ordered by time. This is the default behavior.\nrelevance - Comment threads are ordered by relevance.\nNote: This parameter is not supported for use in conjunction with the id parameter.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "pageToken",
            "description": "string\nThe pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken property identifies the next page of the result that can be retrieved.\n\nNote: This parameter is not supported for use in conjunction with the id parameter.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "searchTerms",
            "description": "string\nThe searchTerms parameter instructs the API to limit the API response to only contain comments that contain the specified search terms.\n\nNote: This parameter is not supported for use in conjunction with the id parameter.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "textFormat",
            "description": "string\nSet this parameter's value to html or plainText to instruct the API to return the comments left by users in html formatted or in plain text. The default value is html .\n\nAcceptable values are: html – Returns the comments in HTML format. This is the default value.\nplainText – Returns the comments in plain text format.\n",
            "type": "integer",
            "required": "required"
          }
        ]
      },
      "PUT": {
        "parameters": [
          {
            "in": "query",
            "name": "Required",
            "description": "parameters",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "part",
            "description": "string\nThe part parameter specifies a comma-separated list of commentThread resource properties that the API response will include. You must at least include the snippet part in the parameter value since that part contains all of the properties that the API request can update.\n\nThe following list contains the part names that you can include in the parameter value and the quota cost for each part:\nid : 0\nreplies : 2\nsnippet : 2\n",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },
    "/videos/rate": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "Required",
            "description": "parameters",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "id",
            "description": "string\nThe id parameter specifies the YouTube video ID of the video that is being rated or having its rating removed.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "rating",
            "description": "string\nSpecifies the rating to record.\n\nAcceptable values are: dislike – Records that the authenticated user disliked the video.\nlike – Records that the authenticated user liked the video.\nnone – Removes any rating that the authenticated user had previously set for the video.\n",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    },
    "https://www.googleapis.com/upload/youtube/v3/watermarks/set": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "Required",
            "description": "parameters",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "channelId",
            "description": "string\nThe channelId parameter specifies the YouTube channel ID for which the watermark is being provided.",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "Optional",
            "description": "parameters",
            "type": "integer",
            "required": "required"
          },
          {
            "in": "query",
            "name": "onBehalfOfContentOwner",
            "description": "string\nNote: This parameter is intended exclusively for YouTube content partners.\n\nThe onBehalfOfContentOwner parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.",
            "type": "integer",
            "required": "required"
          }
        ]
      }
    }
  },
  "produces": "application/json",
  "host": "www.googleapis.com",
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": "This is the information of the API"
}