{
  "basePath": "/licenses/by/2.0/ \" /> < license id =\" 5 \" name =\" Attribution-ShareAlike License \" url =\" http://creativecommons.org/licenses/by-sa/2.0/ \" /> < license id =\" 6 \" name =\" Attribution-NoDerivs License \" url =\" http://creativecommons.org/licenses/by-nd/2.0/ \" /> < license id =\" 7 \" name =\" No known copyright restrictions \" url =\" http://flickr.com/commons/usage/ \" /> < license id =\" 8 \" name =\" United States Government Work \" url =\" http://www.usa.gov/copyright.shtml \" /> < /licenses > Error Codes",
  "paths": {
    "?method=flickr.photos.getContactsPhotos": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "count",
            "description": "Number of photos to return. Defaults to 10, maximum 50. This is only used if single_photo is not passed.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "just_friends",
            "description": "set as 1 to only show photos from friends and family (excluding regular contacts).",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "single_photo",
            "description": "Only fetch one photo (the latest) per contact, instead of all photos in chronological order.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "include_self",
            "description": "Set to 1 to include photos from the calling user.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "extras",
            "description": "A comma-delimited list of extra information to fetch for each returned record. Currently supported fields include: license, date_upload, date_taken, owner_name, icon_server, original_format, last_update. For more information see extras under flickr.photos.search .",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.places.getInfoByUrl": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "url",
            "description": "A flickr.com/places URL in the form of /country/region/city. For example: /Canada/Quebec/Montreal",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.photos.suggestions.approveSuggestion": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "suggestion_id",
            "description": "The unique ID for the location suggestion to approve.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.tags.getListUser": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "user_id",
            "description": "The NSID of the user to fetch the tag list for. If this argument is not specified, the currently logged in user (if any) is assumed.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.galleries.editMeta": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "1:",
            "description": "One or more required parameters was missing from your request.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "2:",
            "description": "The title or description arguments could not be validated.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "95:",
            "description": "SSL is required to access the Flickr API.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "96:",
            "description": "The passed signature was invalid.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "97:",
            "description": "The call required signing but no signature was sent.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "98:",
            "description": "The login details or auth token passed were invalid.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "99:",
            "description": "The method requires user authentication but the user was not logged in, or the authenticated method call did not have the required permissions.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "100:",
            "description": "The API key passed was not valid or has expired.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "105:",
            "description": "The requested service is temporarily unavailable.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "106:",
            "description": "The requested operation failed due to a temporary issue.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "111:",
            "description": "The requested response format was not found.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "112:",
            "description": "The requested method was not found.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "114:",
            "description": "The SOAP envelope send in the request could not be parsed.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "115:",
            "description": "The XML-RPC request document could not be parsed.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "116:",
            "description": "One or more arguments contained a URL that has been used for abuse on Flickr.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.favorites.add": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "photo_id",
            "description": "The id of the photo to add to the user's favorites.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.photos.people.delete": {
      "DELETE": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "photo_id",
            "description": "The id of the photo to remove a person from.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "user_id",
            "description": "The NSID of the person to remove from the photo.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.photos.geo.getPerms": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "photo_id",
            "description": "The id of the photo to get permissions for.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.auth.getFrob": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.photos.geo.setPerms": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "is_public",
            "description": "1 to set viewing permissions for the photo's location data to public, 0 to set it to private.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "is_contact",
            "description": "1 to set viewing permissions for the photo's location data to contacts, 0 to set it to private.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "is_friend",
            "description": "1 to set viewing permissions for the photo's location data to friends, 0 to set it to private.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "is_family",
            "description": "1 to set viewing permissions for the photo's location data to family, 0 to set it to private.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "photo_id",
            "description": "The id of the photo to get permissions for.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.photos.removeTag": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "tag_id",
            "description": "The tag to remove from the photo. This parameter should contain a tag id, as returned by flickr.photos.getInfo .",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.photos.setContentType": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "photo_id",
            "description": "The id of the photo to set the adultness of.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "content_type",
            "description": "The content type of the photo. Must be one of: 1 for Photo, 2 for Screenshot, and 3 for Other.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.photosets.setPrimaryPhoto": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "photoset_id",
            "description": "The id of the photoset to set primary photo to.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "photo_id",
            "description": "The id of the photo to set as primary.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.photos.getContactsPublicPhotos": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "user_id",
            "description": "The NSID of the user to fetch photos for.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "count",
            "description": "Number of photos to return. Defaults to 10, maximum 50. This is only used if single_photo is not passed.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "just_friends",
            "description": "set as 1 to only show photos from friends and family (excluding regular contacts).",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "single_photo",
            "description": "Only fetch one photo (the latest) per contact, instead of all photos in chronological order.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "include_self",
            "description": "Set to 1 to include photos from the user specified by user_id.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "extras",
            "description": "A comma-delimited list of extra information to fetch for each returned record. Currently supported fields are: license, date_upload, date_taken, owner_name, icon_server, original_format, last_update.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.photos.getRecent": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "extras",
            "description": "A comma-delimited list of extra information to fetch for each returned record. Currently supported fields are: description , license , date_upload , date_taken , owner_name , icon_server , original_format , last_update , geo , tags , machine_tags , o_dims , views , media , path_alias , url_sq , url_t , url_s , url_q , url_m , url_n , url_z , url_c , url_l , url_o",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "per_page",
            "description": "Number of photos to return per page. If this argument is omitted, it defaults to 100. The maximum allowed value is 500.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return. If this argument is omitted, it defaults to 1.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.collections.getTree": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "collection_id",
            "description": "The ID of the collection to fetch a tree for, or zero to fetch the root collection. Defaults to zero.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "user_id",
            "description": "The ID of the account to fetch the collection tree for. Deafults to the calling user.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.photos.suggestions.removeSuggestion": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "suggestion_id",
            "description": "The unique ID for the location suggestion to approve.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.galleries.editPhoto": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "gallery_id",
            "description": "The ID of the gallery to add a photo to. Note: this is the compound ID returned in methods like flickr.galleries.getList, and flickr.galleries.getListForPhoto.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "photo_id",
            "description": "The photo ID to add to the gallery.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "comment",
            "description": "The updated comment the photo.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.photos.getCounts": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "dates",
            "description": "A comma delimited list of unix timestamps, denoting the periods to return counts for. They should be specified smallest first .",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "taken_dates",
            "description": "A comma delimited list of mysql datetimes, denoting the periods to return counts for. They should be specified smallest first .",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.places.resolvePlaceId": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "place_id",
            "description": "A Flickr Places ID",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.photosets.getPhotos": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "photoset_id",
            "description": "The id of the photoset to return the photos for.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "user_id",
            "description": "The user_id here is the owner of the set passed in photoset_id. This is optional, but passing this gives better performance.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "extras",
            "description": "A comma-delimited list of extra information to fetch for each returned record. Currently supported fields are: license, date_upload, date_taken, owner_name, icon_server, original_format, last_update, geo, tags, machine_tags, o_dims, views, media, path_alias, url_sq, url_t, url_s, url_m, url_o",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "per_page",
            "description": "Number of photos to return per page. If this argument is omitted, it defaults to 500. The maximum allowed value is 500.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return. If this argument is omitted, it defaults to 1.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "privacy_filter",
            "description": "Return photos only matching a certain privacy level. This only applies when making an authenticated call to view a photoset you own. Valid values are: 1 public photos\n2 private photos visible to friends\n3 private photos visible to family\n4 private photos visible to friends & family\n5 completely private photos\n",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "media",
            "description": "Filter results by media type. Possible values are all (default), photos or videos",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.places.placesForUser": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "place_type_id",
            "description": "The numeric ID for a specific place type to cluster photos by.\n\nValid place type IDs are : 22 : neighbourhood\n7 : locality\n8 : region\n12 : country\n29 : continent\n\nThe \"place_type\" argument has been deprecated in favor of the \"place_type_id\" argument. It won't go away but it will not be added to new methods. A complete list of place type IDs is available using the flickr.places.getPlaceTypes method. (While optional, you must pass either a valid place type or place type ID.)",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "place_type",
            "description": "A specific place type to cluster photos by.\n\nValid place types are : neighbourhood (and neighborhood)\nlocality\nregion\ncountry\ncontinent\n\n(While optional, you must pass either a valid place type or place type ID.)",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "woe_id",
            "description": "A Where on Earth identifier to use to filter photo clusters. For example all the photos clustered by locality in the United States (WOE ID 23424977 ).\n\n(While optional, you must pass either a valid Places ID or a WOE ID.)",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "place_id",
            "description": "A Flickr Places identifier to use to filter photo clusters. For example all the photos clustered by locality in the United States (Place ID 4KO02SibApitvSBieQ ).\n\n(While optional, you must pass either a valid Places ID or a WOE ID.)",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "threshold",
            "description": "The minimum number of photos that a place type must have to be included. If the number of photos is lowered then the parent place type for that place will be used.\n\nFor example if you only have 3 photos taken in the locality of Montreal (WOE ID 3534) but your threshold is set to 5 then those photos will be \"rolled up\" and included instead with a place record for the region of Quebec (WOE ID 2344924).",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "min_upload_date",
            "description": "Minimum upload date. Photos with an upload date greater than or equal to this value will be returned. The date should be in the form of a unix timestamp.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "max_upload_date",
            "description": "Maximum upload date. Photos with an upload date less than or equal to this value will be returned. The date should be in the form of a unix timestamp.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "min_taken_date",
            "description": "Minimum taken date. Photos with an taken date greater than or equal to this value will be returned. The date should be in the form of a mysql datetime.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "max_taken_date",
            "description": "Maximum taken date. Photos with an taken date less than or equal to this value will be returned. The date should be in the form of a mysql datetime.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.urls.lookupGallery": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "path",
            "name": "url",
            "description": "The gallery's URL.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.photos.setTags": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "photo_id",
            "description": "The id of the photo to set tags for.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "tags",
            "description": "All tags for the photo (as a single space-delimited string).",
            "type": "string",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.photos.setMeta": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "photo_id",
            "description": "The id of the photo to set information for.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "title",
            "description": "The title for the photo. At least one of title or description must be set.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "description",
            "description": "The description for the photo. At least one of title or description must be set.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.photos.geo.getLocation": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "photo_id",
            "description": "The id of the photo you want to retrieve location data for.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "extras",
            "description": "Extra flags.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.cameras.getBrandModels": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "brand",
            "description": "The ID of the requested brand (as returned from flickr.cameras.getBrands).",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.photosets.comments.addComment": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "photoset_id",
            "description": "The id of the photoset to add a comment to.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "comment_text",
            "description": "Text of the comment",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.tags.getRelated": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "path",
            "name": "tag",
            "description": "The tag to fetch related tags for.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.groups.discuss.topics.getInfo": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "group_id",
            "description": "NSID or group alias of the group to which the topic belongs. Making this parameter optional for legacy reasons, but it is highly recommended to pass this in to get better performance.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "topic_id",
            "description": "The ID for the topic to edit.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.groups.browse": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "cat_id",
            "description": "The category id to fetch a list of groups and sub-categories for. If not specified, it defaults to zero, the root of the category tree.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.contacts.getList": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "1:",
            "description": "The possible values are: name and time.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "95:",
            "description": "SSL is required to access the Flickr API.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "96:",
            "description": "The passed signature was invalid.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "97:",
            "description": "The call required signing but no signature was sent.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "98:",
            "description": "The login details or auth token passed were invalid.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "99:",
            "description": "The method requires user authentication but the user was not logged in, or the authenticated method call did not have the required permissions.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "100:",
            "description": "The API key passed was not valid or has expired.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "105:",
            "description": "The requested service is temporarily unavailable.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "106:",
            "description": "The requested operation failed due to a temporary issue.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "111:",
            "description": "The requested response format was not found.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "112:",
            "description": "The requested method was not found.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "114:",
            "description": "The SOAP envelope send in the request could not be parsed.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "115:",
            "description": "The XML-RPC request document could not be parsed.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "116:",
            "description": "One or more arguments contained a URL that has been used for abuse on Flickr.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.photos.notes.delete": {
      "DELETE": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "note_id",
            "description": "The id of the note to delete",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.places.resolvePlaceURL": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "url",
            "description": "A Flickr Places URL.\n\nFlickr Place URLs are of the form /country/region/city",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.photos.getSizes": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "photo_id",
            "description": "The id of the photo to fetch size information for.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.groups.pools.getContext": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "photo_id",
            "description": "The id of the photo to fetch the context for.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "group_id",
            "description": "The nsid of the group who's pool to fetch the photo's context for.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.photosets.comments.editComment": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "comment_id",
            "description": "The id of the comment to edit.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "comment_text",
            "description": "Update the comment to this text.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.activity.userComments": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "per_page",
            "description": "Number of items to return per page. If this argument is omitted, it defaults to 10. The maximum allowed value is 50.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return. If this argument is omitted, it defaults to 1.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.groups.discuss.topics.getList": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "group_id",
            "description": "The NSID or path alias of the group to fetch information for.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "per_page",
            "description": "Number of photos to return per page. If this argument is omitted, it defaults to 100. The maximum allowed value is 500.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return. If this argument is omitted, it defaults to 1.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.groups.leave": {
      "DELETE": {
        "parameters": [
          {
            "in": "query",
            "name": "1:",
            "description": "The group_id doesn't exist",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "2:",
            "description": "The group by that ID does not exist",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "3:",
            "description": "The user is not a member of the group that was specified",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "95:",
            "description": "SSL is required to access the Flickr API.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "96:",
            "description": "The passed signature was invalid.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "97:",
            "description": "The call required signing but no signature was sent.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "98:",
            "description": "The login details or auth token passed were invalid.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "99:",
            "description": "The method requires user authentication but the user was not logged in, or the authenticated method call did not have the required permissions.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "100:",
            "description": "The API key passed was not valid or has expired.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "105:",
            "description": "The requested service is temporarily unavailable.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "106:",
            "description": "The requested operation failed due to a temporary issue.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "111:",
            "description": "The requested response format was not found.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "112:",
            "description": "The requested method was not found.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "114:",
            "description": "The SOAP envelope send in the request could not be parsed.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "115:",
            "description": "The XML-RPC request document could not be parsed.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "116:",
            "description": "One or more arguments contained a URL that has been used for abuse on Flickr.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.tags.getHotList": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "period",
            "description": "The period for which to fetch hot tags. Valid values are day and week (defaults to day ).",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "count",
            "description": "The number of tags to return. Defaults to 20. Maximum allowed value is 200.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.groups.pools.add": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "photo_id",
            "description": "The id of the photo to add to the group pool. The photo must belong to the calling user.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "group_id",
            "description": "The NSID of the group who's pool the photo is to be added to.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.test.null": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.photos.transform.rotate": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "photo_id",
            "description": "The id of the photo to rotate.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "degrees",
            "description": "The amount of degrees by which to rotate the photo (clockwise) from it's current orientation. Valid values are 90, 180 and 270.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.profile.getProfile": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "user_id",
            "description": "The NSID of the user to fetch profile information for.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.people.getPhotosOf": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "user_id",
            "description": "The NSID of the user you want to find photos of. A value of \"me\" will search against photos of the calling user, for authenticated calls.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "owner_id",
            "description": "An NSID of a Flickr member. This will restrict the list of photos to those taken by that member.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "extras",
            "description": "A comma-delimited list of extra information to fetch for each returned record. Currently supported fields are: description , license , date_upload , date_taken , date_person_added , owner_name , icon_server , original_format , last_update , geo , tags , machine_tags , o_dims , views , media , path_alias , url_sq , url_t , url_s , url_q , url_m , url_n , url_z , url_c , url_l , url_o",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "per_page",
            "description": "Number of photos to return per page. If this argument is omitted, it defaults to 100. The maximum allowed value is 500.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return. If this argument is omitted, it defaults to 1.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.groups.members.getList": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "group_id",
            "description": "Return a list of members for this group. The group must be viewable by the Flickr member on whose behalf the API call is made.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "membertypes",
            "description": "Comma separated list of member types 2: member\n3: moderator\n4: admin\nBy default returns all types. (Returning super rare member type \"1: narwhal\" isn't supported by this API method)",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "per_page",
            "description": "Number of members to return per page. If this argument is omitted, it defaults to 100. The maximum allowed value is 500.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return. If this argument is omitted, it defaults to 1.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.test.login": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.photos.getWithGeoData": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "min_upload_date",
            "description": "Minimum upload date. Photos with an upload date greater than or equal to this value will be returned. The date should be in the form of a unix timestamp.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "max_upload_date",
            "description": "Maximum upload date. Photos with an upload date less than or equal to this value will be returned. The date should be in the form of a unix timestamp.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "min_taken_date",
            "description": "Minimum taken date. Photos with an taken date greater than or equal to this value will be returned. The date should be in the form of a mysql datetime.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "max_taken_date",
            "description": "Maximum taken date. Photos with an taken date less than or equal to this value will be returned. The date should be in the form of a mysql datetime.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "privacy_filter",
            "description": "Return photos only matching a certain privacy level. Valid values are: 1 public photos\n2 private photos visible to friends\n3 private photos visible to family\n4 private photos visible to friends & family\n5 completely private photos\n",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "sort",
            "description": "The order in which to sort returned photos. Deafults to date-posted-desc. The possible values are: date-posted-asc, date-posted-desc, date-taken-asc, date-taken-desc, interestingness-desc, and interestingness-asc.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "media",
            "description": "Filter results by media type. Possible values are all (default), photos or videos",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "extras",
            "description": "A comma-delimited list of extra information to fetch for each returned record. Currently supported fields are: description , license , date_upload , date_taken , owner_name , icon_server , original_format , last_update , geo , tags , machine_tags , o_dims , views , media , path_alias , url_sq , url_t , url_s , url_q , url_m , url_n , url_z , url_c , url_l , url_o",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "per_page",
            "description": "Number of photos to return per page. If this argument is omitted, it defaults to 100. The maximum allowed value is 500.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return. If this argument is omitted, it defaults to 1.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.auth.getFullToken": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "mini_token",
            "description": "The mini-token typed in by a user. It should be 9 digits long. It may optionally contain dashes.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.groups.join": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "1:",
            "description": "The group_id doesn't exist",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "2:",
            "description": "The Group does not exist",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "3:",
            "description": "The authed account does not have permission to view/join the group.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "4:",
            "description": "The authed account has previously joined this group",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "5:",
            "description": "Use flickr.groups.joinRequest to contact the administrations for an invitation.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "6:",
            "description": "The user must read and accept the rules before joining. Please see the accept_rules argument for this method.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "10:",
            "description": "The account is a member of the maximum number of groups.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "11:",
            "description": "This user is unable to join this group.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "95:",
            "description": "SSL is required to access the Flickr API.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "96:",
            "description": "The passed signature was invalid.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "97:",
            "description": "The call required signing but no signature was sent.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "98:",
            "description": "The login details or auth token passed were invalid.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "99:",
            "description": "The method requires user authentication but the user was not logged in, or the authenticated method call did not have the required permissions.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "100:",
            "description": "The API key passed was not valid or has expired.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "105:",
            "description": "The requested service is temporarily unavailable.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "106:",
            "description": "The requested operation failed due to a temporary issue.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "111:",
            "description": "The requested response format was not found.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "112:",
            "description": "The requested method was not found.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "114:",
            "description": "The SOAP envelope send in the request could not be parsed.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "115:",
            "description": "The XML-RPC request document could not be parsed.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "116:",
            "description": "One or more arguments contained a URL that has been used for abuse on Flickr.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.photos.geo.setLocation": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "photo_id",
            "description": "The id of the photo to set location data for.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "lat",
            "description": "The latitude whose valid range is -90 to 90. Anything more than 6 decimal places will be truncated.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "lon",
            "description": "The longitude whose valid range is -180 to 180. Anything more than 6 decimal places will be truncated.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "accuracy",
            "description": "Recorded accuracy level of the location information. World level is 1, Country is ~3, Region ~6, City ~11, Street ~16. Current range is 1-16. Defaults to 16 if not specified.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "context",
            "description": "Context is a numeric value representing the photo's geotagginess beyond latitude and longitude. For example, you may wish to indicate that a photo was taken \"indoors\" or \"outdoors\".\n\nThe current list of context IDs is :\n\n0 , not defined.\n1 , indoors.\n2 , outdoors.\n\nThe default context for geotagged photos is 0, or \"not defined\"",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.reflection.getMethods": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.stats.getPhotoReferrers": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "date",
            "description": "Stats will be returned for this date. This should be in either be in YYYY-MM-DD or unix timestamp format. A day according to Flickr Stats starts at midnight GMT for all users, and timestamps will automatically be rounded down to the start of the day.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "domain",
            "description": "The domain to return referrers for. This should be a hostname (eg: \"flickr.com\") with no protocol or pathname.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "photo_id",
            "description": "The id of the photo to get stats for. If not provided, stats for all photos will be returned.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "per_page",
            "description": "Number of referrers to return per page. If this argument is omitted, it defaults to 25. The maximum allowed value is 100.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return. If this argument is omitted, it defaults to 1.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.photos.getInfo": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "photo_id",
            "description": "The id of the photo to get information for.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "secret",
            "description": "The secret for the photo. If the correct secret is passed then permissions checking is skipped. This enables the 'sharing' of individual photos by passing around the id and secret.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.places.getChildrenWithPhotosPublic": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "place_id",
            "description": "A Flickr Places ID. (While optional, you must pass either a valid Places ID or a WOE ID.)",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "woe_id",
            "description": "A Where On Earth (WOE) ID. (While optional, you must pass either a valid Places ID or a WOE ID.)",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.photos.licenses.getInfo": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.commons.getInstitutions": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.stats.getCollectionDomains": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "date",
            "description": "Stats will be returned for this date. This should be in either be in YYYY-MM-DD or unix timestamp format. A day according to Flickr Stats starts at midnight GMT for all users, and timestamps will automatically be rounded down to the start of the day.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "collection_id",
            "description": "The id of the collection to get stats for. If not provided, stats for all collections will be returned.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "per_page",
            "description": "Number of domains to return per page. If this argument is omitted, it defaults to 25. The maximum allowed value is 100.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return. If this argument is omitted, it defaults to 1.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.photosets.removePhoto": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "photoset_id",
            "description": "The id of the photoset to remove a photo from.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "photo_id",
            "description": "The id of the photo to remove from the set.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.prefs.getContentType": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.photos.comments.editComment": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "comment_id",
            "description": "The id of the comment to edit.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "comment_text",
            "description": "Update the comment to this text.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.stats.getPhotosetStats": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "date",
            "description": "Stats will be returned for this date. This should be in either be in YYYY-MM-DD or unix timestamp format. A day according to Flickr Stats starts at midnight GMT for all users, and timestamps will automatically be rounded down to the start of the day.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "photoset_id",
            "description": "The id of the photoset to get stats for.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.groups.discuss.replies.delete": {
      "DELETE": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "group_id",
            "description": "Pass in the group id to where the topic belongs. Can be NSID or group alias. Making this parameter optional for legacy reasons, but it is highly recommended to pass this in to get faster performance.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "topic_id",
            "description": "The ID of the topic the post is in.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "reply_id",
            "description": "The ID of the reply to delete.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.photos.comments.getRecentForContacts": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "date_lastcomment",
            "description": "Limits the resultset to photos that have been commented on since this date. The date should be in the form of a Unix timestamp.\n\nThe default, and maximum, offset is (1) hour.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "contacts_filter",
            "description": "A comma-separated list of contact NSIDs to limit the scope of the query to.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "extras",
            "description": "A comma-delimited list of extra information to fetch for each returned record. Currently supported fields are: description , license , date_upload , date_taken , owner_name , icon_server , original_format , last_update , geo , tags , machine_tags , o_dims , views , media , path_alias , url_sq , url_t , url_s , url_q , url_m , url_n , url_z , url_c , url_l , url_o",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "per_page",
            "description": "Number of photos to return per page. If this argument is omitted, it defaults to 100. The maximum allowed value is 500.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return. If this argument is omitted, it defaults to 1.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.photos.geo.photosForLocation": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "1:",
            "description": "One or more required arguments was missing from the method call.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "2:",
            "description": "The latitude argument failed validation.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "3:",
            "description": "The longitude argument failed validation.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "4:",
            "description": "The accuracy argument failed validation.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "95:",
            "description": "SSL is required to access the Flickr API.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "96:",
            "description": "The passed signature was invalid.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "97:",
            "description": "The call required signing but no signature was sent.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "98:",
            "description": "The login details or auth token passed were invalid.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "99:",
            "description": "The method requires user authentication but the user was not logged in, or the authenticated method call did not have the required permissions.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "100:",
            "description": "The API key passed was not valid or has expired.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "105:",
            "description": "The requested service is temporarily unavailable.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "106:",
            "description": "The requested operation failed due to a temporary issue.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "111:",
            "description": "The requested response format was not found.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "112:",
            "description": "The requested method was not found.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "114:",
            "description": "The SOAP envelope send in the request could not be parsed.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "115:",
            "description": "The XML-RPC request document could not be parsed.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "116:",
            "description": "One or more arguments contained a URL that has been used for abuse on Flickr.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.interestingness.getList": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "date",
            "description": "A specific date, formatted as YYYY-MM-DD, to return interesting photos for.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "extras",
            "description": "A comma-delimited list of extra information to fetch for each returned record. Currently supported fields are: description , license , date_upload , date_taken , owner_name , icon_server , original_format , last_update , geo , tags , machine_tags , o_dims , views , media , path_alias , url_sq , url_t , url_s , url_q , url_m , url_n , url_z , url_c , url_l , url_o",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "per_page",
            "description": "Number of photos to return per page. If this argument is omitted, it defaults to 100. The maximum allowed value is 500.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return. If this argument is omitted, it defaults to 1.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.groups.discuss.replies.edit": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "group_id",
            "description": "Pass in the group id to where the topic belongs. Can be NSID or group alias. Making this parameter optional for legacy reasons, but it is highly recommended to pass this in to get faster performance.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "topic_id",
            "description": "The ID of the topic the post is in.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "reply_id",
            "description": "The ID of the reply post to edit.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "message",
            "description": "The message to edit the post with.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.groups.discuss.replies.add": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "group_id",
            "description": "Pass in the group id to where the topic belongs. Can be NSID or group alias. Making this parameter optional for legacy reasons, but it is highly recommended to pass this in to get faster performance.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "topic_id",
            "description": "The ID of the topic to post a comment to.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "message",
            "description": "The message to post to the topic.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.photos.notes.edit": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "note_id",
            "description": "The id of the note to edit",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "note_x",
            "description": "The left coordinate of the note",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "note_y",
            "description": "The top coordinate of the note",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "note_w",
            "description": "The width of the note",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "note_h",
            "description": "The height of the note",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "note_text",
            "description": "The description of the note",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.photos.geo.removeLocation": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "photo_id",
            "description": "The id of the photo you want to remove location data from.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.stats.getCollectionReferrers": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "date",
            "description": "Stats will be returned for this date. This should be in either be in YYYY-MM-DD or unix timestamp format. A day according to Flickr Stats starts at midnight GMT for all users, and timestamps will automatically be rounded down to the start of the day.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "domain",
            "description": "The domain to return referrers for. This should be a hostname (eg: \"flickr.com\") with no protocol or pathname.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "collection_id",
            "description": "The id of the collection to get stats for. If not provided, stats for all collections will be returned.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "per_page",
            "description": "Number of referrers to return per page. If this argument is omitted, it defaults to 25. The maximum allowed value is 100.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return. If this argument is omitted, it defaults to 1.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.panda.getList": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.auth.checkToken": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "auth_token",
            "description": "The authentication token to check.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.stats.getCollectionStats": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "date",
            "description": "Stats will be returned for this date. This should be in either be in YYYY-MM-DD or unix timestamp format. A day according to Flickr Stats starts at midnight GMT for all users, and timestamps will automatically be rounded down to the start of the day.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "collection_id",
            "description": "The id of the collection to get stats for.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.push.getTopics": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.photos.comments.addComment": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "photo_id",
            "description": "The id of the photo to add a comment to.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "comment_text",
            "description": "Text of the comment",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.tags.getMostFrequentlyUsed": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.places.getShapeHistory": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "place_id",
            "description": "A Flickr Places ID. (While optional, you must pass either a valid Places ID or a WOE ID.)",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "woe_id",
            "description": "A Where On Earth (WOE) ID. (While optional, you must pass either a valid Places ID or a WOE ID.)",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.people.getInfo": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "user_id",
            "description": "The NSID of the user to fetch information about.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.photos.geo.batchCorrectLocation": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "lat",
            "description": "The latitude of the photos to be update whose valid range is -90 to 90. Anything more than 6 decimal places will be truncated.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "lon",
            "description": "The longitude of the photos to be updated whose valid range is -180 to 180. Anything more than 6 decimal places will be truncated.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "accuracy",
            "description": "Recorded accuracy level of the photos to be updated. World level is 1, Country is ~3, Region ~6, City ~11, Street ~16. Current range is 1-16. Defaults to 16 if not specified.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "place_id",
            "description": "A Flickr Places ID. (While optional, you must pass either a valid Places ID or a WOE ID.)",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "woe_id",
            "description": "A Where On Earth (WOE) ID. (While optional, you must pass either a valid Places ID or a WOE ID.)",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.photosets.getContext": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "photo_id",
            "description": "The id of the photo to fetch the context for.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "photoset_id",
            "description": "The id of the photoset for which to fetch the photo's context.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.test.echo": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.machinetags.getValues": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "namespace",
            "description": "The namespace that all values should be restricted to.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "predicate",
            "description": "The predicate that all values should be restricted to.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "per_page",
            "description": "Number of photos to return per page. If this argument is omitted, it defaults to 100. The maximum allowed value is 500.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return. If this argument is omitted, it defaults to 1.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.photosets.reorderPhotos": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "photoset_id",
            "description": "The id of the photoset to reorder. The photoset must belong to the calling user.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "photo_ids",
            "description": "Ordered, comma-delimited list of photo ids. Photos that are not in the list will keep their original order",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.push.getSubscriptions": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.galleries.create": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "title",
            "description": "The name of the gallery",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "description",
            "description": "A short description for the gallery",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "primary_photo_id",
            "description": "The first photo to add to your gallery",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "full_result",
            "description": "Get the result in the same format as galleries.getList",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.favorites.getPublicList": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "user_id",
            "description": "The user to fetch the favorites list for.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "min_fave_date",
            "description": "Minimum date that a photo was favorited on. The date should be in the form of a unix timestamp.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "max_fave_date",
            "description": "Maximum date that a photo was favorited on. The date should be in the form of a unix timestamp.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "extras",
            "description": "A comma-delimited list of extra information to fetch for each returned record. Currently supported fields are: description , license , date_upload , date_taken , owner_name , icon_server , original_format , last_update , geo , tags , machine_tags , o_dims , views , media , path_alias , url_sq , url_t , url_s , url_q , url_m , url_n , url_z , url_c , url_l , url_o",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "per_page",
            "description": "Number of photos to return per page. If this argument is omitted, it defaults to 100. The maximum allowed value is 500.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return. If this argument is omitted, it defaults to 1.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.groups.joinRequest": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "1:",
            "description": "The group_id or message argument are missing.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "2:",
            "description": "The Group does not exist",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "3:",
            "description": "The authed account does not have permission to view/join the group.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "4:",
            "description": "The authed account has previously joined this group",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "5:",
            "description": "The group does not require an invitation to join, please use flickr.groups.join.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "6:",
            "description": "The user must read and accept the rules before joining. Please see the accept_rules argument for this method.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "7:",
            "description": "A request has already been sent and is pending approval.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "95:",
            "description": "SSL is required to access the Flickr API.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "96:",
            "description": "The passed signature was invalid.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "97:",
            "description": "The call required signing but no signature was sent.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "98:",
            "description": "The login details or auth token passed were invalid.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "99:",
            "description": "The method requires user authentication but the user was not logged in, or the authenticated method call did not have the required permissions.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "100:",
            "description": "The API key passed was not valid or has expired.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "105:",
            "description": "The requested service is temporarily unavailable.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "106:",
            "description": "The requested operation failed due to a temporary issue.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "111:",
            "description": "The requested response format was not found.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "112:",
            "description": "The requested method was not found.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "114:",
            "description": "The SOAP envelope send in the request could not be parsed.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "115:",
            "description": "The XML-RPC request document could not be parsed.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "116:",
            "description": "One or more arguments contained a URL that has been used for abuse on Flickr.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.photos.geo.setContext": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "photo_id",
            "description": "The id of the photo to set context data for.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "context",
            "description": "Context is a numeric value representing the photo's geotagginess beyond latitude and longitude. For example, you may wish to indicate that a photo was taken \"indoors\" or \"outdoors\".\n\nThe current list of context IDs is :\n\n0 , not defined.\n1 , indoors.\n2 , outdoors.\n",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.tags.getListUserRaw": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "path",
            "name": "tag",
            "description": "The tag you want to retrieve all raw versions for.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.photos.getNotInSet": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "max_upload_date",
            "description": "Maximum upload date. Photos with an upload date less than or equal to this value will be returned. The date can be in the form of a unix timestamp or mysql datetime.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "min_taken_date",
            "description": "Minimum taken date. Photos with an taken date greater than or equal to this value will be returned. The date can be in the form of a mysql datetime or unix timestamp.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "max_taken_date",
            "description": "Maximum taken date. Photos with an taken date less than or equal to this value will be returned. The date can be in the form of a mysql datetime or unix timestamp.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "privacy_filter",
            "description": "Return photos only matching a certain privacy level. Valid values are: 1 public photos\n2 private photos visible to friends\n3 private photos visible to family\n4 private photos visible to friends & family\n5 completely private photos\n",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "media",
            "description": "Filter results by media type. Possible values are all (default), photos or videos",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "min_upload_date",
            "description": "Minimum upload date. Photos with an upload date greater than or equal to this value will be returned. The date can be in the form of a unix timestamp or mysql datetime.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "extras",
            "description": "A comma-delimited list of extra information to fetch for each returned record. Currently supported fields are: description , license , date_upload , date_taken , owner_name , icon_server , original_format , last_update , geo , tags , machine_tags , o_dims , views , media , path_alias , url_sq , url_t , url_s , url_q , url_m , url_n , url_z , url_c , url_l , url_o",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "per_page",
            "description": "Number of photos to return per page. If this argument is omitted, it defaults to 100. The maximum allowed value is 500.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return. If this argument is omitted, it defaults to 1.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.photosets.create": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "1:",
            "description": "No title parameter was passed in the request.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "2:",
            "description": "The primary photo id passed was not a valid photo id or does not belong to the calling user.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "3:",
            "description": "The user has reached their maximum number of photosets limit.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "95:",
            "description": "SSL is required to access the Flickr API.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "96:",
            "description": "The passed signature was invalid.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "97:",
            "description": "The call required signing but no signature was sent.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "98:",
            "description": "The login details or auth token passed were invalid.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "99:",
            "description": "The method requires user authentication but the user was not logged in, or the authenticated method call did not have the required permissions.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "100:",
            "description": "The API key passed was not valid or has expired.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "105:",
            "description": "The requested service is temporarily unavailable.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "106:",
            "description": "The requested operation failed due to a temporary issue.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "111:",
            "description": "The requested response format was not found.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "112:",
            "description": "The requested method was not found.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "114:",
            "description": "The SOAP envelope send in the request could not be parsed.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "115:",
            "description": "The XML-RPC request document could not be parsed.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "116:",
            "description": "One or more arguments contained a URL that has been used for abuse on Flickr.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.activity.userPhotos": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "timeframe",
            "description": "The timeframe in which to return updates for. This can be specified in days ( '2d' ) or hours ( '4h' ). The default behavoir is to return changes since the beginning of the previous user session.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "per_page",
            "description": "Number of items to return per page. If this argument is omitted, it defaults to 10. The maximum allowed value is 50.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return. If this argument is omitted, it defaults to 1.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.photos.getExif": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "photo_id",
            "description": "The id of the photo to fetch information for.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "secret",
            "description": "The secret for the photo. If the correct secret is passed then permissions checking is skipped. This enables the 'sharing' of individual photos by passing around the id and secret.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.places.placesForTags": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "place_type_id",
            "description": "The numeric ID for a specific place type to cluster photos by.\n\nValid place type IDs are : 22 : neighbourhood\n7 : locality\n8 : region\n12 : country\n29 : continent\n",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "woe_id",
            "description": "A Where on Earth identifier to use to filter photo clusters. For example all the photos clustered by locality in the United States (WOE ID 23424977 ).\n\n(While optional, you must pass either a valid Places ID or a WOE ID.)",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "place_id",
            "description": "A Flickr Places identifier to use to filter photo clusters. For example all the photos clustered by locality in the United States (Place ID 4KO02SibApitvSBieQ ).\n\n(While optional, you must pass either a valid Places ID or a WOE ID.)",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "threshold",
            "description": "The minimum number of photos that a place type must have to be included. If the number of photos is lowered then the parent place type for that place will be used.\n\nFor example if you only have 3 photos taken in the locality of Montreal (WOE ID 3534) but your threshold is set to 5 then those photos will be \"rolled up\" and included instead with a place record for the region of Quebec (WOE ID 2344924).",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "tags",
            "description": "A comma-delimited list of tags. Photos with one or more of the tags listed will be returned.\n\n(While optional, you must pass either a valid tag or machine_tag",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "tag_mode",
            "description": "Either 'any' for an OR combination of tags, or 'all' for an AND combination. Defaults to 'any' if not specified.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "machine_tags",
            "description": "Aside from passing in a fully formed machine tag, there is a special syntax for searching on specific properties : Find photos using the 'dc' namespace : \"machine_tags\" => \"dc:\"\nFind photos with a title in the 'dc' namespace : \"machine_tags\" => \"dc:title=\"\nFind photos titled \"mr. camera\" in the 'dc' namespace : \"machine_tags\" => \"dc:title=\\\"mr. camera\\\"\nFind photos whose value is \"mr. camera\" : \"machine_tags\" => \"*:*=\\\"mr. camera\\\"\"\nFind photos that have a title, in any namespace : \"machine_tags\" => \"*:title=\"\nFind photos that have a title, in any namespace, whose value is \"mr. camera\" : \"machine_tags\" => \"*:title=\\\"mr. camera\\\"\"\nFind photos, in the 'dc' namespace whose value is \"mr. camera\" : \"machine_tags\" => \"dc:*=\\\"mr. camera\\\"\"\nMultiple machine tags may be queried by passing a comma-separated list. The number of machine tags you can pass in a single query depends on the tag mode (AND or OR) that you are querying with. \"AND\" queries are limited to (16) machine tags. \"OR\" queries are limited to (8).\n\n(While optional, you must pass either a valid tag or machine_tag)",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "machine_tag_mode",
            "description": "Either 'any' for an OR combination of tags, or 'all' for an AND combination. Defaults to 'any' if not specified.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "min_upload_date",
            "description": "Minimum upload date. Photos with an upload date greater than or equal to this value will be returned. The date should be in the form of a unix timestamp.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "max_upload_date",
            "description": "Maximum upload date. Photos with an upload date less than or equal to this value will be returned. The date should be in the form of a unix timestamp.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "min_taken_date",
            "description": "Minimum taken date. Photos with an taken date greater than or equal to this value will be returned. The date should be in the form of a mysql datetime.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "max_taken_date",
            "description": "Maximum taken date. Photos with an taken date less than or equal to this value will be returned. The date should be in the form of a mysql datetime.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.testimonials.getPendingTestimonialsBy": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "page",
            "description": "Page number. Default is 0",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "per_page",
            "description": "Number of testimonials to return per page. Default is 10, maximum is 50",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.photos.getAllContexts": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "photo_id",
            "description": "The photo to return information for.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.contacts.getPublicList": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "user_id",
            "description": "The NSID of the user to fetch the contact list for.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return. If this argument is omitted, it defaults to 1.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "per_page",
            "description": "Number of photos to return per page. If this argument is omitted, it defaults to 1000. The maximum allowed value is 1000.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.stats.getTotalViews": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "date",
            "description": "Stats will be returned for this date. This should be in either be in YYYY-MM-DD or unix timestamp format. A day according to Flickr Stats starts at midnight GMT for all users, and timestamps will automatically be rounded down to the start of the day. If no date is provided, all time view counts will be returned.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.photos.suggestions.rejectSuggestion": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "suggestion_id",
            "description": "The unique ID of the suggestion to reject.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.photos.delete": {
      "DELETE": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "photo_id",
            "description": "The id of the photo to delete.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.cameras.getBrands": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.groups.pools.remove": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "photo_id",
            "description": "The id of the photo to remove from the group pool. The photo must either be owned by the calling user of the calling user must be an administrator of the group.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "group_id",
            "description": "The NSID of the group who's pool the photo is to removed from.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.groups.pools.getPhotos": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "group_id",
            "description": "The id of the group who's pool you which to get the photo list for.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "tags",
            "description": "A tag to filter the pool with. At the moment only one tag at a time is supported.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "user_id",
            "description": "The nsid of a user. Specifiying this parameter will retrieve for you only those photos that the user has contributed to the group pool.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "extras",
            "description": "A comma-delimited list of extra information to fetch for each returned record. Currently supported fields are: description , license , date_upload , date_taken , owner_name , icon_server , original_format , last_update , geo , tags , machine_tags , o_dims , views , media , path_alias , url_sq , url_t , url_s , url_q , url_m , url_n , url_z , url_c , url_l , url_o",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "per_page",
            "description": "Number of photos to return per page. If this argument is omitted, it defaults to 100. The maximum allowed value is 500.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return. If this argument is omitted, it defaults to 1.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.photos.comments.getList": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "photo_id",
            "description": "The id of the photo to fetch comments for.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "min_comment_date",
            "description": "Minimum date that a a comment was added. The date should be in the form of a unix timestamp.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "max_comment_date",
            "description": "Maximum date that a comment was added. The date should be in the form of a unix timestamp.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.galleries.getPhotos": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "gallery_id",
            "description": "The ID of the gallery of photos to return",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "extras",
            "description": "A comma-delimited list of extra information to fetch for each returned record. Currently supported fields are: description , license , date_upload , date_taken , owner_name , icon_server , original_format , last_update , geo , tags , machine_tags , o_dims , views , media , path_alias , url_sq , url_t , url_s , url_q , url_m , url_n , url_z , url_c , url_l , url_o",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "per_page",
            "description": "Number of photos to return per page. If this argument is omitted, it defaults to 100. The maximum allowed value is 500.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return. If this argument is omitted, it defaults to 1.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.stats.getPhotoDomains": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "date",
            "description": "Stats will be returned for this date. This should be in either be in YYYY-MM-DD or unix timestamp format. A day according to Flickr Stats starts at midnight GMT for all users, and timestamps will automatically be rounded down to the start of the day.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "photo_id",
            "description": "The id of the photo to get stats for. If not provided, stats for all photos will be returned.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "per_page",
            "description": "Number of domains to return per page. If this argument is omitted, it defaults to 25. The maximum allowed value is 100.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return. If this argument is omitted, it defaults to 1.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.places.getInfo": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "place_id",
            "description": "A Flickr Places ID. (While optional, you must pass either a valid Places ID or a WOE ID.)",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "woe_id",
            "description": "A Where On Earth (WOE) ID. (While optional, you must pass either a valid Places ID or a WOE ID.)",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.groups.discuss.topics.add": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "group_id",
            "description": "The NSID or path alias of the group to add a topic to.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "subject",
            "description": "The topic subject.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "message",
            "description": "The topic message.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.tags.getClusters": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "path",
            "name": "tag",
            "description": "The tag to fetch clusters for.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.auth.oauth.checkToken": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "oauth_token",
            "description": "The OAuth authentication token to check.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.photos.getPerms": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "photo_id",
            "description": "The id of the photo to get permissions for.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.push.unsubscribe": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "1:",
            "description": "One of the required arguments for the method was not provided.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "2:",
            "description": "One of the arguments was specified with an illegal value.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "4:",
            "description": "The verification callback failed, or failed to return the expected response to confirm the un-subscription.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "6:",
            "description": "A subscription with those details exists already, but it is in a pending (non-verified) state. Please wait a bit for the verification callback to complete before attempting to update the subscription.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "7:",
            "description": "No subscription matching the provided details for this user could be found.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "95:",
            "description": "SSL is required to access the Flickr API.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "96:",
            "description": "The passed signature was invalid.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "97:",
            "description": "The call required signing but no signature was sent.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "98:",
            "description": "The login details or auth token passed were invalid.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "99:",
            "description": "The method requires user authentication but the user was not logged in, or the authenticated method call did not have the required permissions.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "100:",
            "description": "The API key passed was not valid or has expired.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "105:",
            "description": "The requested service is temporarily unavailable.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "106:",
            "description": "The requested operation failed due to a temporary issue.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "111:",
            "description": "The requested response format was not found.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "112:",
            "description": "The requested method was not found.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "114:",
            "description": "The SOAP envelope send in the request could not be parsed.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "115:",
            "description": "The XML-RPC request document could not be parsed.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "116:",
            "description": "One or more arguments contained a URL that has been used for abuse on Flickr.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.photosets.delete": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "photoset_id",
            "description": "The id of the photoset to delete. It must be owned by the calling user.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.galleries.getListForPhoto": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "photo_id",
            "description": "The ID of the photo to fetch a list of galleries for.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "per_page",
            "description": "Number of galleries to return per page. If this argument is omitted, it defaults to 100. The maximum allowed value is 500.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return. If this argument is omitted, it defaults to 1.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.photos.upload.checkTickets": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "tickets",
            "description": "A comma-delimited list of ticket ids",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.people.getPublicGroups": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "user_id",
            "description": "The NSID of the user to fetch groups for.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "invitation_only",
            "description": "Include public groups that require an invitation or administrator approval to join.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.urls.getUserPhotos": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "user_id",
            "description": "The NSID of the user to fetch the url for. If omitted, the calling user is assumed.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.stats.getPhotostreamReferrers": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "date",
            "description": "Stats will be returned for this date. This should be in either be in YYYY-MM-DD or unix timestamp format. A day according to Flickr Stats starts at midnight GMT for all users, and timestamps will automatically be rounded down to the start of the day.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "domain",
            "description": "The domain to return referrers for. This should be a hostname (eg: \"flickr.com\") with no protocol or pathname.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "per_page",
            "description": "Number of referrers to return per page. If this argument is omitted, it defaults to 25. The maximum allowed value is 100.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return. If this argument is omitted, it defaults to 1.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.people.getPublicPhotos": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "user_id",
            "description": "The NSID of the user who's photos to return.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "safe_search",
            "description": "Safe search setting: 1 for safe.\n2 for moderate.\n3 for restricted.\n(Please note: Un-authed calls can only see Safe content.)",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "extras",
            "description": "A comma-delimited list of extra information to fetch for each returned record. Currently supported fields are: description , license , date_upload , date_taken , owner_name , icon_server , original_format , last_update , geo , tags , machine_tags , o_dims , views , media , path_alias , url_sq , url_t , url_s , url_q , url_m , url_n , url_z , url_c , url_l , url_o",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "per_page",
            "description": "Number of photos to return per page. If this argument is omitted, it defaults to 100. The maximum allowed value is 500.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return. If this argument is omitted, it defaults to 1.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.contacts.getTaggingSuggestions": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "per_page",
            "description": "Number of contacts to return per page. If this argument is omitted, all contacts will be returned.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return. If this argument is omitted, it defaults to 1.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.testimonials.deleteTestimonial": {
      "DELETE": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "testimonial_id",
            "description": "",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.auth.getToken": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "frob",
            "description": "The frob to check.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.photos.setPerms": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "photo_id",
            "description": "The id of the photo to set permissions for.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "is_public",
            "description": "1 to set the photo to public, 0 to set it to private.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "is_friend",
            "description": "1 to make the photo visible to friends when private, 0 to not.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "is_family",
            "description": "1 to make the photo visible to family when private, 0 to not.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "perm_comment",
            "description": "who can add comments to the photo and it's notes. one of:\n0 : nobody\n1 : friends & family\n2 : contacts\n3 : everybody",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "perm_addmeta",
            "description": "who can add notes and tags to the photo. one of:\n0 : nobody / just the owner\n1 : friends & family\n2 : contacts\n3 : everybody",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.people.getPhotos": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "1:",
            "description": "",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "2:",
            "description": "A user_id was passed which did not match a valid flickr user.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "100:",
            "description": "The API key passed was not valid or has expired.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "105:",
            "description": "The requested service is temporarily unavailable.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "106:",
            "description": "The requested operation failed due to a temporary issue.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "111:",
            "description": "The requested response format was not found.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "112:",
            "description": "The requested method was not found.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "114:",
            "description": "The SOAP envelope send in the request could not be parsed.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "115:",
            "description": "The XML-RPC request document could not be parsed.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "116:",
            "description": "One or more arguments contained a URL that has been used for abuse on Flickr.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.panda.getPhotos": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "panda_name",
            "description": "The name of the panda to ask for photos from. There are currently three pandas named:\n\nling ling\nhsing hsing\nwang wang\n\nYou can fetch a list of all the current pandas using the flickr.panda.getList API method.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "extras",
            "description": "A comma-delimited list of extra information to fetch for each returned record. Currently supported fields are: description , license , date_upload , date_taken , owner_name , icon_server , original_format , last_update , geo , tags , machine_tags , o_dims , views , media , path_alias , url_sq , url_t , url_s , url_q , url_m , url_n , url_z , url_c , url_l , url_o",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "per_page",
            "description": "Number of photos to return per page. If this argument is omitted, it defaults to 100. The maximum allowed value is 500.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return. If this argument is omitted, it defaults to 1.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.photos.getWithoutGeoData": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "max_upload_date",
            "description": "Maximum upload date. Photos with an upload date less than or equal to this value will be returned. The date should be in the form of a unix timestamp.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "min_taken_date",
            "description": "Minimum taken date. Photos with an taken date greater than or equal to this value will be returned. The date can be in the form of a mysql datetime or unix timestamp.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "max_taken_date",
            "description": "Maximum taken date. Photos with an taken date less than or equal to this value will be returned. The date can be in the form of a mysql datetime or unix timestamp.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "privacy_filter",
            "description": "Return photos only matching a certain privacy level. Valid values are: 1 public photos\n2 private photos visible to friends\n3 private photos visible to family\n4 private photos visible to friends & family\n5 completely private photos\n",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "sort",
            "description": "The order in which to sort returned photos. Deafults to date-posted-desc. The possible values are: date-posted-asc, date-posted-desc, date-taken-asc, date-taken-desc, interestingness-desc, and interestingness-asc.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "media",
            "description": "Filter results by media type. Possible values are all (default), photos or videos",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "min_upload_date",
            "description": "Minimum upload date. Photos with an upload date greater than or equal to this value will be returned. The date can be in the form of a unix timestamp or mysql datetime.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "extras",
            "description": "A comma-delimited list of extra information to fetch for each returned record. Currently supported fields are: description , license , date_upload , date_taken , owner_name , icon_server , original_format , last_update , geo , tags , machine_tags , o_dims , views , media , path_alias , url_sq , url_t , url_s , url_q , url_m , url_n , url_z , url_c , url_l , url_o",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "per_page",
            "description": "Number of photos to return per page. If this argument is omitted, it defaults to 100. The maximum allowed value is 500.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return. If this argument is omitted, it defaults to 1.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.photos.notes.add": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "photo_id",
            "description": "The id of the photo to add a note to",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "note_x",
            "description": "The left coordinate of the note",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "note_y",
            "description": "The top coordinate of the note",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "note_w",
            "description": "The width of the note",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "note_h",
            "description": "The height of the note",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "note_text",
            "description": "The description of the note",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.groups.search": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "text",
            "description": "The text to search for.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "per_page",
            "description": "Number of groups to return per page. If this argument is ommited, it defaults to 100. The maximum allowed value is 500.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return. If this argument is ommited, it defaults to 1.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.photos.people.add": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "photo_id",
            "description": "The id of the photo to add a person to.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "user_id",
            "description": "The NSID of the user to add to the photo.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "person_x",
            "description": "The left-most pixel co-ordinate of the box around the person.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "person_y",
            "description": "The top-most pixel co-ordinate of the box around the person.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "person_w",
            "description": "The width (in pixels) of the box around the person.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "person_h",
            "description": "The height (in pixels) of the box around the person.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.galleries.addPhoto": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "1:",
            "description": "One or more required parameters was not included with your API call.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "2:",
            "description": "That gallery could not be found.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "3:",
            "description": "The requested photo could not be found.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "4:",
            "description": "The comment body could not be validated.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "5:",
            "description": "Unable to add the photo to the gallery.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "95:",
            "description": "SSL is required to access the Flickr API.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "96:",
            "description": "The passed signature was invalid.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "97:",
            "description": "The call required signing but no signature was sent.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "98:",
            "description": "The login details or auth token passed were invalid.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "99:",
            "description": "The method requires user authentication but the user was not logged in, or the authenticated method call did not have the required permissions.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "100:",
            "description": "The API key passed was not valid or has expired.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "105:",
            "description": "The requested service is temporarily unavailable.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "106:",
            "description": "The requested operation failed due to a temporary issue.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "111:",
            "description": "The requested response format was not found.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "112:",
            "description": "The requested method was not found.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "114:",
            "description": "The SOAP envelope send in the request could not be parsed.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "115:",
            "description": "The XML-RPC request document could not be parsed.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "116:",
            "description": "One or more arguments contained a URL that has been used for abuse on Flickr.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.places.getPlaceTypes": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.photos.suggestions.suggestLocation": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "photo_id",
            "description": "The photo whose location you are suggesting.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "lat",
            "description": "The latitude whose valid range is -90 to 90. Anything more than 6 decimal places will be truncated.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "lon",
            "description": "The longitude whose valid range is -180 to 180. Anything more than 6 decimal places will be truncated.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "accuracy",
            "description": "Recorded accuracy level of the location information. World level is 1, Country is ~3, Region ~6, City ~11, Street ~16. Current range is 1-16. Defaults to 16 if not specified.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "woe_id",
            "description": "The WOE ID of the location used to build the location hierarchy for the photo.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "place_id",
            "description": "The Flickr Places ID of the location used to build the location hierarchy for the photo.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "note",
            "description": "A short note or history to include with the suggestion.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.photos.geo.correctLocation": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "photo_id",
            "description": "The ID of the photo whose WOE location is being corrected.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "place_id",
            "description": "A Flickr Places ID. (While optional, you must pass either a valid Places ID or a WOE ID.)",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "woe_id",
            "description": "A Where On Earth (WOE) ID. (While optional, you must pass either a valid Places ID or a WOE ID.)",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "foursquare_id",
            "description": "The venue ID for a Foursquare location. (If not passed in with correction, any existing foursquare venue will be removed).",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.stats.getPhotostreamDomains": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "date",
            "description": "Stats will be returned for this date. This should be in either be in YYYY-MM-DD or unix timestamp format. A day according to Flickr Stats starts at midnight GMT for all users, and timestamps will automatically be rounded down to the start of the day.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "per_page",
            "description": "Number of domains to return per page. If this argument is omitted, it defaults to 25. The maximum allowed value is 100",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return. If this argument is omitted, it defaults to 1.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.photosets.addPhoto": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "photoset_id",
            "description": "The id of the photoset to add a photo to.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "photo_id",
            "description": "The id of the photo to add to the set.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.machinetags.getPredicates": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "namespace",
            "description": "Limit the list of predicates returned to those that have the following namespace.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "per_page",
            "description": "Number of photos to return per page. If this argument is omitted, it defaults to 100. The maximum allowed value is 500.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return. If this argument is omitted, it defaults to 1.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.urls.getUserProfile": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "user_id",
            "description": "The NSID of the user to fetch the url for. If omitted, the calling user is assumed.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.photos.search": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "user_id",
            "description": "The NSID of the user who's photo to search. If this parameter isn't passed then everybody's public photos will be searched. A value of \"me\" will search against the calling user's photos for authenticated calls.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "tags",
            "description": "A comma-delimited list of tags. Photos with one or more of the tags listed will be returned. You can exclude results that match a term by prepending it with a - character.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "tag_mode",
            "description": "Either 'any' for an OR combination of tags, or 'all' for an AND combination. Defaults to 'any' if not specified.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "text",
            "description": "A free text search. Photos who's title, description or tags contain the text will be returned. You can exclude results that match a term by prepending it with a - character.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "min_upload_date",
            "description": "Minimum upload date. Photos with an upload date greater than or equal to this value will be returned. The date can be in the form of a unix timestamp or mysql datetime.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "max_upload_date",
            "description": "Maximum upload date. Photos with an upload date less than or equal to this value will be returned. The date can be in the form of a unix timestamp or mysql datetime.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "min_taken_date",
            "description": "Minimum taken date. Photos with an taken date greater than or equal to this value will be returned. The date can be in the form of a mysql datetime or unix timestamp.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "max_taken_date",
            "description": "Maximum taken date. Photos with an taken date less than or equal to this value will be returned. The date can be in the form of a mysql datetime or unix timestamp.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "license",
            "description": "The license id for photos (for possible values see the flickr.photos.licenses.getInfo method). Multiple licenses may be comma-separated.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "sort",
            "description": "The order in which to sort returned photos. Deafults to date-posted-desc (unless you are doing a radial geo query, in which case the default sorting is by ascending distance from the point specified). The possible values are: date-posted-asc, date-posted-desc, date-taken-asc, date-taken-desc, interestingness-desc, interestingness-asc, and relevance.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "privacy_filter",
            "description": "Return photos only matching a certain privacy level. This only applies when making an authenticated call to view photos you own. Valid values are: 1 public photos\n2 private photos visible to friends\n3 private photos visible to family\n4 private photos visible to friends & family\n5 completely private photos\n",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "bbox",
            "description": "A comma-delimited list of 4 values defining the Bounding Box of the area that will be searched.\n\nThe 4 values represent the bottom-left corner of the box and the top-right corner, minimum_longitude, minimum_latitude, maximum_longitude, maximum_latitude.\n\nLongitude has a range of -180 to 180 , latitude of -90 to 90. Defaults to -180, -90, 180, 90 if not specified.\n\nUnlike standard photo queries, geo (or bounding box) queries will only return 250 results per page.\n\nGeo queries require some sort of limiting agent in order to prevent the database from crying. This is basically like the check against \"parameterless searches\" for queries without a geo component.\n\nA tag, for instance, is considered a limiting agent as are user defined min_date_taken and min_date_upload parameters — If no limiting factor is passed we return only photos added in the last 12 hours (though we may extend the limit in the future).",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "accuracy",
            "description": "Recorded accuracy level of the location information. Current range is 1-16 : World level is 1\nCountry is ~3\nRegion is ~6\nCity is ~11\nStreet is ~16\nDefaults to maximum value if not specified.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "safe_search",
            "description": "Safe search setting: 1 for safe.\n2 for moderate.\n3 for restricted.\n(Please note: Un-authed calls can only see Safe content.)",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "content_type",
            "description": "Content Type setting: 1 for photos only.\n2 for screenshots only.\n3 for 'other' only.\n4 for photos and screenshots.\n5 for screenshots and 'other'.\n6 for photos and 'other'.\n7 for photos, screenshots, and 'other' (all).\n",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "machine_tags",
            "description": "Aside from passing in a fully formed machine tag, there is a special syntax for searching on specific properties : Find photos using the 'dc' namespace : \"machine_tags\" => \"dc:\"\nFind photos with a title in the 'dc' namespace : \"machine_tags\" => \"dc:title=\"\nFind photos titled \"mr. camera\" in the 'dc' namespace : \"machine_tags\" => \"dc:title=\\\"mr. camera\\\"\nFind photos whose value is \"mr. camera\" : \"machine_tags\" => \"*:*=\\\"mr. camera\\\"\"\nFind photos that have a title, in any namespace : \"machine_tags\" => \"*:title=\"\nFind photos that have a title, in any namespace, whose value is \"mr. camera\" : \"machine_tags\" => \"*:title=\\\"mr. camera\\\"\"\nFind photos, in the 'dc' namespace whose value is \"mr. camera\" : \"machine_tags\" => \"dc:*=\\\"mr. camera\\\"\"\nMultiple machine tags may be queried by passing a comma-separated list. The number of machine tags you can pass in a single query depends on the tag mode (AND or OR) that you are querying with. \"AND\" queries are limited to (16) machine tags. \"OR\" queries are limited to (8).",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "machine_tag_mode",
            "description": "Either 'any' for an OR combination of tags, or 'all' for an AND combination. Defaults to 'any' if not specified.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "group_id",
            "description": "The id of a group who's pool to search. If specified, only matching photos posted to the group's pool will be returned.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "contacts",
            "description": "Search your contacts. Either 'all' or 'ff' for just friends and family. (Experimental)",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "woe_id",
            "description": "A 32-bit identifier that uniquely represents spatial entities. (not used if bbox argument is present).\n\nGeo queries require some sort of limiting agent in order to prevent the database from crying. This is basically like the check against \"parameterless searches\" for queries without a geo component.\n\nA tag, for instance, is considered a limiting agent as are user defined min_date_taken and min_date_upload parameters — If no limiting factor is passed we return only photos added in the last 12 hours (though we may extend the limit in the future).",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "place_id",
            "description": "A Flickr place id. (not used if bbox argument is present).\n\nGeo queries require some sort of limiting agent in order to prevent the database from crying. This is basically like the check against \"parameterless searches\" for queries without a geo component.\n\nA tag, for instance, is considered a limiting agent as are user defined min_date_taken and min_date_upload parameters — If no limiting factor is passed we return only photos added in the last 12 hours (though we may extend the limit in the future).",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "media",
            "description": "Filter results by media type. Possible values are all (default), photos or videos",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "has_geo",
            "description": "Any photo that has been geotagged, or if the value is \"0\" any photo that has not been geotagged.\n\nGeo queries require some sort of limiting agent in order to prevent the database from crying. This is basically like the check against \"parameterless searches\" for queries without a geo component.\n\nA tag, for instance, is considered a limiting agent as are user defined min_date_taken and min_date_upload parameters — If no limiting factor is passed we return only photos added in the last 12 hours (though we may extend the limit in the future).",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "geo_context",
            "description": "Geo context is a numeric value representing the photo's geotagginess beyond latitude and longitude. For example, you may wish to search for photos that were taken \"indoors\" or \"outdoors\".\n\nThe current list of context IDs is :\n\n0 , not defined.\n1 , indoors.\n2 , outdoors.\n\n\nGeo queries require some sort of limiting agent in order to prevent the database from crying. This is basically like the check against \"parameterless searches\" for queries without a geo component.\n\nA tag, for instance, is considered a limiting agent as are user defined min_date_taken and min_date_upload parameters — If no limiting factor is passed we return only photos added in the last 12 hours (though we may extend the limit in the future).",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "lat",
            "description": "A valid latitude, in decimal format, for doing radial geo queries.\n\nGeo queries require some sort of limiting agent in order to prevent the database from crying. This is basically like the check against \"parameterless searches\" for queries without a geo component.\n\nA tag, for instance, is considered a limiting agent as are user defined min_date_taken and min_date_upload parameters — If no limiting factor is passed we return only photos added in the last 12 hours (though we may extend the limit in the future).",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "lon",
            "description": "A valid longitude, in decimal format, for doing radial geo queries.\n\nGeo queries require some sort of limiting agent in order to prevent the database from crying. This is basically like the check against \"parameterless searches\" for queries without a geo component.\n\nA tag, for instance, is considered a limiting agent as are user defined min_date_taken and min_date_upload parameters — If no limiting factor is passed we return only photos added in the last 12 hours (though we may extend the limit in the future).",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "radius",
            "description": "A valid radius used for geo queries, greater than zero and less than 20 miles (or 32 kilometers), for use with point-based geo queries. The default value is 5 (km).",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "radius_units",
            "description": "The unit of measure when doing radial geo queries. Valid options are \"mi\" (miles) and \"km\" (kilometers). The default is \"km\".",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "is_commons",
            "description": "Limit the scope of the search to only photos that are part of the Flickr Commons project . Default is false.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "in_gallery",
            "description": "Limit the scope of the search to only photos that are in a gallery ? Default is false, search all photos.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "is_getty",
            "description": "Limit the scope of the search to only photos that are for sale on Getty. Default is false.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "extras",
            "description": "A comma-delimited list of extra information to fetch for each returned record. Currently supported fields are: description , license , date_upload , date_taken , owner_name , icon_server , original_format , last_update , geo , tags , machine_tags , o_dims , views , media , path_alias , url_sq , url_t , url_s , url_q , url_m , url_n , url_z , url_c , url_l , url_o",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "per_page",
            "description": "Number of photos to return per page. If this argument is omitted, it defaults to 100. The maximum allowed value is 500.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return. If this argument is omitted, it defaults to 1.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.stats.getPhotoStats": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "date",
            "description": "Stats will be returned for this date. This should be in either be in YYYY-MM-DD or unix timestamp format. A day according to Flickr Stats starts at midnight GMT for all users, and timestamps will automatically be rounded down to the start of the day.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "photo_id",
            "description": "The id of the photo to get stats for.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.favorites.getContext": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "photo_id",
            "description": "The id of the photo to fetch the context for.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "user_id",
            "description": "The user who counts the photo as a favorite.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.tags.getListPhoto": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "photo_id",
            "description": "The id of the photo to return tags for.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.people.getGroups": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "user_id",
            "description": "The NSID of the user to fetch groups for.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "extras",
            "description": "A comma-delimited list of extra information to fetch for each returned record. Currently supported fields are: privacy , throttle , restrictions",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.prefs.getPrivacy": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.galleries.editPhotos": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "gallery_id",
            "description": "The id of the gallery to modify. The gallery must belong to the calling user.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "primary_photo_id",
            "description": "The id of the photo to use as the 'primary' photo for the gallery. This id must also be passed along in photo_ids list argument.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "photo_ids",
            "description": "A comma-delimited list of photo ids to include in the gallery. They will appear in the set in the order sent. This list must contain the primary photo id. This list of photos replaces the existing list.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.stats.getPhotosetReferrers": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "date",
            "description": "Stats will be returned for this date. This should be in either be in YYYY-MM-DD or unix timestamp format. A day according to Flickr Stats starts at midnight GMT for all users, and timestamps will automatically be rounded down to the start of the day.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "domain",
            "description": "The domain to return referrers for. This should be a hostname (eg: \"flickr.com\") with no protocol or pathname.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "photoset_id",
            "description": "The id of the photoset to get stats for. If not provided, stats for all sets will be returned.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "per_page",
            "description": "Number of referrers to return per page. If this argument is omitted, it defaults to 25. The maximum allowed value is 100.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return. If this argument is omitted, it defaults to 1.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.push.subscribe": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "1:",
            "description": "One of the required arguments for the method was not provided.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "2:",
            "description": "One of the arguments was specified with an illegal value.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "3:",
            "description": "A different subscription already exists that uses the same callback URL.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "4:",
            "description": "The verification callback failed, or failed to return the expected response to confirm the subscription.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "5:",
            "description": "PuSH subscriptions are currently restricted to Pro account holders.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "6:",
            "description": "A subscription with those details exists already, but it is in a pending (non-verified) state. Please wait a bit for the verification callback to complete before attempting to update the subscription.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "95:",
            "description": "SSL is required to access the Flickr API.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "96:",
            "description": "The passed signature was invalid.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "97:",
            "description": "The call required signing but no signature was sent.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "98:",
            "description": "The login details or auth token passed were invalid.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "99:",
            "description": "The method requires user authentication but the user was not logged in, or the authenticated method call did not have the required permissions.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "100:",
            "description": "The API key passed was not valid or has expired.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "105:",
            "description": "The requested service is temporarily unavailable.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "106:",
            "description": "The requested operation failed due to a temporary issue.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "111:",
            "description": "The requested response format was not found.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "112:",
            "description": "The requested method was not found.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "114:",
            "description": "The SOAP envelope send in the request could not be parsed.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "115:",
            "description": "The XML-RPC request document could not be parsed.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "116:",
            "description": "One or more arguments contained a URL that has been used for abuse on Flickr.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.groups.getInfo": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "group_id",
            "description": "The NSID of the group to fetch information for.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "group_path_alias",
            "description": "The path alias of the group. One of this or the group_id param is required",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "lang",
            "description": "The language of the group name and description to fetch. If the language is not found, the primary language of the group will be returned. Valid values are the same as in feeds .",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.tags.getClusterPhotos": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "path",
            "name": "tag",
            "description": "The tag that this cluster belongs to.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "cluster_id",
            "description": "The top three tags for the cluster, separated by dashes (just like the url).",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.machinetags.getPairs": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "namespace",
            "description": "Limit the list of pairs returned to those that have the following namespace.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "predicate",
            "description": "Limit the list of pairs returned to those that have the following predicate.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "per_page",
            "description": "Number of photos to return per page. If this argument is omitted, it defaults to 100. The maximum allowed value is 500.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return. If this argument is omitted, it defaults to 1.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.photos.people.editCoords": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "photo_id",
            "description": "The id of the photo to edit a person in.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "user_id",
            "description": "The NSID of the person to edit in a photo.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "person_x",
            "description": "The left-most pixel co-ordinate of the box around the person.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "person_y",
            "description": "The top-most pixel co-ordinate of the box around the person.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "person_w",
            "description": "The width (in pixels) of the box around the person.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "person_h",
            "description": "The height (in pixels) of the box around the person.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.tags.getListUserPopular": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "user_id",
            "description": "The NSID of the user to fetch the tag list for. If this argument is not specified, the currently logged in user (if any) is assumed.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "count",
            "description": "Number of popular tags to return. defaults to 10 when this argument is not present.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.photosets.orderSets": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "photoset_ids",
            "description": "A comma delimited list of photoset IDs, ordered with the set to show first, first in the list. Any set IDs not given in the list will be set to appear at the end of the list, ordered by their IDs.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.collections.getInfo": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "collection_id",
            "description": "The ID of the collection to fetch information for.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.photos.recentlyUpdated": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "1:",
            "description": "Some or all of the required arguments were not supplied.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "2:",
            "description": "The date argument did not pass validation.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "95:",
            "description": "SSL is required to access the Flickr API.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "96:",
            "description": "The passed signature was invalid.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "97:",
            "description": "The call required signing but no signature was sent.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "98:",
            "description": "The login details or auth token passed were invalid.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "99:",
            "description": "The method requires user authentication but the user was not logged in, or the authenticated method call did not have the required permissions.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "100:",
            "description": "The API key passed was not valid or has expired.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "105:",
            "description": "The requested service is temporarily unavailable.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "106:",
            "description": "The requested operation failed due to a temporary issue.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "111:",
            "description": "The requested response format was not found.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "112:",
            "description": "The requested method was not found.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "114:",
            "description": "The SOAP envelope send in the request could not be parsed.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "115:",
            "description": "The XML-RPC request document could not be parsed.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "116:",
            "description": "One or more arguments contained a URL that has been used for abuse on Flickr.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.photos.getPopular": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "user_id",
            "description": "The NSID of the user to get a galleries list for. If none is specified, the calling user is assumed.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "sort",
            "description": "The sort order. One of faves , views , comments or interesting . Deafults to interesting .",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "extras",
            "description": "A comma-delimited list of extra information to fetch for each returned record. Currently supported fields are: description , license , date_upload , date_taken , owner_name , icon_server , original_format , last_update , geo , tags , machine_tags , o_dims , views , media , path_alias , url_sq , url_t , url_s , url_q , url_m , url_n , url_z , url_c , url_l , url_o",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "per_page",
            "description": "Number of photos to return per page. If this argument is omitted, it defaults to 100. The maximum allowed value is 500.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return. If this argument is omitted, it defaults to 1.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.stats.getPopularPhotos": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "date",
            "description": "Stats will be returned for this date. This should be in either be in YYYY-MM-DD or unix timestamp format. A day according to Flickr Stats starts at midnight GMT for all users, and timestamps will automatically be rounded down to the start of the day. If no date is provided, all time view counts will be returned.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "sort",
            "description": "The order in which to sort returned photos. Defaults to views. The possible values are views, comments and favorites. Other sort options are available through flickr.photos.search .",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "per_page",
            "description": "Number of referrers to return per page. If this argument is omitted, it defaults to 25. The maximum allowed value is 100.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return. If this argument is omitted, it defaults to 1.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.testimonials.getAllTestimonialsAbout": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "page",
            "description": "Page number. Default is 0",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "per_page",
            "description": "Number of testimonials to return per page. Default is 10, maximum is 50",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.reflection.getMethodInfo": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "method_name",
            "description": "The name of the method to fetch information for.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.places.find": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "1:",
            "description": "One or more required parameters was not included with the API call.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "100:",
            "description": "The API key passed was not valid or has expired.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "105:",
            "description": "The requested service is temporarily unavailable.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "106:",
            "description": "The requested operation failed due to a temporary issue.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "111:",
            "description": "The requested response format was not found.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "112:",
            "description": "The requested method was not found.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "114:",
            "description": "The SOAP envelope send in the request could not be parsed.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "115:",
            "description": "The XML-RPC request document could not be parsed.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "116:",
            "description": "One or more arguments contained a URL that has been used for abuse on Flickr.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.places.findByLatLon": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "1:",
            "description": "One or more required parameters was not included with the API request.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "2:",
            "description": "The latitude argument failed validation.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "3:",
            "description": "The longitude argument failed validation.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "4:",
            "description": "The accuracy argument failed validation.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "100:",
            "description": "The API key passed was not valid or has expired.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "105:",
            "description": "The requested service is temporarily unavailable.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "106:",
            "description": "The requested operation failed due to a temporary issue.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "111:",
            "description": "The requested response format was not found.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "112:",
            "description": "The requested method was not found.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "114:",
            "description": "The SOAP envelope send in the request could not be parsed.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "115:",
            "description": "The XML-RPC request document could not be parsed.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "116:",
            "description": "One or more arguments contained a URL that has been used for abuse on Flickr.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.blogs.getList": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "service",
            "description": "Optionally only return blogs for a given service id. You can get a list of from flickr.blogs.getServices() .",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.photosets.comments.deleteComment": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "comment_id",
            "description": "The id of the comment to delete from a photoset.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.stats.getPhotosetDomains": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "date",
            "description": "Stats will be returned for this date. This should be in either be in YYYY-MM-DD or unix timestamp format. A day according to Flickr Stats starts at midnight GMT for all users, and timestamps will automatically be rounded down to the start of the day.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "photoset_id",
            "description": "The id of the photoset to get stats for. If not provided, stats for all sets will be returned.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "per_page",
            "description": "Number of domains to return per page. If this argument is omitted, it defaults to 25. The maximum allowed value is 100.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return. If this argument is omitted, it defaults to 1.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.machinetags.getRecentValues": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "namespace",
            "description": "A namespace that all values should be restricted to.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "predicate",
            "description": "A predicate that all values should be restricted to.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "added_since",
            "description": "Only return machine tags values that have been added since this timestamp, in epoch seconds.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.groups.pools.getGroups": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return. If this argument is omitted, it defaults to 1.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "per_page",
            "description": "Number of groups to return per page. If this argument is omitted, it defaults to 400. The maximum allowed value is 400.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.photos.setDates": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "photo_id",
            "description": "The id of the photo to edit dates for.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "date_posted",
            "description": "The date the photo was uploaded to flickr (see the dates documentation )",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "date_taken",
            "description": "The date the photo was taken (see the dates documentation )",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "date_taken_granularity",
            "description": "The granularity of the date the photo was taken (see the dates documentation )",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.people.findByUsername": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "username",
            "description": "The username of the user to lookup.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.machinetags.getNamespaces": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "predicate",
            "description": "Limit the list of namespaces returned to those that have the following predicate.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "per_page",
            "description": "Number of photos to return per page. If this argument is omitted, it defaults to 100. The maximum allowed value is 500.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return. If this argument is omitted, it defaults to 1.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.photos.getContext": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "photo_id",
            "description": "The id of the photo to fetch the context for.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.photos.people.getList": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "photo_id",
            "description": "The id of the photo to get a list of people for.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.testimonials.approveTestimonial": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "testimonial_id",
            "description": "ID of the testimonial to approve",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.testimonials.getTestimonialsAbout": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "user_id",
            "description": "ID of the user to get testimonials about",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "page",
            "description": "Page number. Default is 0",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "per_page",
            "description": "Number of testimonials to return per page. Default is 10, maximum is 50",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.photosets.getList": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "user_id",
            "description": "The NSID of the user to get a photoset list for. If none is specified, the calling user is assumed.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to get. Currently, if this is not provided, all sets are returned, but this behaviour may change in future.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "per_page",
            "description": "The number of sets to get per page. If paging is enabled, the maximum number of sets per page is 500.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "primary_photo_extras",
            "description": "A comma-delimited list of extra information to fetch for the primary photo. Currently supported fields are: license, date_upload, date_taken, owner_name, icon_server, original_format, last_update, geo, tags, machine_tags, o_dims, views, media, path_alias, url_sq, url_t, url_s, url_m, url_o",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.photosets.removePhotos": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "photoset_id",
            "description": "The id of the photoset to remove photos from.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "photo_ids",
            "description": "Comma-delimited list of photo ids to remove from the photoset.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.groups.discuss.replies.getInfo": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "group_id",
            "description": "Pass in the group id to where the topic belongs. Can be NSID or group alias. Making this parameter optional for legacy reasons, but it is highly recommended to pass this in to get faster performance.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "topic_id",
            "description": "The ID of the topic the post is in.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "reply_id",
            "description": "The ID of the reply to fetch.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.testimonials.getPendingTestimonialsAbout": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "page",
            "description": "Page number. Default is 0",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "per_page",
            "description": "Number of testimonials to return per page. Default is 10, maximum is 50",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.galleries.getInfo": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "gallery_id",
            "description": "The gallery ID you are requesting information for.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.galleries.getList": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "user_id",
            "description": "The NSID of the user to get a galleries list for. If none is specified, the calling user is assumed.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "per_page",
            "description": "Number of galleries to return per page. If this argument is omitted, it defaults to 100. The maximum allowed value is 500.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return. If this argument is omitted, it defaults to 1.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "primary_photo_extras",
            "description": "A comma-delimited list of extra information to fetch for the primary photo. Currently supported fields are: license, date_upload, date_taken, owner_name, icon_server, original_format, last_update, geo, tags, machine_tags, o_dims, views, media, path_alias, url_sq, url_t, url_s, url_m, url_o",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.urls.lookupGroup": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "path",
            "name": "url",
            "description": "The url to the group's page or photo pool.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.photos.setSafetyLevel": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "photo_id",
            "description": "The id of the photo to set the adultness of.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "safety_level",
            "description": "The safety level of the photo. Must be one of: 1 for Safe, 2 for Moderate, and 3 for Restricted.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "hidden",
            "description": "Whether or not to additionally hide the photo from public searches. Must be either 1 for Yes or 0 for No.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.urls.getGroup": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "group_id",
            "description": "The NSID of the group to fetch the url for.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.favorites.getList": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "user_id",
            "description": "The NSID of the user to fetch the favorites list for. If this argument is omitted, the favorites list for the calling user is returned.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "min_fave_date",
            "description": "Minimum date that a photo was favorited on. The date should be in the form of a unix timestamp.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "max_fave_date",
            "description": "Maximum date that a photo was favorited on. The date should be in the form of a unix timestamp.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "extras",
            "description": "A comma-delimited list of extra information to fetch for each returned record. Currently supported fields are: description , license , date_upload , date_taken , owner_name , icon_server , original_format , last_update , geo , tags , machine_tags , o_dims , views , media , path_alias , url_sq , url_t , url_s , url_q , url_m , url_n , url_z , url_c , url_l , url_o",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "per_page",
            "description": "Number of photos to return per page. If this argument is omitted, it defaults to 100. The maximum allowed value is 500.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return. If this argument is omitted, it defaults to 1.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.testimonials.editTestimonial": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "user_id",
            "description": "The NSID of the user the testimonial is about",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "testimonial_id",
            "description": "The ID of the testimonial to edit",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "testimonial_text",
            "description": "The text of the testimonial. HTML/BBCode is not accepted",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.places.tagsForPlace": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "woe_id",
            "description": "A Where on Earth identifier to use to filter photo clusters.\n\n(While optional, you must pass either a valid Places ID or a WOE ID.)",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "place_id",
            "description": "A Flickr Places identifier to use to filter photo clusters.\n\n(While optional, you must pass either a valid Places ID or a WOE ID.)",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "min_upload_date",
            "description": "Minimum upload date. Photos with an upload date greater than or equal to this value will be returned. The date should be in the form of a unix timestamp.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "max_upload_date",
            "description": "Maximum upload date. Photos with an upload date less than or equal to this value will be returned. The date should be in the form of a unix timestamp.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "min_taken_date",
            "description": "Minimum taken date. Photos with an taken date greater than or equal to this value will be returned. The date should be in the form of a mysql datetime.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "max_taken_date",
            "description": "Maximum taken date. Photos with an taken date less than or equal to this value will be returned. The date should be in the form of a mysql datetime.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.prefs.getHidden": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.prefs.getGeoPerms": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.people.getUploadStatus": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.favorites.remove": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "photo_id",
            "description": "The id of the photo to remove from the user's favorites.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.photosets.getInfo": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "photoset_id",
            "description": "The ID of the photoset to fetch information for.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "user_id",
            "description": "The user_id here is the owner of the set passed in photoset_id. This is optional, but passing this gives better performance.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.blogs.getServices": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.photos.addTags": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "photo_id",
            "description": "The id of the photo to add tags to.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "tags",
            "description": "The tags to add to the photo.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.groups.discuss.replies.getList": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "group_id",
            "description": "Pass in the group id to where the topic belongs. Can be NSID or group alias. Making this parameter optional for legacy reasons, but it is highly recommended to pass this in to get faster performance.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "topic_id",
            "description": "The ID of the topic to fetch replies for.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "per_page",
            "description": "Number of photos to return per page. If this argument is omitted, it defaults to 100. The maximum allowed value is 500.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return. If this argument is omitted, it defaults to 1.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.photosets.comments.getList": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "photoset_id",
            "description": "The id of the photoset to fetch comments for.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.places.placesForBoundingBox": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "bbox",
            "description": "A comma-delimited list of 4 values defining the Bounding Box of the area that will be searched. The 4 values represent the bottom-left corner of the box and the top-right corner, minimum_longitude, minimum_latitude, maximum_longitude, maximum_latitude.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "place_type",
            "description": "The name of place type to using as the starting point to search for places in a bounding box. Valid placetypes are: neighbourhood\nlocality\ncounty\nregion\ncountry\ncontinent\n\nThe \"place_type\" argument has been deprecated in favor of the \"place_type_id\" argument. It won't go away but it will not be added to new methods. A complete list of place type IDs is available using the flickr.places.getPlaceTypes method. (While optional, you must pass either a valid place type or place type ID.)",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "place_type_id",
            "description": "The numeric ID for a specific place type to cluster photos by.\n\nValid place type IDs are : 22 : neighbourhood\n7 : locality\n8 : region\n12 : country\n29 : continent\n\n(While optional, you must pass either a valid place type or place type ID.)",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.places.getTopPlacesList": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "place_type_id",
            "description": "The numeric ID for a specific place type to cluster photos by.\n\nValid place type IDs are : 22 : neighbourhood\n7 : locality\n8 : region\n12 : country\n29 : continent\n",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "date",
            "description": "A valid date in YYYY-MM-DD format. The default is yesterday.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "woe_id",
            "description": "Limit your query to only those top places belonging to a specific Where on Earth (WOE) identifier.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "place_id",
            "description": "Limit your query to only those top places belonging to a specific Flickr Places identifier.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.testimonials.getAllTestimonialsBy": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "page",
            "description": "Page number. Default is 0",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "per_page",
            "description": "Number of testimonials to return per page. Default is 10, maximum is 50",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.contacts.getListRecentlyUploaded": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "date_lastupload",
            "description": "Limits the resultset to contacts that have uploaded photos since this date. The date should be in the form of a Unix timestamp. The default offset is (1) hour and the maximum (24) hours.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "filter",
            "description": "Limit the result set to all contacts or only those who are friends or family. Valid options are: ff friends and family\nall all your contacts\nDefault value is \"all\".",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.photos.people.deleteCoords": {
      "DELETE": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "photo_id",
            "description": "The id of the photo to edit a person in.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "user_id",
            "description": "The NSID of the person whose bounding box you want to remove.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.photos.getFavorites": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "photo_id",
            "description": "The ID of the photo to fetch the favoriters list for.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return. If this argument is omitted, it defaults to 1.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "per_page",
            "description": "Number of usres to return per page. If this argument is omitted, it defaults to 10. The maximum allowed value is 50.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.blogs.postPhoto": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "blog_id",
            "description": "The id of the blog to post to.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "photo_id",
            "description": "The id of the photo to blog",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "title",
            "description": "The blog post title",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "description",
            "description": "The blog post body",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "blog_password",
            "description": "The password for the blog (used when the blog does not have a stored password).",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "service",
            "description": "A Flickr supported blogging service. Instead of passing a blog id you can pass a service id and we'll post to the first blog of that service we find.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.photosets.editMeta": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "photoset_id",
            "description": "The id of the photoset to modify.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "title",
            "description": "The new title for the photoset.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "description",
            "description": "A description of the photoset. May contain limited html.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.testimonials.getTestimonialsBy": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "user_id",
            "description": "ID of the user to get testimonials written by",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "page",
            "description": "Page number. Default is 0",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "per_page",
            "description": "Number of testimonials to return per page. Default is 10, maximum is 50",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.photos.licenses.setLicense": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "photo_id",
            "description": "The photo to update the license for.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "license_id",
            "description": "The license to apply, or 0 (zero) to remove the current license. Note : as of this writing the \"no known copyright restrictions\" license (7) is not a valid argument.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.photos.suggestions.getList": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "photo_id",
            "description": "Only show suggestions for a single photo.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "status_id",
            "description": "Only show suggestions with a given status. 0 , pending\n1 , approved\n2 , rejected\nThe default is pending (or \"0\").",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.urls.lookupUser": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "path",
            "name": "url",
            "description": "The url to the user's profile or photos page.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.photosets.editPhotos": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "photoset_id",
            "description": "The id of the photoset to modify. The photoset must belong to the calling user.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "primary_photo_id",
            "description": "The id of the photo to use as the 'primary' photo for the set. This id must also be passed along in photo_ids list argument.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "photo_ids",
            "description": "A comma-delimited list of photo ids to include in the set. They will appear in the set in the order sent. This list must contain the primary photo id. All photos must belong to the owner of the set. This list of photos replaces the existing list. Call flickr.photosets.addPhoto to append a photo to a set.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.photos.comments.deleteComment": {
      "DELETE": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "comment_id",
            "description": "The id of the comment to edit.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.prefs.getSafetyLevel": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.auth.oauth.getAccessToken": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.photos.getUntagged": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "min_upload_date",
            "description": "Minimum upload date. Photos with an upload date greater than or equal to this value will be returned. The date can be in the form of a unix timestamp or mysql datetime.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "max_upload_date",
            "description": "Maximum upload date. Photos with an upload date less than or equal to this value will be returned. The date can be in the form of a unix timestamp or mysql datetime.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "min_taken_date",
            "description": "Minimum taken date. Photos with an taken date greater than or equal to this value will be returned. The date should be in the form of a mysql datetime or unix timestamp.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "max_taken_date",
            "description": "Maximum taken date. Photos with an taken date less than or equal to this value will be returned. The date can be in the form of a mysql datetime or unix timestamp.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "privacy_filter",
            "description": "Return photos only matching a certain privacy level. Valid values are: 1 public photos\n2 private photos visible to friends\n3 private photos visible to family\n4 private photos visible to friends & family\n5 completely private photos\n",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "media",
            "description": "Filter results by media type. Possible values are all (default), photos or videos",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "extras",
            "description": "A comma-delimited list of extra information to fetch for each returned record. Currently supported fields are: description , license , date_upload , date_taken , owner_name , icon_server , original_format , last_update , geo , tags , machine_tags , o_dims , views , media , path_alias , url_sq , url_t , url_s , url_q , url_m , url_n , url_z , url_c , url_l , url_o",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "per_page",
            "description": "Number of photos to return per page. If this argument is omitted, it defaults to 100. The maximum allowed value is 500.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "page",
            "description": "The page of results to return. If this argument is omitted, it defaults to 1.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.places.placesForContacts": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "place_type",
            "description": "A specific place type to cluster photos by.\n\nValid place types are : neighbourhood (and neighborhood)\nlocality\nregion\ncountry\ncontinent\n\nThe \"place_type\" argument has been deprecated in favor of the \"place_type_id\" argument. It won't go away but it will not be added to new methods. A complete list of place type IDs is available using the flickr.places.getPlaceTypes method. (While optional, you must pass either a valid place type or place type ID.)",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "place_type_id",
            "description": "The numeric ID for a specific place type to cluster photos by.\n\nValid place type IDs are : 22 : neighbourhood\n7 : locality\n8 : region\n12 : country\n29 : continent\n\n(While optional, you must pass either a valid place type or place type ID.)",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "woe_id",
            "description": "A Where on Earth identifier to use to filter photo clusters. For example all the photos clustered by locality in the United States (WOE ID 23424977 ).\n\n(While optional, you must pass either a valid Places ID or a WOE ID.)",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "place_id",
            "description": "A Flickr Places identifier to use to filter photo clusters. For example all the photos clustered by locality in the United States (Place ID 4KO02SibApitvSBieQ ).\n\n(While optional, you must pass either a valid Places ID or a WOE ID.)",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "threshold",
            "description": "The minimum number of photos that a place type must have to be included. If the number of photos is lowered then the parent place type for that place will be used.\n\nFor example if your contacts only have 3 photos taken in the locality of Montreal (WOE ID 3534) but your threshold is set to 5 then those photos will be \"rolled up\" and included instead with a place record for the region of Quebec (WOE ID 2344924).",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "contacts",
            "description": "Search your contacts. Either 'all' or 'ff' for just friends and family. (Default is all)",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "min_upload_date",
            "description": "Minimum upload date. Photos with an upload date greater than or equal to this value will be returned. The date should be in the form of a unix timestamp.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "max_upload_date",
            "description": "Maximum upload date. Photos with an upload date less than or equal to this value will be returned. The date should be in the form of a unix timestamp.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "min_taken_date",
            "description": "Minimum taken date. Photos with an taken date greater than or equal to this value will be returned. The date should be in the form of a mysql datetime.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "max_taken_date",
            "description": "Maximum taken date. Photos with an taken date less than or equal to this value will be returned. The date should be in the form of a mysql datetime.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.stats.getCSVFiles": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.testimonials.addTestimonial": {
      "POST": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "user_id",
            "description": "ID of the user the testimonial is about",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "testimonial_text",
            "description": "The text of the testimonial. HTML/BBCode is not accepted",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.stats.getPhotostreamStats": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "date",
            "description": "Stats will be returned for this date. This should be in either be in YYYY-MM-DD or unix timestamp format. A day according to Flickr Stats starts at midnight GMT for all users, and timestamps will automatically be rounded down to the start of the day.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.people.getLimits": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          }
        ]
      }
    },
    "?method=flickr.people.findByEmail": {
      "GET": {
        "parameters": [
          {
            "in": "query",
            "name": "api_key",
            "description": "Your API application key. See here for more details.",
            "type": "integer",
            "required": true
          },
          {
            "in": "query",
            "name": "find_email",
            "description": "The email address of the user to find (may be primary or secondary).",
            "type": "integer",
            "required": true
          }
        ]
      }
    }
  },
  "produces": "application/json",
  "host": "creativecommons.org",
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": "This is the information of the API"
}