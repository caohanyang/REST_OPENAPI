Phase: ThingsForPMI
Input: Token MultiWord Person Organization Location
Options: control = all


Rule: SimpleNoun
({Token.kind == "word", Token.category ==~ "N.*", Token.length > 2}):token
-->
:token.Noun = { rule = "SimpleNoun", canonical = :token.Token.root },
:token.SimpleNoun =  { rule = "SimpleNoun", canonical = :token.Token.root }


Rule: Verb
({Token.kind == "word", Token.category ==~ "V.*", Token.length > 2}):token
-->
:token.Verb = { rule = "Verb", canonical = :token.Token.root }


Rule: MultiWord
({MultiWord}):match
-->
:match.Noun = { rule = "MultiWord", canonical = :match.MultiWord.canonical },
:match.CompoundNoun =  { rule = "MultiWord", canonical = :match.MultiWord.canonical }


Rule: NamedEntity
({Person}|{Organization}|{Location}):match
-->
:match {
   Annotation match = gate.Utils.getOnlyAnn(matchAnnots);
   String canonical = gate.Utils.cleanStringFor(doc, match).toLowerCase();
   
   FeatureMap fm = Factory.newFeatureMap();	
   fm.putAll(match.getFeatures());
   fm.put("canonical", canonical);
   fm.put("original_type", match.getType());
   gate.Utils.addAnn(outputAS, match, "NamedEntity", fm);
}
